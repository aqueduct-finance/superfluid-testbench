{
  "contractName": "SuperTokenFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "contract ISuperToken",
          "name": "superTokenLogic",
          "type": "address"
        },
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        },
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_FACTORY_ALREADY_EXISTS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_FACTORY_DOES_NOT_EXIST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_FACTORY_NON_UPGRADEABLE_IS_DEPRECATED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_FACTORY_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_FACTORY_UNINITIALIZED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_FACTORY_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uuid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "name": "CodeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "CustomSuperTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SuperTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperToken",
          "name": "tokenLogic",
          "type": "address"
        }
      ],
      "name": "SuperTokenLogicCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONSTANT_INFLOW_NFT_LOGIC",
      "outputs": [
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_OUTFLOW_NFT_LOGIC",
      "outputs": [
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_SUPER_TOKEN_LOGIC",
      "outputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "castrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_underlyingToken",
          "type": "address"
        }
      ],
      "name": "computeCanonicalERC20WrapperAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "superTokenAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isDeployed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20WithTokenInfo",
          "name": "_underlyingToken",
          "type": "address"
        }
      ],
      "name": "createCanonicalERC20Wrapper",
      "outputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20WithTokenInfo",
          "name": "underlyingToken",
          "type": "address"
        },
        {
          "internalType": "enum ISuperTokenFactory.Upgradability",
          "name": "upgradability",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "createERC20Wrapper",
      "outputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "superToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "underlyingToken",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "underlyingDecimals",
          "type": "uint8"
        },
        {
          "internalType": "enum ISuperTokenFactory.Upgradability",
          "name": "upgradability",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "createERC20Wrapper",
      "outputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "superToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_underlyingTokenAddress",
          "type": "address"
        }
      ],
      "name": "getCanonicalERC20Wrapper",
      "outputs": [
        {
          "internalType": "address",
          "name": "superTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCodeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSuperTokenLogic",
      "outputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "superToken",
              "type": "address"
            }
          ],
          "internalType": "struct SuperTokenFactoryBase.InitializeData[]",
          "name": "_data",
          "type": "tuple[]"
        }
      ],
      "name": "initializeCanonicalWrapperSuperTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "customSuperTokenProxy",
          "type": "address"
        }
      ],
      "name": "initializeCustomSuperToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperToken\",\"name\":\"superTokenLogic\",\"type\":\"address\"},{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"},{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_NON_UPGRADEABLE_IS_DEPRECATED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_UNINITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"name\":\"CodeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CustomSuperTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SuperTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"tokenLogic\",\"type\":\"address\"}],\"name\":\"SuperTokenLogicCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSTANT_INFLOW_NFT_LOGIC\",\"outputs\":[{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_OUTFLOW_NFT_LOGIC\",\"outputs\":[{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_SUPER_TOKEN_LOGIC\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"castrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlyingToken\",\"type\":\"address\"}],\"name\":\"computeCanonicalERC20WrapperAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"superTokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDeployed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20WithTokenInfo\",\"name\":\"_underlyingToken\",\"type\":\"address\"}],\"name\":\"createCanonicalERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20WithTokenInfo\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"enum ISuperTokenFactory.Upgradability\",\"name\":\"upgradability\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"enum ISuperTokenFactory.Upgradability\",\"name\":\"upgradability\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlyingTokenAddress\",\"type\":\"address\"}],\"name\":\"getCanonicalERC20Wrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"superTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCodeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperTokenLogic\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"superToken\",\"type\":\"address\"}],\"internalType\":\"struct SuperTokenFactoryBase.InitializeData[]\",\"name\":\"_data\",\"type\":\"tuple[]\"}],\"name\":\"initializeCanonicalWrapperSuperTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"customSuperTokenProxy\",\"type\":\"address\"}],\"name\":\"initializeCustomSuperToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"CustomSuperTokenCreated(address)\":{\"details\":\"Custom super token created event\",\"params\":{\"token\":\"Newly created custom super token address\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"SuperTokenCreated(address)\":{\"details\":\"Super token created event\",\"params\":{\"token\":\"Newly created super token address\"}},\"SuperTokenLogicCreated(address)\":{\"details\":\"Super token logic created event\",\"params\":{\"tokenLogic\":\"Token logic address\"}}},\"kind\":\"dev\",\"methods\":{\"computeCanonicalERC20WrapperAddress(address)\":{\"details\":\"We return from our canonical list if it already exists, otherwise we compute itnote that this function only computes addresses for SEMI_UPGRADABLE SuperTokens\",\"params\":{\"_underlyingToken\":\"Underlying ERC20 token address\"},\"returns\":{\"isDeployed\":\"whether the super token is deployed AND set in the canonical mapping\",\"superTokenAddress\":\"Super token address\"}},\"createCanonicalERC20Wrapper(address)\":{\"details\":\"salt for create2 is the keccak256 hash of abi.encode(address(_underlyingToken))\",\"params\":{\"_underlyingToken\":\"Underlying ERC20 token\"},\"returns\":{\"_0\":\"ISuperToken the created supertoken\"}},\"createERC20Wrapper(address,uint8,string,string)\":{\"params\":{\"name\":\"Super token name\",\"symbol\":\"Super token symbol\",\"underlyingToken\":\"Underlying ERC20 token\",\"upgradability\":\"Upgradability mode\"},\"returns\":{\"superToken\":\"The deployed and initialized wrapper super token NOTE: - It assumes token provide the .decimals() function\"}},\"createERC20Wrapper(address,uint8,uint8,string,string)\":{\"params\":{\"name\":\"Super token name\",\"symbol\":\"Super token symbol\",\"underlyingDecimals\":\"Underlying token decimals\",\"underlyingToken\":\"Underlying ERC20 token\",\"upgradability\":\"Upgradability mode\"},\"returns\":{\"superToken\":\"The deployed and initialized wrapper super token\"}},\"getCanonicalERC20Wrapper(address)\":{\"details\":\"We return the address if it exists and the zero address otherwise\",\"params\":{\"_underlyingTokenAddress\":\"Underlying ERC20 token address\"},\"returns\":{\"superTokenAddress\":\"Super token address\"}},\"getCodeAddress()\":{\"details\":\"Get current implementation code address.\"},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"initialize()\":{\"details\":\"Initialize the contract\"},\"initializeCanonicalWrapperSuperTokens((address,address)[])\":{\"details\":\"Note that this should also be kind of a throwaway function which will be executed only once.\",\"params\":{\"_data\":\"an array of canonical wrappper super tokens to be set\"}},\"initializeCustomSuperToken(address)\":{\"details\":\"Creates a new custom super token\",\"params\":{\"customSuperTokenProxy\":\"address of the custom supertoken proxy\"}},\"proxiableUUID()\":{\"details\":\"Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT.\"},\"updateCode(address)\":{\"details\":\"This function updates the logic contract for the SuperTokenFactory\",\"params\":{\"newAddress\":\"the new address of the SuperTokenFactory logic contract\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER()\":[{\"notice\":\"NOTE: Whenever modifying the storage layout here it is important to update the validateStorageLayout function in its respective mock contract to ensure that it doesn't break anything or lead to unexpected behaviors/layout when upgrading\"}]},\"kind\":\"user\",\"methods\":{\"computeCanonicalERC20WrapperAddress(address)\":{\"notice\":\"Computes/Retrieves wrapper super token address given the underlying token address\"},\"createCanonicalERC20Wrapper(address)\":{\"notice\":\"Creates a wrapper super token AND sets it in the canonical list OR reverts if it already exists\"},\"createERC20Wrapper(address,uint8,string,string)\":{\"notice\":\"Create new super token wrapper for the underlying ERC20 token with extra token info\"},\"createERC20Wrapper(address,uint8,uint8,string,string)\":{\"notice\":\"Create new super token wrapper for the underlying ERC20 token\"},\"getCanonicalERC20Wrapper(address)\":{\"notice\":\"Gets the canonical ERC20 wrapper super token address given the underlying token address\"},\"getSuperTokenLogic()\":{\"notice\":\"Get the canonical super token logic.\"},\"initializeCanonicalWrapperSuperTokens((address,address)[])\":{\"notice\":\"Initializes list of canonical wrapper super tokens.\"},\"updateCode(address)\":{\"notice\":\"Updates the logic contract for the SuperTokenFactory\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/superfluid/SuperTokenFactory.sol\":\"SuperTokenFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0\",\"dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004\",\"dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xd750324b0fc76aa4c1b0aadf7cab03b3d1cc4d5744348c18ba2b99dbdbe1758d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d53cbf8e2e469a6422fb61d8636af3ec39d8e10e7f4d99d625bdd36d4b8ddf34\",\"dweb:/ipfs/QmNhvk3jmfgquVki2V7gNmTWTMeNwEPCnetybeBntQtsyJ\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0x8a191d6f5dcdfd97e8fbbe17382fa96f51dbaddea6ed704206e7cbda5d12cc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bed573cf54d2406d0e7566ab6cd37c31025c6fab3b5b8d8ef9b79b1cab098fd\",\"dweb:/ipfs/QmegphCXp9qTAvefUYyW8eGdaGQMLJ4JrEXELU7WhisRcS\"]},\"project:/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x2e5be80a58134c213a5fb4da40797c616a0c73cf807d5d0c49b28c5c5047a5f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f29b92234d646c801b9c5f2628742c9679f58ae9090b1bf346cfca3eddec8fb\",\"dweb:/ipfs/QmcK7zX8ugFViAM7h7xVQiZzYifH5NZbBRQSy1Yr9bfeA9\"]},\"project:/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0x6c45e56bafabb2d0b61be9c9b5c40ce16f06537b7f7d695115ba995d8e384c7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5bec860e391e693171417377bf386fe70fe09a27063fc1499b2c6776d140a52\",\"dweb:/ipfs/QmeYq64k3gZRkpJyRKquxqdNWFrwy2tWHBiXSHNGMjaMNA\"]},\"project:/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x2df65c6d6e74ba92a267176b1f1661416a6d54cf56bebbdea85fccadfe6d446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://113dab47ce7e686fbddbeadd58183fea3839f5882261a285b4141b558838528a\",\"dweb:/ipfs/QmY6pVPzSSwR2Bu3YCxHv7Fyfwx8VJcBBjYRSfDi4e7LbV\"]},\"project:/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0xbdcda11e5c157e63da15d7aced71fa20858472e3d5d5dba158690109d4abdfab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02277add66a1b52361fbfa8d1f8a502abfdeeb860f41458bcee731a3b9447456\",\"dweb:/ipfs/QmYnPVWYfCtBc359gu36sF4tMETQS1DDztgJ9hmSZtxMDP\"]},\"project:/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0x4dc5784dc8c21fa4ed393add91ced5853e3f95222467b03dbaa79e60eb7cc193\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8580acc481e6cc15425898d64c63fc2a348248b01543a3db8b4ad75ef57a98\",\"dweb:/ipfs/QmYDRy7fvrnHHRW5m7u9CZJrKEKEXXxAJ7ZR5JG8fwa5GG\"]},\"project:/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0x1961a8579193d3a9cdceee56c4e8a1a888869eaac1b2ca3594616c67a25d45c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f55802e18a32f9f46958fbf5ffdf6ed8654e063e545488110bb455020b4eda69\",\"dweb:/ipfs/QmNehJdVBqEssEdFL6jTmHtfvEVCUanHyiVQEJBC4rnuUD\"]},\"project:/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xb3701155641cb42103b206e66dcdc82c286f554189f9c9715b7146c0f1b6fbdc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8345c2c3fbc825eb133f05440665530569d5bd59acb8e1fcdea53593e9c7d49b\",\"dweb:/ipfs/QmXNRYfqWDm8TofsoRw38GVa2LWzvPsGkF1H8Ro5E22CP7\"]},\"project:/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xf1d91553023a7a2db8da3352753fc59645aa4339643e02264b9c1868eb632f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c80058a66407690e98e40cd454a9cb46f695e948604f024e38f6b2b61626555\",\"dweb:/ipfs/QmTVwCQmh4GBS4K9r3RYk8zpLfzGtmeWfYRdAfMmu7htP7\"]},\"project:/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xb8cfa2d1f1a9de1495102bac583a819a0bc746031e157d0f5fa4103d6ebe4179\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e229ecfd55d9fd21ea3d4e58e49ffe0c47c862d6b17cdf552ad6d39a6379443\",\"dweb:/ipfs/QmaPY4Fg2uCNoeF99tnTcEfYdwQWBLp87WPmez37KDGiTW\"]},\"project:/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x650695c87473f47c36ba57eecf57b42faa9eab3dd0be828aa0be5aeabf1f15db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3aea8086ef10750f92d133cc65becd0b51e51add441435819a58d81f9d482f55\",\"dweb:/ipfs/QmRZKfHxgg9aEWDzsnd326Bpq2bpCZM4zM86NRkcW1Lu4x\"]},\"project:/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x60b8207b8d0bd42b66decf0def9e8ebc032ec3e1d44b348979afc6066428effc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b459c2e6d2637506bcbc159c422520ebd22a31646283909fb173e0da0f6e9489\",\"dweb:/ipfs/QmZ6PNM8jFgh6aXR9ULdXkFABMsMXQrHrtF4fZKsBPVQzu\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x63eb98b650214aff1979f13bb9b503425d0c2d7500a3f210930fe3057695df70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83603f4cbad24656818345a08965b8402a5b38ad1d9382077727e8154774f66f\",\"dweb:/ipfs/QmVqdmcwma6FCmJ8eKPm761o1PPWhPMW1yauLVLpXMiwpt\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0xa68065a8a4da8cb3755364b714b2636861a22a268f8dd82a1be7b4686a1d02fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://deff30448cfeecc0ac555e35d6bd5d47acaffa9b2199e9f6b0dd0a01b2fbe4ed\",\"dweb:/ipfs/QmayyxRBkgBT3yCCsQ96TAmFcrHVufqTGVnuNjLGy2Cva8\"]},\"project:/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0xea22c0295f28a5e4124cc54a5324d9d9f018f322df644ab5e2b332bbf23ada74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ca09ea1f6c2f14ba1d59c75946d12563e01bee00dfdb18461b68117d120aea4\",\"dweb:/ipfs/QmUFN1W5kfi57Ae2F74o42HFe3WrUZr5gc7rmQHujMjQVE\"]},\"project:/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x873a19fc42452483280191324109a527e0b0a1c200dab28aa85dff4ad0a7d0c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838778521d9036ef0005ff0cd969a095f1b5535dba9518051a190cf21693a2d9\",\"dweb:/ipfs/Qmd2eZ1ENtiiyiua97kyzWyUUn4hZvUqCHNMeAc6umxP2D\"]},\"project:/contracts/libs/ERC777Helper.sol\":{\"keccak256\":\"0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda\",\"dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny\"]},\"project:/contracts/libs/EventsEmitter.sol\":{\"keccak256\":\"0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d\",\"dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r\"]},\"project:/contracts/libs/FixedSizeData.sol\":{\"keccak256\":\"0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6\",\"dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD\"]},\"project:/contracts/superfluid/ConstantInflowNFT.sol\":{\"keccak256\":\"0x04e71a5c9ed90dd8a471a5444130a77a24282da8f0eb5ab02849d7fe4b33061b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://737b02b4a3d0acbb003b6ebda93f4839ab812c3be2c9d1186784aa8259babdb4\",\"dweb:/ipfs/QmWBbkfiWo379ZcgkgNiKzdgSAwabV7J5pPKag9QzN8Wbz\"]},\"project:/contracts/superfluid/ConstantOutflowNFT.sol\":{\"keccak256\":\"0xb2d733bdc2cf86023a715408a91e618d68e364730991d8f555b8ac508b04a55a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9f97288a64a2d674935fff5ccab8517b1e74073ef180839daf17d1c69994dd94\",\"dweb:/ipfs/QmX7cXf3xHnbu2imRbBcmYudswhr669D6aPdUzG1eJMDag\"]},\"project:/contracts/superfluid/FlowNFTBase.sol\":{\"keccak256\":\"0xe1a70d56baf2d983fce23e9ab6e90a18756ec34835d38372a6deca8672264e75\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://998761c8f1bc9388d7e046c5ed54e49419554e2813e47f1f7f94ecac2966571c\",\"dweb:/ipfs/QmYQ2JMKZWo1LybAhHVi7CG2LQw9oKzfvHNgWQKmUrPokX\"]},\"project:/contracts/superfluid/FullUpgradableSuperTokenProxy.sol\":{\"keccak256\":\"0x6e66ecd16b8d015b1fdee6964f5502b8e88a227ba66b6e8f8a9c0fcc5dbe9d99\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7f8ea8d9359fefb181cb32a4ffc4a4e9e69b1a06d81be273bb84850ed3138660\",\"dweb:/ipfs/QmSyDFmna8P5oMhTo3NGYNHmM4LJGKcqWPQun6A274FyyK\"]},\"project:/contracts/superfluid/SuperToken.sol\":{\"keccak256\":\"0x7cfcf8df2ee575327124a7d37e41b28c773ebfb30a6a38e26be9f5b2ed6a0b68\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://64c2ec16874f951ed858608cb0e9df513781dfa366b4eb00909f673e880ac4ba\",\"dweb:/ipfs/QmfUmgaBMisrvRc5W9pUReEwNjM5Yv96Lemck6LjSHt9aE\"]},\"project:/contracts/superfluid/SuperTokenFactory.sol\":{\"keccak256\":\"0xf2b99b35188a2dccddd555d0926f12e0fedcf8c2ca3278f69f460d96d5f01ef0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9f83ced61796ff85eac5997ae45875200c88b2bce28e3b919ffe598aff91b9e4\",\"dweb:/ipfs/Qmauf598SgoUFLWgW96ngLRgwt6R9Q9WfjpARS1d43WyAY\"]},\"project:/contracts/superfluid/SuperfluidToken.sol\":{\"keccak256\":\"0xfba471c15cabe1ba7b2de85f5bfa633349fbfad47938c16f36e45d69acca53fa\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://4c6c08de770cf67b5420e826ddc29e41cc759e142e7a5cb9fb8f985d54cf076d\",\"dweb:/ipfs/QmP9KQb3kRmVM1kKNHU2LzcrxkRvKuMiF8X6kV1z2Z9aY8\"]},\"project:/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953\",\"dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp\"]},\"project:/contracts/upgradability/UUPSProxy.sol\":{\"keccak256\":\"0x556040f5f2bfda069dd867d52b67b4b6a8e3d2955beac16d4156d91559bbdeac\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://13d190401b4f36f3c0977e0eadb9c774173bcbc2552d72de5bd6e7803d67c996\",\"dweb:/ipfs/QmfBTdKGzmbbjRxca5XLwpE2FX3S8onGLNHNpMpqWqjY4m\"]},\"project:/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238\",\"dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud\"]}},\"version\":1}",
  "bytecode": "0x6101006040523480156200001257600080fd5b5060405162001fe638038062001fe683398101604081905262000035916200010d565b6001600160a01b0380851660a052831660808190526040805163132075a760e31b81529051869286928692869291639903ad3891600480830192600092919082900301818387803b1580156200008a57600080fd5b505af11580156200009f573d6000803e3d6000fd5b5050506001600160a01b0380841660c05282811660e052608051604051911691507fc13fb19d60857980e565bf5dae406b8802d3c1cec50c6156b30b12b87402978390600090a2505050505050505062000175565b6001600160a01b03811681146200010a57600080fd5b50565b600080600080608085870312156200012457600080fd5b84516200013181620000f4565b60208601519094506200014481620000f4565b60408601519093506200015781620000f4565b60608601519092506200016a81620000f4565b939692955090935050565b60805160a05160c05160e051611df1620001f5600039600081816101f001526109760152600081816101c9015261085d015260008181610142015281816107390152610bcb01526000818161021c0152818161029d015281816104290152818161088c015281816109a501528181610e8c01526111410152611df16000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638129fc1c116100a2578063a6d0c53411610071578063a6d0c53414610253578063bab74c8914610266578063cbf927b314610298578063d412d344146102bf578063eff0a89d146102d257600080fd5b80638129fc1c146102125780639470a5b21461021a57806397e011ed146102405780639903ad381461021257600080fd5b806350d75d25116100de57806350d75d251461018e57806352d1902d146101965780635365d19f146101c45780635a7792df146101eb57600080fd5b8063151188dc1461011057806320bc442514610140578063431f1481146101665780634695195414610179575b600080fd5b61012361011e366004611449565b6102fe565b6040516001600160a01b0390911681526020015b60405180910390f35b7f0000000000000000000000000000000000000000000000000000000000000000610123565b6101236101743660046114ca565b6106b1565b61018c610187366004611449565b61072e565b005b610123610a89565b6040517fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b6208152602001610137565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b61018c610ab8565b7f0000000000000000000000000000000000000000000000000000000000000000610123565b61018c61024e36600461155d565b610bc7565b6101236102613660046115e1565b610dd6565b610279610274366004611449565b611027565b604080516001600160a01b039093168352901515602083015201610137565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b61018c6102cd366004611449565b61112a565b6101236102e0366004611449565b6001600160a01b039081166000908152600160205260409020541690565b600080805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b0316610350576040516306ce6e6d60e21b815260040160405180910390fd5b6001600160a01b03808316600090815260016020526040902054839116801561038c576040516348eb3cb960e11b815260040160405180910390fd5b604080516001600160a01b0384166020820152600091016040516020818303038152906040528051906020012090506000816040516103ca9061141a565b8190604051809103906000f59050801580156103ea573d6000803e3d6000fd5b506001600160a01b038581166000908152600160205260409081902080546001600160a01b0319168484169081179091559051634a0687ef60e01b81527f00000000000000000000000000000000000000000000000000000000000000009092166004830152919250634a0687ef90602401600060405180830381600087803b15801561047657600080fd5b505af115801561048a573d6000803e3d6000fd5b5050505060008190506000876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f79190611687565b90506000886001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610539573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261056191908101906116de565b90506000896001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105cb91908101906116de565b9050836001600160a01b03166342fe09808b85856040516020016105ef9190611780565b6040516020818303038152906040528560405160200161060f91906117ae565b6040516020818303038152906040526040518563ffffffff1660e01b815260040161063d94939291906117ff565b600060405180830381600087803b15801561065757600080fd5b505af115801561066b573d6000803e3d6000fd5b50506040516001600160a01b03871692507fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f9150600090a2509198975050505050505050565b600061072387886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107199190611687565b8888888888610dd6565b979650505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107775760405163478b8e8360e01b815260040160405180910390fd5b610780816111e0565b60008190506000816001600160a01b0316635365d19f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e9919061183e565b90506000826001600160a01b0316635a7792df6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f919061183e565b9050816001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461096a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef43d2c66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c919061183e565b6040516311a5465560e21b81526001600160a01b0384811660048301529190911690634695195490602401600060405180830381600087803b15801561095157600080fd5b505af1158015610965573d6000803e3d6000fd5b505050505b806001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610a83577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634c5c0c856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a25919061183e565b6040516311a5465560e21b81526001600160a01b0383811660048301529190911690634695195490602401600060405180830381600087803b158015610a6a57600080fd5b505af1158015610a7e573d6000803e3d6000fd5b505050505b50505050565b6000610ab37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b600054610100900460ff1615808015610ad85750600054600160ff909116105b80610af25750303b158015610af2575060005460ff166001145b610b5a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610b7d576000805461ff0019166101001790555b8015610bc4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663289b3c0d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4b919061183e565b9050806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caf919061183e565b6001600160a01b0316336001600160a01b031614610ce057604051632bf2a63360e21b815260040160405180910390fd5b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031615610d32576040516348eb3cb960e11b815260040160405180910390fd5b60005b82811015610a8357838382818110610d4f57610d4f61185b565b9050604002016020016020810190610d679190611449565b60016000868685818110610d7d57610d7d61185b565b610d939260206040909202019081019150611449565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b0319169290911691909117905580610dce81611871565b915050610d35565b60006001600160a01b038816610dff5760405163182e4f4160e11b815260040160405180910390fd5b6000866002811115610e1357610e13611898565b03610e315760405163c4901a4360e01b815260040160405180910390fd5b6001866002811115610e4557610e45611898565b03610efd576000604051610e589061141a565b604051809103906000f080158015610e74573d6000803e3d6000fd5b50604051634a0687ef60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015291925090821690634a0687ef90602401600060405180830381600087803b158015610edc57600080fd5b505af1158015610ef0573d6000803e3d6000fd5b5050505080915050610f81565b6000604051610f0b90611427565b604051809103906000f080158015610f27573d6000803e3d6000fd5b509050806001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f6557600080fd5b505af1158015610f79573d6000803e3d6000fd5b509293505050505b6040516285fc1360e71b81526001600160a01b038216906342fe098090610fb6908b908b908a908a908a908a906004016118d7565b600060405180830381600087803b158015610fd057600080fd5b505af1158015610fe4573d6000803e3d6000fd5b50506040516001600160a01b03841692507fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f9150600090a2979650505050505050565b6001600160a01b03808216600090815260016020526040812054909182911680156110585780925060019150611124565b60006040518060200161106a9061141a565b601f1982820381018352601f9091011660408181526001600160a01b03881660208301529192506001600160f81b03199130910160405160208183030381529060405280519060200120838051906020012060405160200161110394939291906001600160f81b031994909416845260609290921b6bffffffffffffffffffffffff191660018401526015830152603582015260550190565b6040516020818303038152906040528051906020012060001c935060009250505b50915091565b604051634a0687ef60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152829190821690634a0687ef90602401600060405180830381600087803b15801561119057600080fd5b505af11580156111a4573d6000803e3d6000fd5b50506040516001600160a01b03851692507f437790724a6e97b75d23117f28cdd4b1beeafc34f7a0911ef256e9334f4369a59150600090a25050565b600061120a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316036112605760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c650000006044820152606401610b51565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561129e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c29190611925565b7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b6201461133c5760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b6064820152608401610b51565b6001600160a01b03811630036113945760405162461bcd60e51b815260206004820152601960248201527f5555505350726f786961626c653a2070726f7879206c6f6f70000000000000006044820152606401610b51565b6113bc817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620604080519182526001600160a01b038416602083015201610bbb565b61024a8061193f83390190565b61023380611b8983390190565b6001600160a01b0381168114610bc457600080fd5b60006020828403121561145b57600080fd5b813561146681611434565b9392505050565b80356003811061147c57600080fd5b919050565b60008083601f84011261149357600080fd5b50813567ffffffffffffffff8111156114ab57600080fd5b6020830191508360208285010111156114c357600080fd5b9250929050565b600080600080600080608087890312156114e357600080fd5b86356114ee81611434565b95506114fc6020880161146d565b9450604087013567ffffffffffffffff8082111561151957600080fd5b6115258a838b01611481565b9096509450606089013591508082111561153e57600080fd5b5061154b89828a01611481565b979a9699509497509295939492505050565b6000806020838503121561157057600080fd5b823567ffffffffffffffff8082111561158857600080fd5b818501915085601f83011261159c57600080fd5b8135818111156115ab57600080fd5b8660208260061b85010111156115c057600080fd5b60209290920196919550909350505050565b60ff81168114610bc457600080fd5b600080600080600080600060a0888a0312156115fc57600080fd5b873561160781611434565b96506020880135611617816115d2565b95506116256040890161146d565b9450606088013567ffffffffffffffff8082111561164257600080fd5b61164e8b838c01611481565b909650945060808a013591508082111561166757600080fd5b506116748a828b01611481565b989b979a50959850939692959293505050565b60006020828403121561169957600080fd5b8151611466816115d2565b634e487b7160e01b600052604160045260246000fd5b60005b838110156116d55781810151838201526020016116bd565b50506000910152565b6000602082840312156116f057600080fd5b815167ffffffffffffffff8082111561170857600080fd5b818401915084601f83011261171c57600080fd5b81518181111561172e5761172e6116a4565b604051601f8201601f19908116603f01168101908382118183101715611756576117566116a4565b8160405282815287602084870101111561176f57600080fd5b6107238360208301602088016116ba565b65029bab832b9160d51b8152600082516117a18160068501602087016116ba565b9190910160060192915050565b600082516117c08184602087016116ba565b600f60fb1b920191825250600101919050565b600081518084526117eb8160208601602086016116ba565b601f01601f19169290920160200192915050565b6001600160a01b038516815260ff8416602082015260806040820181905260009061182c908301856117d3565b828103606084015261072381856117d3565b60006020828403121561185057600080fd5b815161146681611434565b634e487b7160e01b600052603260045260246000fd5b60006001820161189157634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052602160045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038716815260ff8616602082015260806040820181905260009061190590830186886118ae565b82810360608401526119188185876118ae565b9998505050505050505050565b60006020828403121561193757600080fd5b505191905056fe608060405234801561001057600080fd5b5061022a806100206000396000f3fe6080604052600436106100225760003560e01c80634a0687ef1461003957610031565b366100315761002f610059565b005b61002f610059565b34801561004557600080fd5b5061002f6100543660046101c4565b61006b565b610069610064610171565b6101a0565b565b6001600160a01b0381166100c65760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006100f07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146101465760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a6564000060448201526064016100bd565b61016e817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b600061019b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e8080156101bf573d6000f35b3d6000fd5b6000602082840312156101d657600080fd5b81356001600160a01b03811681146101ed57600080fd5b939250505056fea26469706673582212207b854fb470c84fe2f7ac8508498d435a5f32ef93071c687a148ef683fa3ede9964736f6c63430008130033608060405234801561001057600080fd5b50610213806100206000396000f3fe6080604052600436106100225760003560e01c80638129fc1c1461003957610031565b366100315761002f61004e565b005b61002f61004e565b34801561004557600080fd5b5061002f610060565b61005e6100596100d0565b610173565b565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546001600160a01b038116156100aa576040516305c5d81960e01b815260040160405180910390fd5b50337fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a055565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546000906001600160a01b03811661010b5761010b610197565b806001600160a01b0316639470a5b26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d91906101ad565b91505090565b3660008037600080366000845af43d6000803e808015610192573d6000f35b3d6000fd5b634e487b7160e01b600052600160045260246000fd5b6000602082840312156101bf57600080fd5b81516001600160a01b03811681146101d657600080fd5b939250505056fea26469706673582212207d44b05228bdcf5cefb65c8fdbcc34385327dcb46cddd6f9c6144082d522ebd264736f6c63430008130033a2646970667358221220848ad363aafe29d3adce1a44fb10743c84009464681e0a7fe3dfddb00ef3bdb264736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80638129fc1c116100a2578063a6d0c53411610071578063a6d0c53414610253578063bab74c8914610266578063cbf927b314610298578063d412d344146102bf578063eff0a89d146102d257600080fd5b80638129fc1c146102125780639470a5b21461021a57806397e011ed146102405780639903ad381461021257600080fd5b806350d75d25116100de57806350d75d251461018e57806352d1902d146101965780635365d19f146101c45780635a7792df146101eb57600080fd5b8063151188dc1461011057806320bc442514610140578063431f1481146101665780634695195414610179575b600080fd5b61012361011e366004611449565b6102fe565b6040516001600160a01b0390911681526020015b60405180910390f35b7f0000000000000000000000000000000000000000000000000000000000000000610123565b6101236101743660046114ca565b6106b1565b61018c610187366004611449565b61072e565b005b610123610a89565b6040517fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b6208152602001610137565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b61018c610ab8565b7f0000000000000000000000000000000000000000000000000000000000000000610123565b61018c61024e36600461155d565b610bc7565b6101236102613660046115e1565b610dd6565b610279610274366004611449565b611027565b604080516001600160a01b039093168352901515602083015201610137565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b61018c6102cd366004611449565b61112a565b6101236102e0366004611449565b6001600160a01b039081166000908152600160205260409020541690565b600080805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b0316610350576040516306ce6e6d60e21b815260040160405180910390fd5b6001600160a01b03808316600090815260016020526040902054839116801561038c576040516348eb3cb960e11b815260040160405180910390fd5b604080516001600160a01b0384166020820152600091016040516020818303038152906040528051906020012090506000816040516103ca9061141a565b8190604051809103906000f59050801580156103ea573d6000803e3d6000fd5b506001600160a01b038581166000908152600160205260409081902080546001600160a01b0319168484169081179091559051634a0687ef60e01b81527f00000000000000000000000000000000000000000000000000000000000000009092166004830152919250634a0687ef90602401600060405180830381600087803b15801561047657600080fd5b505af115801561048a573d6000803e3d6000fd5b5050505060008190506000876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f79190611687565b90506000886001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610539573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261056191908101906116de565b90506000896001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105cb91908101906116de565b9050836001600160a01b03166342fe09808b85856040516020016105ef9190611780565b6040516020818303038152906040528560405160200161060f91906117ae565b6040516020818303038152906040526040518563ffffffff1660e01b815260040161063d94939291906117ff565b600060405180830381600087803b15801561065757600080fd5b505af115801561066b573d6000803e3d6000fd5b50506040516001600160a01b03871692507fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f9150600090a2509198975050505050505050565b600061072387886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107199190611687565b8888888888610dd6565b979650505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107775760405163478b8e8360e01b815260040160405180910390fd5b610780816111e0565b60008190506000816001600160a01b0316635365d19f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e9919061183e565b90506000826001600160a01b0316635a7792df6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f919061183e565b9050816001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461096a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef43d2c66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c919061183e565b6040516311a5465560e21b81526001600160a01b0384811660048301529190911690634695195490602401600060405180830381600087803b15801561095157600080fd5b505af1158015610965573d6000803e3d6000fd5b505050505b806001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610a83577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634c5c0c856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a25919061183e565b6040516311a5465560e21b81526001600160a01b0383811660048301529190911690634695195490602401600060405180830381600087803b158015610a6a57600080fd5b505af1158015610a7e573d6000803e3d6000fd5b505050505b50505050565b6000610ab37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b600054610100900460ff1615808015610ad85750600054600160ff909116105b80610af25750303b158015610af2575060005460ff166001145b610b5a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610b7d576000805461ff0019166101001790555b8015610bc4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663289b3c0d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4b919061183e565b9050806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caf919061183e565b6001600160a01b0316336001600160a01b031614610ce057604051632bf2a63360e21b815260040160405180910390fd5b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031615610d32576040516348eb3cb960e11b815260040160405180910390fd5b60005b82811015610a8357838382818110610d4f57610d4f61185b565b9050604002016020016020810190610d679190611449565b60016000868685818110610d7d57610d7d61185b565b610d939260206040909202019081019150611449565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b0319169290911691909117905580610dce81611871565b915050610d35565b60006001600160a01b038816610dff5760405163182e4f4160e11b815260040160405180910390fd5b6000866002811115610e1357610e13611898565b03610e315760405163c4901a4360e01b815260040160405180910390fd5b6001866002811115610e4557610e45611898565b03610efd576000604051610e589061141a565b604051809103906000f080158015610e74573d6000803e3d6000fd5b50604051634a0687ef60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015291925090821690634a0687ef90602401600060405180830381600087803b158015610edc57600080fd5b505af1158015610ef0573d6000803e3d6000fd5b5050505080915050610f81565b6000604051610f0b90611427565b604051809103906000f080158015610f27573d6000803e3d6000fd5b509050806001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f6557600080fd5b505af1158015610f79573d6000803e3d6000fd5b509293505050505b6040516285fc1360e71b81526001600160a01b038216906342fe098090610fb6908b908b908a908a908a908a906004016118d7565b600060405180830381600087803b158015610fd057600080fd5b505af1158015610fe4573d6000803e3d6000fd5b50506040516001600160a01b03841692507fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f9150600090a2979650505050505050565b6001600160a01b03808216600090815260016020526040812054909182911680156110585780925060019150611124565b60006040518060200161106a9061141a565b601f1982820381018352601f9091011660408181526001600160a01b03881660208301529192506001600160f81b03199130910160405160208183030381529060405280519060200120838051906020012060405160200161110394939291906001600160f81b031994909416845260609290921b6bffffffffffffffffffffffff191660018401526015830152603582015260550190565b6040516020818303038152906040528051906020012060001c935060009250505b50915091565b604051634a0687ef60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152829190821690634a0687ef90602401600060405180830381600087803b15801561119057600080fd5b505af11580156111a4573d6000803e3d6000fd5b50506040516001600160a01b03851692507f437790724a6e97b75d23117f28cdd4b1beeafc34f7a0911ef256e9334f4369a59150600090a25050565b600061120a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316036112605760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c650000006044820152606401610b51565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561129e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c29190611925565b7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b6201461133c5760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b6064820152608401610b51565b6001600160a01b03811630036113945760405162461bcd60e51b815260206004820152601960248201527f5555505350726f786961626c653a2070726f7879206c6f6f70000000000000006044820152606401610b51565b6113bc817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620604080519182526001600160a01b038416602083015201610bbb565b61024a8061193f83390190565b61023380611b8983390190565b6001600160a01b0381168114610bc457600080fd5b60006020828403121561145b57600080fd5b813561146681611434565b9392505050565b80356003811061147c57600080fd5b919050565b60008083601f84011261149357600080fd5b50813567ffffffffffffffff8111156114ab57600080fd5b6020830191508360208285010111156114c357600080fd5b9250929050565b600080600080600080608087890312156114e357600080fd5b86356114ee81611434565b95506114fc6020880161146d565b9450604087013567ffffffffffffffff8082111561151957600080fd5b6115258a838b01611481565b9096509450606089013591508082111561153e57600080fd5b5061154b89828a01611481565b979a9699509497509295939492505050565b6000806020838503121561157057600080fd5b823567ffffffffffffffff8082111561158857600080fd5b818501915085601f83011261159c57600080fd5b8135818111156115ab57600080fd5b8660208260061b85010111156115c057600080fd5b60209290920196919550909350505050565b60ff81168114610bc457600080fd5b600080600080600080600060a0888a0312156115fc57600080fd5b873561160781611434565b96506020880135611617816115d2565b95506116256040890161146d565b9450606088013567ffffffffffffffff8082111561164257600080fd5b61164e8b838c01611481565b909650945060808a013591508082111561166757600080fd5b506116748a828b01611481565b989b979a50959850939692959293505050565b60006020828403121561169957600080fd5b8151611466816115d2565b634e487b7160e01b600052604160045260246000fd5b60005b838110156116d55781810151838201526020016116bd565b50506000910152565b6000602082840312156116f057600080fd5b815167ffffffffffffffff8082111561170857600080fd5b818401915084601f83011261171c57600080fd5b81518181111561172e5761172e6116a4565b604051601f8201601f19908116603f01168101908382118183101715611756576117566116a4565b8160405282815287602084870101111561176f57600080fd5b6107238360208301602088016116ba565b65029bab832b9160d51b8152600082516117a18160068501602087016116ba565b9190910160060192915050565b600082516117c08184602087016116ba565b600f60fb1b920191825250600101919050565b600081518084526117eb8160208601602086016116ba565b601f01601f19169290920160200192915050565b6001600160a01b038516815260ff8416602082015260806040820181905260009061182c908301856117d3565b828103606084015261072381856117d3565b60006020828403121561185057600080fd5b815161146681611434565b634e487b7160e01b600052603260045260246000fd5b60006001820161189157634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052602160045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038716815260ff8616602082015260806040820181905260009061190590830186886118ae565b82810360608401526119188185876118ae565b9998505050505050505050565b60006020828403121561193757600080fd5b505191905056fe608060405234801561001057600080fd5b5061022a806100206000396000f3fe6080604052600436106100225760003560e01c80634a0687ef1461003957610031565b366100315761002f610059565b005b61002f610059565b34801561004557600080fd5b5061002f6100543660046101c4565b61006b565b610069610064610171565b6101a0565b565b6001600160a01b0381166100c65760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006100f07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146101465760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a6564000060448201526064016100bd565b61016e817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b600061019b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e8080156101bf573d6000f35b3d6000fd5b6000602082840312156101d657600080fd5b81356001600160a01b03811681146101ed57600080fd5b939250505056fea26469706673582212207b854fb470c84fe2f7ac8508498d435a5f32ef93071c687a148ef683fa3ede9964736f6c63430008130033608060405234801561001057600080fd5b50610213806100206000396000f3fe6080604052600436106100225760003560e01c80638129fc1c1461003957610031565b366100315761002f61004e565b005b61002f61004e565b34801561004557600080fd5b5061002f610060565b61005e6100596100d0565b610173565b565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546001600160a01b038116156100aa576040516305c5d81960e01b815260040160405180910390fd5b50337fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a055565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546000906001600160a01b03811661010b5761010b610197565b806001600160a01b0316639470a5b26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d91906101ad565b91505090565b3660008037600080366000845af43d6000803e808015610192573d6000f35b3d6000fd5b634e487b7160e01b600052600160045260246000fd5b6000602082840312156101bf57600080fd5b81516001600160a01b03811681146101d657600080fd5b939250505056fea26469706673582212207d44b05228bdcf5cefb65c8fdbcc34385327dcb46cddd6f9c6144082d522ebd264736f6c63430008130033a2646970667358221220848ad363aafe29d3adce1a44fb10743c84009464681e0a7fe3dfddb00ef3bdb264736f6c63430008130033",
  "immutableReferences": {
    "42000": [
      {
        "length": 32,
        "start": 540
      },
      {
        "length": 32,
        "start": 669
      },
      {
        "length": 32,
        "start": 1065
      },
      {
        "length": 32,
        "start": 2188
      },
      {
        "length": 32,
        "start": 2469
      },
      {
        "length": 32,
        "start": 3724
      },
      {
        "length": 32,
        "start": 4417
      }
    ],
    "42003": [
      {
        "length": 32,
        "start": 322
      },
      {
        "length": 32,
        "start": 1849
      },
      {
        "length": 32,
        "start": 3019
      }
    ],
    "42006": [
      {
        "length": 32,
        "start": 457
      },
      {
        "length": 32,
        "start": 2141
      }
    ],
    "42009": [
      {
        "length": 32,
        "start": 496
      },
      {
        "length": 32,
        "start": 2422
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:970:124",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:124",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:86:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "136:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "145:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "148:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "138:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "138:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "138:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "95:5:124"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "106:5:124"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "121:3:124",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "126:1:124",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "117:3:124"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "117:11:124"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "130:1:124",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "113:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "113:19:124"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "102:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "102:31:124"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "92:2:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "92:42:124"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "85:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "85:50:124"
                  },
                  "nodeType": "YulIf",
                  "src": "82:70:124"
                }
              ]
            },
            "name": "validator_revert_contract_ISuperfluid",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:124",
                "type": ""
              }
            ],
            "src": "14:144:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "394:574:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "441:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "450:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "453:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "443:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "443:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "443:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "415:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "424:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "436:3:124",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "407:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "407:33:124"
                  },
                  "nodeType": "YulIf",
                  "src": "404:53:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "466:29:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "479:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "479:16:124"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "470:5:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "542:5:124"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ISuperfluid",
                      "nodeType": "YulIdentifier",
                      "src": "504:37:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "504:44:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "504:44:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "557:15:124",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "567:5:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "557:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "581:40:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "606:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "617:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "602:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "602:18:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "596:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "596:25:124"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "585:7:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "668:7:124"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ISuperfluid",
                      "nodeType": "YulIdentifier",
                      "src": "630:37:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "630:46:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "630:46:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "685:17:124",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "695:7:124"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "685:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "711:40:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "736:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "747:2:124",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "732:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "732:18:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "726:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "726:25:124"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "715:7:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "798:7:124"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ISuperfluid",
                      "nodeType": "YulIdentifier",
                      "src": "760:37:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "760:46:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "760:46:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "815:17:124",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "825:7:124"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "815:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "841:40:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "866:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "877:2:124",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "862:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "862:18:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "856:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "856:25:124"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "845:7:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "928:7:124"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ISuperfluid",
                      "nodeType": "YulIdentifier",
                      "src": "890:37:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "890:46:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "890:46:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "945:17:124",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "955:7:124"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "945:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ISuperfluid_$25037t_contract$_ISuperToken_$24383t_contract$_IConstantOutflowNFT_$23686t_contract$_IConstantInflowNFT_$23632_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "336:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "347:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "359:6:124",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "367:6:124",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "375:6:124",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "383:6:124",
                "type": ""
              }
            ],
            "src": "163:805:124"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_ISuperfluid(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ISuperfluid_$25037t_contract$_ISuperToken_$24383t_contract$_IConstantOutflowNFT_$23686t_contract$_IConstantInflowNFT_$23632_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ISuperfluid(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_ISuperfluid(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_ISuperfluid(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_contract_ISuperfluid(value_3)\n        value3 := value_3\n    }\n}",
      "id": 124,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14088:124",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:124",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "79:86:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "143:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "152:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "155:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "145:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "145:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "145:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "102:5:124"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "113:5:124"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "128:3:124",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "133:1:124",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "124:3:124"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "124:11:124"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "137:1:124",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "120:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "120:19:124"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "109:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "109:31:124"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "99:2:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "99:42:124"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "92:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "92:50:124"
                  },
                  "nodeType": "YulIf",
                  "src": "89:70:124"
                }
              ]
            },
            "name": "validator_revert_contract_ERC20WithTokenInfo",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "68:5:124",
                "type": ""
              }
            ],
            "src": "14:151:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "268:197:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "314:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "323:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "326:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "316:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "316:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "316:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "289:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "298:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "285:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "285:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "310:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "281:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "281:32:124"
                  },
                  "nodeType": "YulIf",
                  "src": "278:52:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "339:36:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "365:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "352:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:23:124"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "343:5:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "429:5:124"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "384:44:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "384:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "384:51:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "444:15:124",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "454:5:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "444:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20WithTokenInfo_$25464",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "234:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "245:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "257:6:124",
                "type": ""
              }
            ],
            "src": "170:295:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "592:102:124",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "602:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "614:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "625:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "610:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "610:18:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "602:4:124"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "644:9:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "659:6:124"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "675:3:124",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "680:1:124",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "671:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "671:11:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "684:1:124",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "667:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "667:19:124"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "655:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "655:32:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "637:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "637:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "637:51:124"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ISuperToken_$24383__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "561:9:124",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "572:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "583:4:124",
                "type": ""
              }
            ],
            "src": "470:224:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "800:102:124",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "810:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "822:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "833:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "818:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "818:18:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "810:4:124"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "852:9:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "867:6:124"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "883:3:124",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "888:1:124",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "879:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "879:11:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "892:1:124",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "875:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "875:19:124"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "863:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "863:32:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "845:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "845:51:124"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "769:9:124",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "780:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "791:4:124",
                "type": ""
              }
            ],
            "src": "699:203:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:94:124",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "977:29:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "999:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "986:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:20:124"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "977:5:124"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1039:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1048:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1051:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1041:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1041:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1041:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1028:5:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1035:1:124",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1025:2:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1025:12:124"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1018:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1018:20:124"
                  },
                  "nodeType": "YulIf",
                  "src": "1015:40:124"
                }
              ]
            },
            "name": "abi_decode_enum_Upgradability",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "946:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "957:5:124",
                "type": ""
              }
            ],
            "src": "907:154:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1139:275:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1188:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1197:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1200:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1190:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1190:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1190:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1167:6:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1175:4:124",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1163:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1163:17:124"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1182:3:124"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1159:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1159:27:124"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1152:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:35:124"
                  },
                  "nodeType": "YulIf",
                  "src": "1149:55:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1213:30:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1236:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1223:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:20:124"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1213:6:124"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1286:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1295:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1298:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1288:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1288:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1288:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1258:6:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1266:18:124",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1255:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1255:30:124"
                  },
                  "nodeType": "YulIf",
                  "src": "1252:50:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1311:29:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1327:6:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1335:4:124",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1323:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1323:17:124"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "1311:8:124"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1392:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1401:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1404:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1394:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1394:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1394:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1363:6:124"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1371:6:124"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1359:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1359:19:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1380:4:124",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1355:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1355:30:124"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1387:3:124"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1352:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1352:39:124"
                  },
                  "nodeType": "YulIf",
                  "src": "1349:59:124"
                }
              ]
            },
            "name": "abi_decode_string_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1102:6:124",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1110:3:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "1118:8:124",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1128:6:124",
                "type": ""
              }
            ],
            "src": "1066:348:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1627:801:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1674:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1683:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1686:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1676:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1676:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1676:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1648:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1657:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1644:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1644:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1669:3:124",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1640:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1640:33:124"
                  },
                  "nodeType": "YulIf",
                  "src": "1637:53:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1699:36:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1725:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1712:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1712:23:124"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1703:5:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1789:5:124"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "1744:44:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1744:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1744:51:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1804:15:124",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1814:5:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1804:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1828:59:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1872:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1883:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1868:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1868:18:124"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_enum_Upgradability",
                      "nodeType": "YulIdentifier",
                      "src": "1838:29:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1838:49:124"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1828:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1896:46:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1927:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1938:2:124",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1923:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1923:18:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1910:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1910:32:124"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1900:6:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1951:28:124",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1961:18:124",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1955:2:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2006:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2015:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2018:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2008:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2008:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2008:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1994:6:124"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2002:2:124"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1991:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1991:14:124"
                  },
                  "nodeType": "YulIf",
                  "src": "1988:34:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2031:85:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2088:9:124"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2099:6:124"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2084:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2084:22:124"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2108:7:124"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2057:26:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2057:59:124"
                  },
                  "variables": [
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "2035:8:124",
                      "type": ""
                    },
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "2045:8:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2125:18:124",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "2135:8:124"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2125:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2152:18:124",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "2162:8:124"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2152:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2179:48:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2212:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2223:2:124",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2208:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2208:18:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2195:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2195:32:124"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2183:8:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2256:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2265:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2268:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2258:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2258:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2258:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2242:8:124"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2252:2:124"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2239:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2239:16:124"
                  },
                  "nodeType": "YulIf",
                  "src": "2236:36:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2281:87:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2338:9:124"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2349:8:124"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2334:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2334:24:124"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2360:7:124"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2307:26:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2307:61:124"
                  },
                  "variables": [
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "2285:8:124",
                      "type": ""
                    },
                    {
                      "name": "value5_1",
                      "nodeType": "YulTypedName",
                      "src": "2295:8:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2377:18:124",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "2387:8:124"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2377:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2404:18:124",
                  "value": {
                    "name": "value5_1",
                    "nodeType": "YulIdentifier",
                    "src": "2414:8:124"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "2404:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20WithTokenInfo_$25464t_enum$_Upgradability_$24424t_string_calldata_ptrt_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1553:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1564:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1576:6:124",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1584:6:124",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1592:6:124",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1600:6:124",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1608:6:124",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1616:6:124",
                "type": ""
              }
            ],
            "src": "1419:1009:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2503:197:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2549:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2558:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2561:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2551:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2551:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2551:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2524:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2533:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2520:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2520:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2545:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2516:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2516:32:124"
                  },
                  "nodeType": "YulIf",
                  "src": "2513:52:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2574:36:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2600:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2587:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2587:23:124"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2578:5:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2664:5:124"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "2619:44:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2619:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2619:51:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2679:15:124",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2689:5:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2679:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2469:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2480:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2492:6:124",
                "type": ""
              }
            ],
            "src": "2433:267:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2806:76:124",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2816:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2828:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2839:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2824:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2824:18:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2816:4:124"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2858:9:124"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2869:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2851:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2851:25:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2851:25:124"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2775:9:124",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2786:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2797:4:124",
                "type": ""
              }
            ],
            "src": "2705:177:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3017:102:124",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3027:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3039:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3050:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3035:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3035:18:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3027:4:124"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3069:9:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3084:6:124"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3100:3:124",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3105:1:124",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3096:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3096:11:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3109:1:124",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3092:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3092:19:124"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3080:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3080:32:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3062:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3062:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3062:51:124"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IConstantOutflowNFT_$23686__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2986:9:124",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2997:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3008:4:124",
                "type": ""
              }
            ],
            "src": "2887:232:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3253:102:124",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3263:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3275:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3286:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3271:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3271:18:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3263:4:124"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3305:9:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3320:6:124"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3336:3:124",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3341:1:124",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3332:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3332:11:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3345:1:124",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3328:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3328:19:124"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3316:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3316:32:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3298:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3298:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3298:51:124"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IConstantInflowNFT_$23632__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3222:9:124",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3233:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3244:4:124",
                "type": ""
              }
            ],
            "src": "3124:231:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3500:510:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3546:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3555:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3558:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3548:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3548:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3548:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3521:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3530:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3517:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3517:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3542:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3513:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3513:32:124"
                  },
                  "nodeType": "YulIf",
                  "src": "3510:52:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3571:37:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3598:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3585:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3585:23:124"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3575:6:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3617:28:124",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3627:18:124",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3621:2:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3672:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3681:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3684:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3674:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3674:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3674:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3660:6:124"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3668:2:124"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3657:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3657:14:124"
                  },
                  "nodeType": "YulIf",
                  "src": "3654:34:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3697:32:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3711:9:124"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3722:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3707:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3707:22:124"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3701:2:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3777:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3786:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3789:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3779:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3779:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3779:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3756:2:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3760:4:124",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3752:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3752:13:124"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3767:7:124"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3748:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3748:27:124"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3741:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3741:35:124"
                  },
                  "nodeType": "YulIf",
                  "src": "3738:55:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3802:30:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3829:2:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3816:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3816:16:124"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3806:6:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3859:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3868:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3871:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3861:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3861:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3861:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3847:6:124"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3855:2:124"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3844:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3844:14:124"
                  },
                  "nodeType": "YulIf",
                  "src": "3841:34:124"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3933:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3942:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3945:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3935:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3935:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3935:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3898:2:124"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3906:1:124",
                                    "type": "",
                                    "value": "6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3909:6:124"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3902:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3902:14:124"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3894:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3894:23:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3919:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3890:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3890:32:124"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3924:7:124"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3887:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3887:45:124"
                  },
                  "nodeType": "YulIf",
                  "src": "3884:65:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3958:21:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3972:2:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3976:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3968:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3968:11:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3958:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3988:16:124",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "3998:6:124"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3988:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_struct$_InitializeData_$41997_calldata_ptr_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3458:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3469:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3481:6:124",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3489:6:124",
                "type": ""
              }
            ],
            "src": "3360:650:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4058:71:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4107:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4116:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4119:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4109:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4109:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4109:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4081:5:124"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4092:5:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4099:4:124",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4088:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4088:16:124"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4078:2:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4078:27:124"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4071:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4071:35:124"
                  },
                  "nodeType": "YulIf",
                  "src": "4068:55:124"
                }
              ]
            },
            "name": "validator_revert_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4047:5:124",
                "type": ""
              }
            ],
            "src": "4015:114:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4344:924:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4391:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4400:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4403:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4393:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4393:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4393:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4365:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4374:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4361:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4361:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4386:3:124",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4357:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4357:33:124"
                  },
                  "nodeType": "YulIf",
                  "src": "4354:53:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4416:36:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4442:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4429:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4429:23:124"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4420:5:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4506:5:124"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "4461:44:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4461:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4461:51:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4521:15:124",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4531:5:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4521:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4545:47:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4577:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4588:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4573:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4573:18:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4560:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4560:32:124"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4549:7:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4624:7:124"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "4601:22:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4601:31:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4601:31:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4641:17:124",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4651:7:124"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4641:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4667:59:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4711:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4722:2:124",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4707:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4707:18:124"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_enum_Upgradability",
                      "nodeType": "YulIdentifier",
                      "src": "4677:29:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4677:49:124"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4667:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4735:46:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4766:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4777:2:124",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4762:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4762:18:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4749:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4749:32:124"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4739:6:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4790:28:124",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4800:18:124",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4794:2:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4845:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4854:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4857:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4847:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4847:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4847:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4833:6:124"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4841:2:124"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4830:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4830:14:124"
                  },
                  "nodeType": "YulIf",
                  "src": "4827:34:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4870:85:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4927:9:124"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4938:6:124"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4923:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4923:22:124"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4947:7:124"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4896:26:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4896:59:124"
                  },
                  "variables": [
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "4874:8:124",
                      "type": ""
                    },
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "4884:8:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4964:18:124",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "4974:8:124"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4964:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4991:18:124",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "5001:8:124"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4991:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5018:49:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5051:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5062:3:124",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5047:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5047:19:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5034:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5034:33:124"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "5022:8:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5096:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5105:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5108:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5098:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5098:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5098:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "5082:8:124"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5092:2:124"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5079:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5079:16:124"
                  },
                  "nodeType": "YulIf",
                  "src": "5076:36:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5121:87:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5178:9:124"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "5189:8:124"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5174:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5174:24:124"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5200:7:124"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5147:26:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5147:61:124"
                  },
                  "variables": [
                    {
                      "name": "value5_1",
                      "nodeType": "YulTypedName",
                      "src": "5125:8:124",
                      "type": ""
                    },
                    {
                      "name": "value6_1",
                      "nodeType": "YulTypedName",
                      "src": "5135:8:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5217:18:124",
                  "value": {
                    "name": "value5_1",
                    "nodeType": "YulIdentifier",
                    "src": "5227:8:124"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "5217:6:124"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5244:18:124",
                  "value": {
                    "name": "value6_1",
                    "nodeType": "YulIdentifier",
                    "src": "5254:8:124"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "5244:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1540t_uint8t_enum$_Upgradability_$24424t_string_calldata_ptrt_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4262:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4273:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4285:6:124",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4293:6:124",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4301:6:124",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4309:6:124",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4317:6:124",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4325:6:124",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "4333:6:124",
                "type": ""
              }
            ],
            "src": "4134:1134:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5396:161:124",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5406:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5418:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5429:2:124",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5414:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5414:18:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5406:4:124"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5448:9:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5463:6:124"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5479:3:124",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5484:1:124",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5475:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5475:11:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5488:1:124",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5471:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5471:19:124"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5459:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5459:32:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5441:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5441:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5441:51:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5512:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5523:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5508:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5508:18:124"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5542:6:124"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5535:6:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5535:14:124"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5528:6:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5528:22:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5501:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5501:50:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5501:50:124"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5357:9:124",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5368:6:124",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5376:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5387:4:124",
                "type": ""
              }
            ],
            "src": "5273:284:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5641:168:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5687:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5696:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5699:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5689:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5689:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5689:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5662:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5671:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5658:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5658:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5683:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5654:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5654:32:124"
                  },
                  "nodeType": "YulIf",
                  "src": "5651:52:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5712:29:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5731:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5725:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5725:16:124"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5716:5:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5773:5:124"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "5750:22:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5750:29:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5750:29:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5788:15:124",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5798:5:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5788:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5607:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5618:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5630:6:124",
                "type": ""
              }
            ],
            "src": "5562:247:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5846:95:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5863:1:124",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5870:3:124",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5875:10:124",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5866:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5866:20:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5856:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5856:31:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5856:31:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5903:1:124",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5906:4:124",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5896:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5896:15:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5896:15:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5927:1:124",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5930:4:124",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5920:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5920:15:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5920:15:124"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "5814:127:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6012:184:124",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6022:10:124",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6031:1:124",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6026:1:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6091:63:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6116:3:124"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6121:1:124"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6112:3:124"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6112:11:124"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6135:3:124"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6140:1:124"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6131:3:124"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6131:11:124"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6125:5:124"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6125:18:124"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6105:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6105:39:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6105:39:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6052:1:124"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6055:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6049:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6049:13:124"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6063:19:124",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6065:15:124",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6074:1:124"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6077:2:124",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6070:3:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6070:10:124"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6065:1:124"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6045:3:124",
                    "statements": []
                  },
                  "src": "6041:113:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "6174:3:124"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6179:6:124"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6170:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6170:16:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6188:1:124",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6163:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6163:27:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6163:27:124"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5990:3:124",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "5995:3:124",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6000:6:124",
                "type": ""
              }
            ],
            "src": "5946:250:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6292:806:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6338:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6347:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6350:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6340:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6340:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6340:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6313:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6322:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6309:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6309:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6334:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6305:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6305:32:124"
                  },
                  "nodeType": "YulIf",
                  "src": "6302:52:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6363:30:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6383:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6377:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6377:16:124"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "6367:6:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6402:28:124",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6412:18:124",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6406:2:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6457:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6466:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6469:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6459:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6459:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6459:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6445:6:124"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6453:2:124"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6442:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6442:14:124"
                  },
                  "nodeType": "YulIf",
                  "src": "6439:34:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6482:32:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6496:9:124"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6507:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6492:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6492:22:124"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "6486:2:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6562:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6571:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6574:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6564:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6564:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6564:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "6541:2:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6545:4:124",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6537:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6537:13:124"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6552:7:124"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6533:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6533:27:124"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6526:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6526:35:124"
                  },
                  "nodeType": "YulIf",
                  "src": "6523:55:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6587:19:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "6603:2:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6597:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6597:9:124"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "6591:2:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6629:22:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6631:16:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6631:18:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6631:18:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "6621:2:124"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6625:2:124"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6618:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6618:10:124"
                  },
                  "nodeType": "YulIf",
                  "src": "6615:36:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6660:17:124",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6674:2:124",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "6670:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6670:7:124"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "6664:2:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6686:23:124",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6706:2:124",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6700:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6700:9:124"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "6690:6:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6718:71:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6740:6:124"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "6764:2:124"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6768:4:124",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6760:3:124"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6760:13:124"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "6775:2:124"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6756:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6756:22:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6780:2:124",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6752:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6752:31:124"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "6785:2:124"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6748:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6748:40:124"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6736:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6736:53:124"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "6722:10:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6848:22:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6850:16:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6850:18:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6850:18:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "6807:10:124"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6819:2:124"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6804:2:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6804:18:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "6827:10:124"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6839:6:124"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6824:2:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6824:22:124"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "6801:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6801:46:124"
                  },
                  "nodeType": "YulIf",
                  "src": "6798:72:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6886:2:124",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "6890:10:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6879:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6879:22:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6879:22:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6917:6:124"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "6925:2:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6910:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6910:18:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6910:18:124"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6974:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6983:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6986:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6976:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6976:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6976:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "6951:2:124"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "6955:2:124"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6947:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6947:11:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6960:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6943:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6943:20:124"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "6965:7:124"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6940:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6940:33:124"
                  },
                  "nodeType": "YulIf",
                  "src": "6937:53:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "7038:2:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7042:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7034:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7034:11:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7051:6:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7059:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7047:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7047:15:124"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "7064:2:124"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "6999:34:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6999:68:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6999:68:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7076:16:124",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "7086:6:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7076:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6258:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6269:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6281:6:124",
                "type": ""
              }
            ],
            "src": "6201:897:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7332:196:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7349:3:124"
                      },
                      {
                        "hexValue": "537570657220",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7354:8:124",
                        "type": "",
                        "value": "Super "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7342:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7342:21:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7342:21:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7372:27:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7392:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7386:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7386:13:124"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7376:6:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7447:6:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7455:4:124",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7443:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7443:17:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7466:3:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7471:1:124",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7462:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7462:11:124"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7475:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "7408:34:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7408:74:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7408:74:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7491:31:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7506:3:124"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7511:6:124"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7502:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7502:16:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7520:1:124",
                        "type": "",
                        "value": "6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7498:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7498:24:124"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7491:3:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_ebd27962ce5590c269f1456623323f17a34c644eb379ed98ba3fc280518c503d_t_string_memory_ptr__to_t_bytes6_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7308:3:124",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7313:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7324:3:124",
                "type": ""
              }
            ],
            "src": "7103:425:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7762:212:124",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7772:27:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7792:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7786:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7786:13:124"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7776:6:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7847:6:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7855:4:124",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7843:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7843:17:124"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7862:3:124"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7867:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "7808:34:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7808:66:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7808:66:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7883:29:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7900:3:124"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7905:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7896:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7896:16:124"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "7887:5:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "7928:5:124"
                      },
                      {
                        "hexValue": "78",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7935:3:124",
                        "type": "",
                        "value": "x"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7921:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7921:18:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7921:18:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7948:20:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "7959:5:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7966:1:124",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7955:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7955:13:124"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7948:3:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83__to_t_string_memory_ptr_t_bytes1__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7738:3:124",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7743:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7754:3:124",
                "type": ""
              }
            ],
            "src": "7533:441:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8029:221:124",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8039:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8059:5:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8053:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8053:12:124"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8043:6:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8081:3:124"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8086:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8074:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8074:19:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8074:19:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8141:5:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8148:4:124",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8137:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8137:16:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8159:3:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8164:4:124",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8155:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8155:14:124"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8171:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "8102:34:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8102:76:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8102:76:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8187:57:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8202:3:124"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8215:6:124"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8223:2:124",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8211:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8211:15:124"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8232:2:124",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8228:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8228:7:124"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8207:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8207:29:124"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8198:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8198:39:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8239:4:124",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8194:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8194:50:124"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8187:3:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8006:5:124",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8013:3:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8021:3:124",
                "type": ""
              }
            ],
            "src": "7979:271:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8504:339:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8521:9:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8536:6:124"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8552:3:124",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8557:1:124",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "8548:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8548:11:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8561:1:124",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8544:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8544:19:124"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8532:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8532:32:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8514:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8514:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8514:51:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8585:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8596:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8581:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8581:18:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8605:6:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8613:4:124",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8601:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8601:17:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8574:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8574:45:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8574:45:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8639:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8650:2:124",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8635:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8635:18:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8655:3:124",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8628:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8628:31:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8628:31:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8668:60:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8700:6:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8712:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8723:3:124",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8708:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8708:19:124"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "8682:17:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8682:46:124"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "8672:6:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8748:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8759:2:124",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8744:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8744:18:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "8768:6:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8776:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8764:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8764:22:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8737:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8737:50:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8737:50:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8796:41:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8822:6:124"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "8830:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "8804:17:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8804:33:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8796:4:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20WithTokenInfo_$25464_t_uint8_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_uint8_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8449:9:124",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8460:6:124",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8468:6:124",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8476:6:124",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8484:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8495:4:124",
                "type": ""
              }
            ],
            "src": "8255:588:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8958:190:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9004:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9013:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9016:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9006:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9006:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9006:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8979:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8988:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8975:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8975:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9000:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8971:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8971:32:124"
                  },
                  "nodeType": "YulIf",
                  "src": "8968:52:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9029:29:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9048:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9042:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9042:16:124"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9033:5:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9112:5:124"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "9067:44:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9067:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9067:51:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9127:15:124",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9137:5:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9127:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IConstantOutflowNFT_$23686_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8924:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8935:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8947:6:124",
                "type": ""
              }
            ],
            "src": "8848:300:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9262:190:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9308:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9317:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9320:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9310:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9310:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9310:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9283:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9292:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9279:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9279:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9304:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9275:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9275:32:124"
                  },
                  "nodeType": "YulIf",
                  "src": "9272:52:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9333:29:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9352:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9346:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9346:16:124"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9337:5:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9416:5:124"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "9371:44:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9371:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9371:51:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9431:15:124",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9441:5:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9431:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IConstantInflowNFT_$23632_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9228:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9239:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9251:6:124",
                "type": ""
              }
            ],
            "src": "9153:299:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9631:236:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9648:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9659:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9641:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9641:21:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9641:21:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9682:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9693:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9678:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9678:18:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9698:2:124",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9671:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9671:30:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9671:30:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9721:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9732:2:124",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9717:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9717:18:124"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9737:34:124",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9710:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9710:62:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9710:62:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9792:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9803:2:124",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9788:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9788:18:124"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9808:16:124",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9781:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9781:44:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9781:44:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9834:27:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9846:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9857:3:124",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9842:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9842:19:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9834:4:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9608:9:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9622:4:124",
                "type": ""
              }
            ],
            "src": "9457:410:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9979:87:124",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9989:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10001:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10012:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9997:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9997:18:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9989:4:124"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10031:9:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10046:6:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10054:4:124",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10042:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10042:17:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10024:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10024:36:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10024:36:124"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9948:9:124",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9959:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9970:4:124",
                "type": ""
              }
            ],
            "src": "9872:194:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10183:190:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10229:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10238:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10241:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10231:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10231:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10231:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10204:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10213:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10200:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10200:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10225:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10196:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10196:32:124"
                  },
                  "nodeType": "YulIf",
                  "src": "10193:52:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10254:29:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10273:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10267:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10267:16:124"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10258:5:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10337:5:124"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "10292:44:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10292:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10292:51:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10352:15:124",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10362:5:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10352:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ISuperfluidGovernance_$25166_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10149:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10160:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10172:6:124",
                "type": ""
              }
            ],
            "src": "10071:302:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10459:190:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10505:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10514:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10517:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10507:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10507:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10507:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10480:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10489:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10476:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10476:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10501:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10472:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10472:32:124"
                  },
                  "nodeType": "YulIf",
                  "src": "10469:52:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10530:29:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10549:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10543:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10543:16:124"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10534:5:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10613:5:124"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "10568:44:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10568:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10568:51:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10628:15:124",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10638:5:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10628:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10425:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10436:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10448:6:124",
                "type": ""
              }
            ],
            "src": "10378:271:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10686:95:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10703:1:124",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10710:3:124",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10715:10:124",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10706:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10706:20:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10696:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10696:31:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10696:31:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10743:1:124",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10746:4:124",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10736:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10736:15:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10736:15:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10767:1:124",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10770:4:124",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10760:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10760:15:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10760:15:124"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "10654:127:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10833:185:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10872:111:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10893:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10900:3:124",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10905:10:124",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "10896:3:124"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10896:20:124"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10886:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10886:31:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10886:31:124"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10937:1:124",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10940:4:124",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10930:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10930:15:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10930:15:124"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10965:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10968:4:124",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10958:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10958:15:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10958:15:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10849:5:124"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10860:1:124",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10856:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10856:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "10846:2:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10846:17:124"
                  },
                  "nodeType": "YulIf",
                  "src": "10843:140:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10992:20:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11003:5:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11010:1:124",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10999:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10999:13:124"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "10992:3:124"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10815:5:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "10825:3:124",
                "type": ""
              }
            ],
            "src": "10786:232:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11055:95:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11072:1:124",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11079:3:124",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11084:10:124",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11075:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11075:20:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11065:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11065:31:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11065:31:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11112:1:124",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11115:4:124",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11105:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11105:15:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11105:15:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11136:1:124",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11139:4:124",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11129:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11129:15:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11129:15:124"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "11023:127:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11222:200:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11239:3:124"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11244:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11232:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11232:19:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11232:19:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11277:3:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11282:4:124",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11273:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11273:14:124"
                      },
                      {
                        "name": "start",
                        "nodeType": "YulIdentifier",
                        "src": "11289:5:124"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11296:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "11260:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11260:43:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11260:43:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11327:3:124"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "11332:6:124"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11323:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11323:16:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11341:4:124",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11319:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11319:27:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11348:1:124",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11312:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11312:38:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11312:38:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11359:57:124",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11374:3:124"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11387:6:124"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11395:2:124",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11383:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11383:15:124"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11404:2:124",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "11400:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11400:7:124"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11379:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11379:29:124"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11370:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11370:39:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11411:4:124",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11366:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11366:50:124"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11359:3:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "start",
                "nodeType": "YulTypedName",
                "src": "11191:5:124",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11198:6:124",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11206:3:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11214:3:124",
                "type": ""
              }
            ],
            "src": "11155:267:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11683:373:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11700:9:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11715:6:124"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11731:3:124",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11736:1:124",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "11727:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11727:11:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11740:1:124",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "11723:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11723:19:124"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11711:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11711:32:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11693:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11693:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11693:51:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11764:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11775:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11760:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11760:18:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11784:6:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11792:4:124",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11780:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11780:17:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11753:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11753:45:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11753:45:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11818:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11829:2:124",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11814:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11814:18:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11834:3:124",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11807:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11807:31:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11807:31:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11847:77:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11888:6:124"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "11896:6:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11908:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11919:3:124",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11904:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11904:19:124"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "11861:26:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11861:63:124"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "11851:6:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11944:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11955:2:124",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11940:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11940:18:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "11964:6:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11972:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11960:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11960:22:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11933:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11933:50:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11933:50:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11992:58:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "12027:6:124"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "12035:6:124"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "12043:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "12000:26:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12000:50:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11992:4:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$1540_t_uint8_t_string_calldata_ptr_t_string_calldata_ptr__to_t_address_t_uint8_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11612:9:124",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "11623:6:124",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "11631:6:124",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "11639:6:124",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11647:6:124",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11655:6:124",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11663:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11674:4:124",
                "type": ""
              }
            ],
            "src": "11427:629:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12262:240:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12279:3:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12288:6:124"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12300:3:124",
                                "type": "",
                                "value": "248"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12305:3:124",
                                "type": "",
                                "value": "255"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "12296:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12296:13:124"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12284:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12284:26:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12272:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12272:39:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12272:39:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "12331:3:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12336:1:124",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12327:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12327:11:124"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12348:2:124",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "12352:6:124"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "12344:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12344:15:124"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12365:26:124",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "12361:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12361:31:124"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12340:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12340:53:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12320:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12320:74:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12320:74:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "12414:3:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12419:2:124",
                            "type": "",
                            "value": "21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12410:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12410:12:124"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12424:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12403:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12403:28:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12403:28:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "12451:3:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12456:2:124",
                            "type": "",
                            "value": "53"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12447:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12447:12:124"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "12461:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12440:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12440:28:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12440:28:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12477:19:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12488:3:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12493:2:124",
                        "type": "",
                        "value": "85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12484:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12484:12:124"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12477:3:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12214:3:124",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "12219:6:124",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12227:6:124",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12235:6:124",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12243:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12254:3:124",
                "type": ""
              }
            ],
            "src": "12061:441:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12681:179:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12698:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12709:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12691:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12691:21:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12691:21:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12732:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12743:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12728:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12728:18:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12748:2:124",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12721:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12721:30:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12721:30:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12771:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12782:2:124",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12767:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12767:18:124"
                      },
                      {
                        "hexValue": "5555505350726f786961626c653a206e6f742075706772616461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12787:31:124",
                        "type": "",
                        "value": "UUPSProxiable: not upgradable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12760:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12760:59:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12760:59:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12828:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12840:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12851:2:124",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12836:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12836:18:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12828:4:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_befd5f2ffca520b9208eba0ffa41bf9e0aed29a8580655fdb778030efa521bea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12658:9:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12672:4:124",
                "type": ""
              }
            ],
            "src": "12507:353:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12946:103:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12992:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13001:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13004:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12994:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12994:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12994:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12967:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12976:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12963:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12963:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12988:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12959:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12959:32:124"
                  },
                  "nodeType": "YulIf",
                  "src": "12956:52:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13017:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13033:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13027:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13027:16:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13017:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12912:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12923:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12935:6:124",
                "type": ""
              }
            ],
            "src": "12865:184:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13228:225:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13245:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13256:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13238:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13238:21:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13238:21:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13279:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13290:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13275:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13275:18:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13295:2:124",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13268:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13268:30:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13268:30:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13318:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13329:2:124",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13314:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13314:18:124"
                      },
                      {
                        "hexValue": "5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13334:34:124",
                        "type": "",
                        "value": "UUPSProxiable: not compatible lo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13307:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13307:62:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13307:62:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13389:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13400:2:124",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13385:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13385:18:124"
                      },
                      {
                        "hexValue": "676963",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13405:5:124",
                        "type": "",
                        "value": "gic"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13378:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13378:33:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13378:33:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13420:27:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13432:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13443:3:124",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13428:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13428:19:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13420:4:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0c74ad657035ec53451093745d5caa5909a42dace836130f97873b36755af913__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13205:9:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13219:4:124",
                "type": ""
              }
            ],
            "src": "13054:399:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13632:175:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13649:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13660:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13642:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13642:21:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13642:21:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13683:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13694:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13679:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13679:18:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13699:2:124",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13672:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13672:30:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13672:30:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13722:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13733:2:124",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13718:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13718:18:124"
                      },
                      {
                        "hexValue": "5555505350726f786961626c653a2070726f7879206c6f6f70",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13738:27:124",
                        "type": "",
                        "value": "UUPSProxiable: proxy loop"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13711:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13711:55:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13711:55:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13775:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13787:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13798:2:124",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13783:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13783:18:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13775:4:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7cebf0bf1547141b7b7f87cc08cf4eb6b11676b9b00928b28fdc7e005edd97c0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13609:9:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13623:4:124",
                "type": ""
              }
            ],
            "src": "13458:349:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13941:145:124",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13951:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13963:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13974:2:124",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13959:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13959:18:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13951:4:124"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13993:9:124"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14004:6:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13986:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13986:25:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13986:25:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14031:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14042:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14027:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14027:18:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "14051:6:124"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14067:3:124",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14072:1:124",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "14063:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14063:11:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14076:1:124",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "14059:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14059:19:124"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14047:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14047:32:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14020:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14020:60:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14020:60:124"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13902:9:124",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13913:6:124",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13921:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13932:4:124",
                "type": ""
              }
            ],
            "src": "13812:274:124"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_ERC20WithTokenInfo(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ERC20WithTokenInfo_$25464(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ISuperToken_$24383__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_enum_Upgradability(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ERC20WithTokenInfo_$25464t_enum$_Upgradability_$24424t_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n        value1 := abi_decode_enum_Upgradability(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IConstantOutflowNFT_$23686__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IConstantInflowNFT_$23632__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_struct$_InitializeData_$41997_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(6, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function validator_revert_uint8(value)\n    {\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1540t_uint8t_enum$_Upgradability_$24424t_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_uint8(value_1)\n        value1 := value_1\n        value2 := abi_decode_enum_Upgradability(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint8(value)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_packed_t_stringliteral_ebd27962ce5590c269f1456623323f17a34c644eb379ed98ba3fc280518c503d_t_string_memory_ptr__to_t_bytes6_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"Super \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 6), length)\n        end := add(add(pos, length), 6)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83__to_t_string_memory_ptr_t_bytes1__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, \"x\")\n        end := add(end_1, 1)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_contract$_ERC20WithTokenInfo_$25464_t_uint8_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_uint8_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), 128)\n        let tail_1 := abi_encode_string(value2, add(headStart, 128))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_string(value3, tail_1)\n    }\n    function abi_decode_tuple_t_contract$_IConstantOutflowNFT_$23686_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IConstantInflowNFT_$23632_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_contract$_ISuperfluidGovernance_$25166_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1540_t_uint8_t_string_calldata_ptr_t_string_calldata_ptr__to_t_address_t_uint8_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), 128)\n        let tail_1 := abi_encode_string_calldata(value2, value3, add(headStart, 128))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_string_calldata(value4, value5, tail_1)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(value0, shl(248, 255)))\n        mstore(add(pos, 1), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 21), value2)\n        mstore(add(pos, 53), value3)\n        end := add(pos, 85)\n    }\n    function abi_encode_tuple_t_stringliteral_befd5f2ffca520b9208eba0ffa41bf9e0aed29a8580655fdb778030efa521bea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"UUPSProxiable: not upgradable\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_0c74ad657035ec53451093745d5caa5909a42dace836130f97873b36755af913__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"UUPSProxiable: not compatible lo\")\n        mstore(add(headStart, 96), \"gic\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7cebf0bf1547141b7b7f87cc08cf4eb6b11676b9b00928b28fdc7e005edd97c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"UUPSProxiable: proxy loop\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 124,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "13238:681:103:-:0;;;13531:386;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3244:12:103;;;;;3422:36;;;;;;3469:53;;;-1:-1:-1;;;3469:53:103;;;;13749:4;;13767:15;;13796:18;;13828:17;;3422:36;3469:51;;:53;;;;;;;;;;;;;;;3422:36;3469:53;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;3533:52:103;;;;;3596:50;;;;;3940:18;;3917:42;;;;;-1:-1:-1;3917:42:103;;;;;3049:917;;;;13531:386;;;;13238:681;;14:144:124;-1:-1:-1;;;;;102:31:124;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:805::-;359:6;367;375;383;436:3;424:9;415:7;411:23;407:33;404:53;;;453:1;450;443:12;404:53;485:9;479:16;504:44;542:5;504:44;:::i;:::-;617:2;602:18;;596:25;567:5;;-1:-1:-1;630:46:124;596:25;630:46;:::i;:::-;747:2;732:18;;726:25;695:7;;-1:-1:-1;760:46:124;726:25;760:46;:::i;:::-;877:2;862:18;;856:25;825:7;;-1:-1:-1;890:46:124;856:25;890:46;:::i;:::-;163:805;;;;-1:-1:-1;163:805:124;;-1:-1:-1;;163:805:124:o;:::-;13238:681:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "13238:681:103:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6464:2056;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;655:32:124;;;637:51;;625:2;610:18;6464:2056:103;;;;;;;;4011:146;4144:5;4011:146;;9877:434;;;;;;:::i;:::-;;:::i;4958:1094::-;;;;;;:::i;:::-;;:::i;:::-;;400:122:108;;;:::i;4555:166:103:-;;;4636:78;2851:25:124;;2839:2;2824:18;4555:166:103;2705:177:124;1382:63:103;;;;;1504:61;;;;;4382:167;;;:::i;6282:137::-;6394:18;6282:137;;12445:789;;;;;;:::i;:::-;;:::i;8565:1267::-;;;;;;:::i;:::-;;:::i;10855:1033::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5459:32:124;;;5441:51;;5535:14;;5528:22;5523:2;5508:18;;5501:50;5414:18;10855:1033:103;5273:284:124;1233:47:103;;;;;10356:454;;;;;;:::i;:::-;;:::i;11933:257::-;;;;;;:::i;:::-;-1:-1:-1;;;;;12108:75:103;;;12047:25;12108:75;;;:28;:75;;;;;;;;11933:257;6464:2056;6572:11;6755:40;;;:28;:40;;;;-1:-1:-1;;;;;6755:40:103;6751:127;;6832:35;;-1:-1:-1;;;6832:35:103;;;;;;;;;;;6751:127;-1:-1:-1;;;;;6993:82:103;;;6888:30;6993:82;;;:28;:82;;;;;;6929:16;;6993:82;7171:40;;7167:114;;7234:36;;-1:-1:-1;;;7234:36:103;;;;;;;;;;;7167:114;7414:34;;;-1:-1:-1;;;;;655:32:124;;7414:34:103;;;637:51:124;7389:12:103;;610:18:124;7414:34:103;;;;;;;;;;;;7404:45;;;;;;7389:60;;7459:15;7498:4;7477:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7586:52:103;;;;;;;:28;:52;;;;;;;:91;;-1:-1:-1;;;;;;7586:91:103;;;;;;;;;;7774:50;;-1:-1:-1;;;7774:50:103;;7804:18;655:32:124;;;7774:50:103;;;637:51:124;7586:91:103;;-1:-1:-1;7774:21:103;;610:18:124;;7774:50:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7893:22;7938:5;7893:52;;7993:24;8020:16;-1:-1:-1;;;;;8020:25:103;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7993:54;;8057:28;8088:16;-1:-1:-1;;;;;8088:21:103;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8088:23:103;;;;;;;;;;;;:::i;:::-;8057:54;;8121:30;8154:16;-1:-1:-1;;;;;8154:23:103;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8154:25:103;;;;;;;;;;;;:::i;:::-;8121:58;;8244:10;-1:-1:-1;;;;;8244:21:103;;8279:16;8309:18;8365:14;8341:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;8408:16;8394:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;8244:196;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8456:29:103;;-1:-1:-1;;;;;8456:29:103;;;-1:-1:-1;8456:29:103;;-1:-1:-1;8456:29:103;;;-1:-1:-1;8503:10:103;;6464:2056;-1:-1:-1;;;;;;;;6464:2056:103:o;9877:434::-;10097:22;10142:162;10174:15;10203;-1:-1:-1;;;;;10203:24:103;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10243:13;10270:4;;10288:6;;10142:18;:162::i;:::-;10135:169;9877:434;-1:-1:-1;;;;;;;9877:434:103:o;4958:1094::-;5030:10;-1:-1:-1;;;;;5052:5:103;5030:28;;5026:97;;5081:31;;-1:-1:-1;;;5081:31:103;;;;;;;;;;;5026:97;5132:30;5151:10;5132:18;:30::i;:::-;5399:28;5448:10;5399:60;;5469:31;5511:10;-1:-1:-1;;;;;5511:37:103;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5469:82;;5561:30;5602:10;-1:-1:-1;;;;;5602:36:103;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5561:80;;5695:23;-1:-1:-1;;;;;5656:62:103;5664:26;-1:-1:-1;;;;;5656:62:103;;5652:194;;5756:18;-1:-1:-1;;;;;5756:39:103;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5734:101;;-1:-1:-1;;;5734:101:103;;-1:-1:-1;;;;;655:32:124;;;5734:101:103;;;637:51:124;5734:76:103;;;;;;;610:18:124;;5734:101:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5652:194;5898:22;-1:-1:-1;;;;;5860:60:103;5868:25;-1:-1:-1;;;;;5860:60:103;;5856:190;;5958:18;-1:-1:-1;;;;;5958:38:103;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5936:99;;-1:-1:-1;;;5936:99:103;;-1:-1:-1;;;;;655:32:124;;;5936:99:103;;;637:51:124;5936:75:103;;;;;;;610:18:124;;5936:99:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5856:190;5016:1036;;;4958:1094;:::o;400:122:108:-;447:19;489:26;751:20:110;745:27;;618:170;489:26:108;482:33;;400:122;:::o;4382:167:103:-;3257:19:7;3280:13;;;;;;3279:14;;3325:34;;;;-1:-1:-1;3343:12:7;;3358:1;3343:12;;;;:16;3325:34;3324:97;;;-1:-1:-1;3393:4:7;1465:19:18;:23;;;3365:55:7;;-1:-1:-1;3403:12:7;;;;;:17;3365:55;3303:190;;;;-1:-1:-1;;;3303:190:7;;9659:2:124;3303:190:7;;;9641:21:124;9698:2;9678:18;;;9671:30;9737:34;9717:18;;;9710:62;-1:-1:-1;;;9788:18:124;;;9781:44;9842:19;;3303:190:7;;;;;;;;;3503:12;:16;;-1:-1:-1;;3503:16:7;3518:1;3503:16;;;3529:65;;;;3563:13;:20;;-1:-1:-1;;3563:20:7;;;;;3529:65;3618:14;3614:99;;;3664:5;3648:21;;-1:-1:-1;;3648:21:7;;;3688:14;;-1:-1:-1;10024:36:124;;3688:14:7;;10012:2:124;9997:18;3688:14:7;;;;;;;;3614:99;3247:472;4382:167:103:o;12445:789::-;12567:11;12597:5;-1:-1:-1;;;;;12597:19:103;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12567:53;;12648:3;-1:-1:-1;;;;;12648:9:103;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12634:25:103;:10;-1:-1:-1;;;;;12634:25:103;;12630:81;;12668:43;;-1:-1:-1;;;12668:43:103;;;;;;;;;;;12630:81;12955:1;12903:40;;:28;:40;;;;-1:-1:-1;;;;;12903:40:103;:54;12899:128;;12980:36;;-1:-1:-1;;;12980:36:103;;;;;;;;;;;12899:128;13072:9;13067:161;13087:16;;;13067:161;;;13181:5;;13187:1;13181:8;;;;;;;:::i;:::-;;;;;;:36;;;;;;;;;;:::i;:::-;13124:28;:54;13153:5;;13159:1;13153:8;;;;;;;:::i;:::-;:24;;;:8;;;;;:24;;;;-1:-1:-1;13153:24:103;:::i;:::-;-1:-1:-1;;;;;13124:54:103;;;;;;;;;;;;;;-1:-1:-1;13124:54:103;:93;;-1:-1:-1;;;;;;13124:93:103;;;;;;;;;;;13105:3;;;;:::i;:::-;;;;13067:161;;8565:1267;8805:22;-1:-1:-1;;;;;8847:38:103;;8843:110;;8908:34;;-1:-1:-1;;;8908:34:103;;;;;;;;;;;8843:110;8984:28;8967:13;:45;;;;;;;;:::i;:::-;;8963:645;;9035:51;;-1:-1:-1;;;9035:51:103;;;;;;;;;;;8963:645;9124:29;9107:13;:46;;;;;;;;:::i;:::-;;9103:505;;9169:15;9187;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9254:50:103;;-1:-1:-1;;;9254:50:103;;-1:-1:-1;;;;;9284:18:103;655:32:124;;9254:50:103;;;637:51:124;9169:33:103;;-1:-1:-1;9254:21:103;;;;;;610:18:124;;9254:50:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9351:5;9318:40;;9155:214;9103:505;;;9438:35;9476;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;9438:73;;9525:5;-1:-1:-1;;;;;9525:16:103;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9590:5:103;;-1:-1:-1;;;;9103:505:103;9650:130;;-1:-1:-1;;;9650:130:103;;-1:-1:-1;;;;;9650:21:103;;;;;:130;;9685:15;;9714:18;;9746:4;;;;9764:6;;;;9650:130;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9796:29:103;;-1:-1:-1;;;;;9796:29:103;;;-1:-1:-1;9796:29:103;;-1:-1:-1;9796:29:103;;;8565:1267;;;;;;;;;:::o;10855:1033::-;-1:-1:-1;;;;;11057:68:103;;;10973:25;11057:68;;;:28;:68;;;;;;10973:25;;;;11057:68;11140:29;;11136:746;;11205:15;11185:35;;11247:4;11234:17;;11136:746;;;11282:21;11306:28;;;;;;;;:::i;:::-;-1:-1:-1;;11306:28:103;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:32:124;;11306:28:103;11647;;637:51:124;11306:28:103;;-1:-1:-1;;;;;;;11544:12:103;11598:4;;610:18:124;11647:28:103;;;;;;;;;;;;11637:39;;;;;;11720:8;11710:19;;;;;;11494:265;;;;;;;;;;-1:-1:-1;;;;;;12284:26:124;;;;12272:39;;12348:2;12344:15;;;;-1:-1:-1;;12340:53:124;12336:1;12327:11;;12320:74;12419:2;12410:12;;12403:28;12456:2;12447:12;;12440:28;12493:2;12484:12;;12061:441;11494:265:103;;;;;;;;;;;;;11455:330;;;;;;11422:385;;11348:491;;11866:5;11853:18;;11268:614;11136:746;11021:867;10855:1033;;;:::o;10356:454::-;10671:57;;-1:-1:-1;;;10671:57:103;;-1:-1:-1;;;;;10708:18:103;655:32:124;;10671:57:103;;;637:51:124;10637:21:103;;10671:28;;;;;;610:18:124;;10671:57:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10744:59:103;;-1:-1:-1;;;;;10744:59:103;;;-1:-1:-1;10744:59:103;;-1:-1:-1;10744:59:103;;;10467:343;10356:454;:::o;1289:576:108:-;1457:1;1419:26;751:20:110;745:27;;618:170;1419:26:108;-1:-1:-1;;;;;1419:40:108;;1411:82;;;;-1:-1:-1;;;1411:82:108;;12709:2:124;1411:82:108;;;12691:21:124;12748:2;12728:18;;;12721:30;12787:31;12767:18;;;12760:59;12836:18;;1411:82:108;12507:353:124;1411:82:108;1557:10;-1:-1:-1;;;;;1543:39:108;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4636:78:103;1524:60:108;1503:142;;;;-1:-1:-1;;;1503:142:108;;13256:2:124;1503:142:108;;;13238:21:124;13295:2;13275:18;;;13268:30;13334:34;13314:18;;;13307:62;-1:-1:-1;;;13385:18:124;;;13378:33;13428:19;;1503:142:108;13054:399:124;1503:142:108;-1:-1:-1;;;;;1676:27:108;;1684:4;1676:27;1655:99;;;;-1:-1:-1;;;1655:99:108;;13660:2:124;1655:99:108;;;13642:21:124;13699:2;13679:18;;;13672:30;13738:27;13718:18;;;13711:55;13783:18;;1655:99:108;13458:349:124;1655:99:108;1764:39;1792:10;988:20:110;964:87;839:228;1764:39:108;1818:40;4636:78:103;1818:40:108;;;13986:25:124;;;-1:-1:-1;;;;;14047:32:124;;14042:2;14027:18;;14020:60;13959:18;1818:40:108;13812:274:124;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;14:151:124:-;-1:-1:-1;;;;;109:31:124;;99:42;;89:70;;155:1;152;145:12;170:295;257:6;310:2;298:9;289:7;285:23;281:32;278:52;;;326:1;323;316:12;278:52;365:9;352:23;384:51;429:5;384:51;:::i;:::-;454:5;170:295;-1:-1:-1;;;170:295:124:o;907:154::-;986:20;;1035:1;1025:12;;1015:40;;1051:1;1048;1041:12;1015:40;907:154;;;:::o;1066:348::-;1118:8;1128:6;1182:3;1175:4;1167:6;1163:17;1159:27;1149:55;;1200:1;1197;1190:12;1149:55;-1:-1:-1;1223:20:124;;1266:18;1255:30;;1252:50;;;1298:1;1295;1288:12;1252:50;1335:4;1327:6;1323:17;1311:29;;1387:3;1380:4;1371:6;1363;1359:19;1355:30;1352:39;1349:59;;;1404:1;1401;1394:12;1349:59;1066:348;;;;;:::o;1419:1009::-;1576:6;1584;1592;1600;1608;1616;1669:3;1657:9;1648:7;1644:23;1640:33;1637:53;;;1686:1;1683;1676:12;1637:53;1725:9;1712:23;1744:51;1789:5;1744:51;:::i;:::-;1814:5;-1:-1:-1;1838:49:124;1883:2;1868:18;;1838:49;:::i;:::-;1828:59;;1938:2;1927:9;1923:18;1910:32;1961:18;2002:2;1994:6;1991:14;1988:34;;;2018:1;2015;2008:12;1988:34;2057:59;2108:7;2099:6;2088:9;2084:22;2057:59;:::i;:::-;2135:8;;-1:-1:-1;2031:85:124;-1:-1:-1;2223:2:124;2208:18;;2195:32;;-1:-1:-1;2239:16:124;;;2236:36;;;2268:1;2265;2258:12;2236:36;;2307:61;2360:7;2349:8;2338:9;2334:24;2307:61;:::i;:::-;1419:1009;;;;-1:-1:-1;1419:1009:124;;-1:-1:-1;1419:1009:124;;2387:8;;1419:1009;-1:-1:-1;;;1419:1009:124:o;3360:650::-;3481:6;3489;3542:2;3530:9;3521:7;3517:23;3513:32;3510:52;;;3558:1;3555;3548:12;3510:52;3598:9;3585:23;3627:18;3668:2;3660:6;3657:14;3654:34;;;3684:1;3681;3674:12;3654:34;3722:6;3711:9;3707:22;3697:32;;3767:7;3760:4;3756:2;3752:13;3748:27;3738:55;;3789:1;3786;3779:12;3738:55;3829:2;3816:16;3855:2;3847:6;3844:14;3841:34;;;3871:1;3868;3861:12;3841:34;3924:7;3919:2;3909:6;3906:1;3902:14;3898:2;3894:23;3890:32;3887:45;3884:65;;;3945:1;3942;3935:12;3884:65;3976:2;3968:11;;;;;3998:6;;-1:-1:-1;3360:650:124;;-1:-1:-1;;;;3360:650:124:o;4015:114::-;4099:4;4092:5;4088:16;4081:5;4078:27;4068:55;;4119:1;4116;4109:12;4134:1134;4285:6;4293;4301;4309;4317;4325;4333;4386:3;4374:9;4365:7;4361:23;4357:33;4354:53;;;4403:1;4400;4393:12;4354:53;4442:9;4429:23;4461:51;4506:5;4461:51;:::i;:::-;4531:5;-1:-1:-1;4588:2:124;4573:18;;4560:32;4601:31;4560:32;4601:31;:::i;:::-;4651:7;-1:-1:-1;4677:49:124;4722:2;4707:18;;4677:49;:::i;:::-;4667:59;;4777:2;4766:9;4762:18;4749:32;4800:18;4841:2;4833:6;4830:14;4827:34;;;4857:1;4854;4847:12;4827:34;4896:59;4947:7;4938:6;4927:9;4923:22;4896:59;:::i;:::-;4974:8;;-1:-1:-1;4870:85:124;-1:-1:-1;5062:3:124;5047:19;;5034:33;;-1:-1:-1;5079:16:124;;;5076:36;;;5108:1;5105;5098:12;5076:36;;5147:61;5200:7;5189:8;5178:9;5174:24;5147:61;:::i;:::-;4134:1134;;;;-1:-1:-1;4134:1134:124;;-1:-1:-1;4134:1134:124;;;;5121:87;;-1:-1:-1;;;4134:1134:124:o;5562:247::-;5630:6;5683:2;5671:9;5662:7;5658:23;5654:32;5651:52;;;5699:1;5696;5689:12;5651:52;5731:9;5725:16;5750:29;5773:5;5750:29;:::i;5814:127::-;5875:10;5870:3;5866:20;5863:1;5856:31;5906:4;5903:1;5896:15;5930:4;5927:1;5920:15;5946:250;6031:1;6041:113;6055:6;6052:1;6049:13;6041:113;;;6131:11;;;6125:18;6112:11;;;6105:39;6077:2;6070:10;6041:113;;;-1:-1:-1;;6188:1:124;6170:16;;6163:27;5946:250::o;6201:897::-;6281:6;6334:2;6322:9;6313:7;6309:23;6305:32;6302:52;;;6350:1;6347;6340:12;6302:52;6383:9;6377:16;6412:18;6453:2;6445:6;6442:14;6439:34;;;6469:1;6466;6459:12;6439:34;6507:6;6496:9;6492:22;6482:32;;6552:7;6545:4;6541:2;6537:13;6533:27;6523:55;;6574:1;6571;6564:12;6523:55;6603:2;6597:9;6625:2;6621;6618:10;6615:36;;;6631:18;;:::i;:::-;6706:2;6700:9;6674:2;6760:13;;-1:-1:-1;;6756:22:124;;;6780:2;6752:31;6748:40;6736:53;;;6804:18;;;6824:22;;;6801:46;6798:72;;;6850:18;;:::i;:::-;6890:10;6886:2;6879:22;6925:2;6917:6;6910:18;6965:7;6960:2;6955;6951;6947:11;6943:20;6940:33;6937:53;;;6986:1;6983;6976:12;6937:53;6999:68;7064:2;7059;7051:6;7047:15;7042:2;7038;7034:11;6999:68;:::i;7103:425::-;-1:-1:-1;;;7349:3:124;7342:21;7324:3;7392:6;7386:13;7408:74;7475:6;7471:1;7466:3;7462:11;7455:4;7447:6;7443:17;7408:74;:::i;:::-;7502:16;;;;7520:1;7498:24;;7103:425;-1:-1:-1;;7103:425:124:o;7533:441::-;7754:3;7792:6;7786:13;7808:66;7867:6;7862:3;7855:4;7847:6;7843:17;7808:66;:::i;:::-;-1:-1:-1;;;7896:16:124;;7921:18;;;-1:-1:-1;7966:1:124;7955:13;;7533:441;-1:-1:-1;7533:441:124:o;7979:271::-;8021:3;8059:5;8053:12;8086:6;8081:3;8074:19;8102:76;8171:6;8164:4;8159:3;8155:14;8148:4;8141:5;8137:16;8102:76;:::i;:::-;8232:2;8211:15;-1:-1:-1;;8207:29:124;8198:39;;;;8239:4;8194:50;;7979:271;-1:-1:-1;;7979:271:124:o;8255:588::-;-1:-1:-1;;;;;8532:32:124;;8514:51;;8613:4;8601:17;;8596:2;8581:18;;8574:45;8655:3;8650:2;8635:18;;8628:31;;;-1:-1:-1;;8682:46:124;;8708:19;;8700:6;8682:46;:::i;:::-;8776:9;8768:6;8764:22;8759:2;8748:9;8744:18;8737:50;8804:33;8830:6;8822;8804:33;:::i;8848:300::-;8947:6;9000:2;8988:9;8979:7;8975:23;8971:32;8968:52;;;9016:1;9013;9006:12;8968:52;9048:9;9042:16;9067:51;9112:5;9067:51;:::i;10654:127::-;10715:10;10710:3;10706:20;10703:1;10696:31;10746:4;10743:1;10736:15;10770:4;10767:1;10760:15;10786:232;10825:3;10846:17;;;10843:140;;10905:10;10900:3;10896:20;10893:1;10886:31;10940:4;10937:1;10930:15;10968:4;10965:1;10958:15;10843:140;-1:-1:-1;11010:1:124;10999:13;;10786:232::o;11023:127::-;11084:10;11079:3;11075:20;11072:1;11065:31;11115:4;11112:1;11105:15;11139:4;11136:1;11129:15;11155:267;11244:6;11239:3;11232:19;11296:6;11289:5;11282:4;11277:3;11273:14;11260:43;-1:-1:-1;11348:1:124;11323:16;;;11341:4;11319:27;;;11312:38;;;;11404:2;11383:15;;;-1:-1:-1;;11379:29:124;11370:39;;;11366:50;;11155:267::o;11427:629::-;-1:-1:-1;;;;;11711:32:124;;11693:51;;11792:4;11780:17;;11775:2;11760:18;;11753:45;11834:3;11829:2;11814:18;;11807:31;;;-1:-1:-1;;11861:63:124;;11904:19;;11896:6;11888;11861:63;:::i;:::-;11972:9;11964:6;11960:22;11955:2;11944:9;11940:18;11933:50;12000;12043:6;12035;12027;12000:50;:::i;:::-;11992:58;11427:629;-1:-1:-1;;;;;;;;;11427:629:124:o;12865:184::-;12935:6;12988:2;12976:9;12967:7;12963:23;12959:32;12956:52;;;13004:1;13001;12994:12;12956:52;-1:-1:-1;13027:16:124;;12865:184;-1:-1:-1;12865:184:124:o",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity 0.8.19;\n\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {\n    ISuperTokenFactory,\n    ISuperToken,\n    IERC20,\n    ERC20WithTokenInfo\n} from \"../interfaces/superfluid/ISuperTokenFactory.sol\";\nimport { ISuperfluid } from \"../interfaces/superfluid/ISuperfluid.sol\";\nimport { UUPSProxy } from \"../upgradability/UUPSProxy.sol\";\nimport { UUPSProxiable } from \"../upgradability/UUPSProxiable.sol\";\nimport { SuperToken } from \"../superfluid/SuperToken.sol\";\nimport { FullUpgradableSuperTokenProxy } from \"./FullUpgradableSuperTokenProxy.sol\";\nimport { ConstantOutflowNFT, IConstantOutflowNFT } from \"../superfluid/ConstantOutflowNFT.sol\";\nimport { ConstantInflowNFT, IConstantInflowNFT } from \"../superfluid/ConstantInflowNFT.sol\";\n\nabstract contract SuperTokenFactoryBase is\n    UUPSProxiable,\n    ISuperTokenFactory\n{\n    struct InitializeData {\n        address underlyingToken;\n        address superToken;\n    }\n\n    /**************************************************************************\n    * Immutable Variables\n    **************************************************************************/\n\n    // solhint-disable-next-line var-name-mixedcase\n    ISuperToken immutable public _SUPER_TOKEN_LOGIC;\n\n    ISuperfluid immutable internal _host;\n\n    // solhint-disable-next-line var-name-mixedcase\n    IConstantOutflowNFT immutable public CONSTANT_OUTFLOW_NFT_LOGIC;\n\n    // solhint-disable-next-line var-name-mixedcase\n    IConstantInflowNFT immutable public CONSTANT_INFLOW_NFT_LOGIC;\n\n    /**************************************************************************\n    * Storage Variables\n    **************************************************************************/\n\n    /* WARNING: NEVER RE-ORDER VARIABLES! Including the base contracts.\n        Always double-check that new\n        variables are added APPEND-ONLY. Re-ordering variables can\n        permanently BREAK the deployed proxy contract. */\n\n    // @dev This is the old SuperToken logic contract that is no longer used\n    // It is kept here for backwards compatibility due to the fact that we cannot\n    // change the storage layout of the contract\n    ISuperToken internal _superTokenLogicDeprecated;\n\n    /// @notice A mapping from underlying token addresses to canonical wrapper super token addresses\n    /// @dev Reasoning: (1) provide backwards compatibility for existing listed wrapper super tokens\n    /// @dev (2) prevent address retrieval issues if we ever choose to modify the bytecode of the UUPSProxy contract\n    /// @dev NOTE: address(0) key points to the NativeAssetSuperToken on the network.\n    mapping(address => address) internal _canonicalWrapperSuperTokens;\n\n    /// NOTE: Whenever modifying the storage layout here it is important to update the validateStorageLayout\n    /// function in its respective mock contract to ensure that it doesn't break anything or lead to unexpected\n    /// behaviors/layout when upgrading\n\n    error SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER();\n\n    constructor(\n        ISuperfluid host,\n        ISuperToken superTokenLogic,\n        IConstantOutflowNFT constantOutflowNFTLogic,\n        IConstantInflowNFT constantInflowNFTLogic\n    ) {\n        _host = host;\n\n        // SuperToken logic is now deployed prior to new factory logic deployment\n        // and passed in as a parameter to SuperTokenFactory constructor\n        _SUPER_TOKEN_LOGIC = superTokenLogic;\n\n        UUPSProxiable(address(_SUPER_TOKEN_LOGIC)).castrate();\n\n        CONSTANT_OUTFLOW_NFT_LOGIC = constantOutflowNFTLogic;\n\n        CONSTANT_INFLOW_NFT_LOGIC = constantInflowNFTLogic;\n\n        // emit SuperTokenLogicCreated event\n        // note that creation here means the setting of the super token logic contract\n        // as the canonical super token logic for the Superfluid framework and not the\n        // actual contract creation\n        emit SuperTokenLogicCreated(_SUPER_TOKEN_LOGIC);\n    }\n\n    /// @inheritdoc ISuperTokenFactory\n    function getHost()\n       external view\n       override(ISuperTokenFactory)\n       returns(address host)\n    {\n       return address(_host);\n    }\n\n    /**************************************************************************\n    * UUPSProxiable\n    **************************************************************************/\n    /// @inheritdoc ISuperTokenFactory\n    function initialize()\n        external\n        override\n        initializer // OpenZeppelin Initializable\n    // solhint-disable-next-line no-empty-blocks\n    {\n\n    }\n\n    function proxiableUUID() public pure override returns (bytes32) {\n        return keccak256(\"org.superfluid-finance.contracts.SuperTokenFactory.implementation\");\n    }\n\n    /// @notice Updates the logic contract for the SuperTokenFactory\n    /// @dev This function updates the logic contract for the SuperTokenFactory\n    /// @param newAddress the new address of the SuperTokenFactory logic contract\n    function updateCode(address newAddress) external override {\n        if (msg.sender != address(_host)) {\n            revert SUPER_TOKEN_FACTORY_ONLY_HOST();\n        }\n        _updateCodeAddress(newAddress);\n\n        // Upgrade the Flow NFT logic contracts on the canonical proxies\n        // We only do this if the new logic contracts passed in updating the SuperTokenFactory\n        // are different from the current logic contracts\n        SuperTokenFactory newFactory = SuperTokenFactory(newAddress);\n        address newConstantOutflowLogic = address(newFactory.CONSTANT_OUTFLOW_NFT_LOGIC());\n        address newConstantInflowLogic = address(newFactory.CONSTANT_INFLOW_NFT_LOGIC());\n\n        if (address(CONSTANT_OUTFLOW_NFT_LOGIC) != newConstantOutflowLogic) {\n            UUPSProxiable(address(_SUPER_TOKEN_LOGIC.CONSTANT_OUTFLOW_NFT())).updateCode(newConstantOutflowLogic);\n        }\n\n        if (address(CONSTANT_INFLOW_NFT_LOGIC) != newConstantInflowLogic) {\n            UUPSProxiable(address(_SUPER_TOKEN_LOGIC.CONSTANT_INFLOW_NFT())).updateCode(newConstantInflowLogic);\n        }\n    }\n\n    /**************************************************************************\n    * ISuperTokenFactory\n    **************************************************************************/\n    /// @inheritdoc ISuperTokenFactory\n    function getSuperTokenLogic()\n        external view override\n        returns (ISuperToken)\n    {\n        return _SUPER_TOKEN_LOGIC;\n    }\n\n    /// @inheritdoc ISuperTokenFactory\n    function createCanonicalERC20Wrapper(ERC20WithTokenInfo _underlyingToken)\n        external\n        returns (ISuperToken)\n    {\n        // we use this to check if we have initialized the _canonicalWrapperSuperTokens mapping\n        // @note we must set this during initialization\n        if (_canonicalWrapperSuperTokens[address(0)] == address(0)) {\n            revert SUPER_TOKEN_FACTORY_UNINITIALIZED();\n        }\n\n        address underlyingTokenAddress = address(_underlyingToken);\n        address canonicalSuperTokenAddress = _canonicalWrapperSuperTokens[\n                underlyingTokenAddress\n            ];\n\n        // if the canonical super token address exists, revert with custom error\n        if (canonicalSuperTokenAddress != address(0)) {\n            revert SUPER_TOKEN_FACTORY_ALREADY_EXISTS();\n        }\n\n        // use create2 to deterministically create the proxy contract for the wrapper super token\n        bytes32 salt = keccak256(abi.encode(underlyingTokenAddress));\n        UUPSProxy proxy = new UUPSProxy{ salt: salt }();\n\n        // NOTE: address(proxy) is equivalent to address(superToken)\n        _canonicalWrapperSuperTokens[underlyingTokenAddress] = address(\n            proxy\n        );\n\n        // set the implementation/logic contract address for the newly deployed proxy\n        proxy.initializeProxy(address(_SUPER_TOKEN_LOGIC));\n\n        // cast it as the same type as the logic contract\n        ISuperToken superToken = ISuperToken(address(proxy));\n\n        // get underlying token info\n        uint8 underlyingDecimals = _underlyingToken.decimals();\n        string memory underlyingName = _underlyingToken.name();\n        string memory underlyingSymbol = _underlyingToken.symbol();\n        // initialize the contract (proxy constructor)\n        superToken.initialize(\n            _underlyingToken,\n            underlyingDecimals,\n            string.concat(\"Super \", underlyingName),\n            string.concat(underlyingSymbol, \"x\")\n        );\n\n        emit SuperTokenCreated(superToken);\n\n        return superToken;\n    }\n\n    /// @inheritdoc ISuperTokenFactory\n    function createERC20Wrapper(\n        IERC20 underlyingToken,\n        uint8 underlyingDecimals,\n        Upgradability upgradability,\n        string calldata name,\n        string calldata symbol\n    )\n        public override\n        returns (ISuperToken superToken)\n    {\n        if (address(underlyingToken) == address(0)) {\n            revert SUPER_TOKEN_FACTORY_ZERO_ADDRESS();\n        }\n\n        if (upgradability == Upgradability.NON_UPGRADABLE) {\n            revert SUPER_TOKEN_FACTORY_NON_UPGRADEABLE_IS_DEPRECATED();\n        } else if (upgradability == Upgradability.SEMI_UPGRADABLE) {\n            UUPSProxy proxy = new UUPSProxy();\n            // initialize the wrapper\n            proxy.initializeProxy(address(_SUPER_TOKEN_LOGIC));\n            superToken = ISuperToken(address(proxy));\n        } else /* if (type == Upgradability.FULL_UPGRADABLE) */ {\n            FullUpgradableSuperTokenProxy proxy = new FullUpgradableSuperTokenProxy();\n            proxy.initialize();\n            superToken = ISuperToken(address(proxy));\n        }\n\n        // initialize the token\n        superToken.initialize(\n            underlyingToken,\n            underlyingDecimals,\n            name,\n            symbol\n        );\n\n        emit SuperTokenCreated(superToken);\n    }\n\n    /// @inheritdoc ISuperTokenFactory\n    function createERC20Wrapper(\n        ERC20WithTokenInfo underlyingToken,\n        Upgradability upgradability,\n        string calldata name,\n        string calldata symbol\n    )\n        external override\n        returns (ISuperToken superToken)\n    {\n        return createERC20Wrapper(\n            underlyingToken,\n            underlyingToken.decimals(),\n            upgradability,\n            name,\n            symbol\n        );\n    }\n\n    /// @inheritdoc ISuperTokenFactory\n    function initializeCustomSuperToken(\n        address customSuperTokenProxy\n    )\n        external override\n    {\n        // odd solidity stuff..\n        // NOTE payable necessary because UUPSProxy has a payable fallback function\n        address payable a = payable(address(uint160(customSuperTokenProxy)));\n        UUPSProxy(a).initializeProxy(address(_SUPER_TOKEN_LOGIC));\n\n        emit CustomSuperTokenCreated(ISuperToken(customSuperTokenProxy));\n    }\n\n    /// @inheritdoc ISuperTokenFactory\n    function computeCanonicalERC20WrapperAddress(address _underlyingToken)\n        external\n        view\n        returns (address superTokenAddress, bool isDeployed)\n    {\n        address existingAddress = _canonicalWrapperSuperTokens[\n            _underlyingToken\n        ];\n\n        if (existingAddress != address(0)) {\n            superTokenAddress = existingAddress;\n            isDeployed = true;\n        } else {\n            bytes memory bytecode = type(UUPSProxy).creationCode;\n            superTokenAddress = address(\n                uint160(\n                    uint256(\n                        keccak256(\n                            abi.encodePacked(\n                                bytes1(0xff),\n                                address(this),\n                                keccak256(abi.encode(_underlyingToken)),\n                                keccak256(bytecode)\n                            )\n                        )\n                    )\n                )\n            );\n            isDeployed = false;\n        }\n    }\n\n    /// @inheritdoc ISuperTokenFactory\n    function getCanonicalERC20Wrapper(address _underlyingTokenAddress)\n        external\n        view\n        returns (address superTokenAddress)\n    {\n        superTokenAddress = _canonicalWrapperSuperTokens[\n            _underlyingTokenAddress\n        ];\n    }\n\n    /// @notice Initializes list of canonical wrapper super tokens.\n    /// @dev Note that this should also be kind of a throwaway function which will be executed only once.\n    /// @param _data an array of canonical wrappper super tokens to be set\n    function initializeCanonicalWrapperSuperTokens(\n        InitializeData[] calldata _data\n    ) external virtual  {\n        Ownable gov = Ownable(address(_host.getGovernance()));\n        if (msg.sender != gov.owner()) revert SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER();\n\n        // once the list has been set, it cannot be reset\n        // @note this means that we must set the 0 address (Native Asset Super Token) when we call this the first time\n        if (_canonicalWrapperSuperTokens[address(0)] != address(0)) {\n            revert SUPER_TOKEN_FACTORY_ALREADY_EXISTS();\n        }\n\n        // initialize mapping\n        for (uint256 i = 0; i < _data.length; i++) {\n            _canonicalWrapperSuperTokens[_data[i].underlyingToken] = _data[i]\n                .superToken;\n        }\n    }\n}\n\ncontract SuperTokenFactory is SuperTokenFactoryBase\n{\n    /* WARNING: NEVER RE-ORDER VARIABLES! Including the base contracts.\n        Always double-check that new\n        variables are added APPEND-ONLY. Re-ordering variables can\n        permanently BREAK the deployed proxy contract. */\n\n    constructor(\n        ISuperfluid host,\n        ISuperToken superTokenLogic,\n        IConstantOutflowNFT constantOutflowNFT,\n        IConstantInflowNFT constantInflowNFT\n    )\n        SuperTokenFactoryBase(\n            host,\n            superTokenLogic,\n            constantOutflowNFT,\n            constantInflowNFT\n        )\n    // solhint-disable-next-line no-empty-blocks\n    {\n\n    }\n}\n",
  "sourcePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperTokenFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/superfluid/SuperTokenFactory.sol",
    "exportedSymbols": {
      "ConstantInflowNFT": [
        38883
      ],
      "ConstantOutflowNFT": [
        39264
      ],
      "ERC20WithTokenInfo": [
        25464
      ],
      "FullUpgradableSuperTokenProxy": [
        40181
      ],
      "IConstantInflowNFT": [
        23632
      ],
      "IConstantOutflowNFT": [
        23686
      ],
      "IERC20": [
        1540
      ],
      "ISuperToken": [
        24383
      ],
      "ISuperTokenFactory": [
        24513
      ],
      "ISuperfluid": [
        25037
      ],
      "Ownable": [
        651
      ],
      "SuperToken": [
        41963
      ],
      "SuperTokenFactory": [
        42709
      ],
      "SuperTokenFactoryBase": [
        42684
      ],
      "UUPSProxiable": [
        46988
      ],
      "UUPSProxy": [
        47045
      ]
    },
    "id": 42710,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 41965,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:103"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 41967,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 42710,
        "sourceUnit": 652,
        "src": "60:69:103",
        "symbolAliases": [
          {
            "foreign": {
              "id": 41966,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 651,
              "src": "69:7:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "file": "../interfaces/superfluid/ISuperTokenFactory.sol",
        "id": 41972,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 42710,
        "sourceUnit": 24514,
        "src": "130:142:103",
        "symbolAliases": [
          {
            "foreign": {
              "id": 41968,
              "name": "ISuperTokenFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24513,
              "src": "143:18:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41969,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24383,
              "src": "167:11:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41970,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1540,
              "src": "184:6:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41971,
              "name": "ERC20WithTokenInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25464,
              "src": "196:18:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/superfluid/ISuperfluid.sol",
        "file": "../interfaces/superfluid/ISuperfluid.sol",
        "id": 41974,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 42710,
        "sourceUnit": 25038,
        "src": "273:71:103",
        "symbolAliases": [
          {
            "foreign": {
              "id": 41973,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25037,
              "src": "282:11:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/upgradability/UUPSProxy.sol",
        "file": "../upgradability/UUPSProxy.sol",
        "id": 41976,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 42710,
        "sourceUnit": 47046,
        "src": "345:59:103",
        "symbolAliases": [
          {
            "foreign": {
              "id": 41975,
              "name": "UUPSProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47045,
              "src": "354:9:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/upgradability/UUPSProxiable.sol",
        "file": "../upgradability/UUPSProxiable.sol",
        "id": 41978,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 42710,
        "sourceUnit": 46989,
        "src": "405:67:103",
        "symbolAliases": [
          {
            "foreign": {
              "id": 41977,
              "name": "UUPSProxiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46988,
              "src": "414:13:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/superfluid/SuperToken.sol",
        "file": "../superfluid/SuperToken.sol",
        "id": 41980,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 42710,
        "sourceUnit": 41964,
        "src": "473:58:103",
        "symbolAliases": [
          {
            "foreign": {
              "id": 41979,
              "name": "SuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41963,
              "src": "482:10:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/superfluid/FullUpgradableSuperTokenProxy.sol",
        "file": "./FullUpgradableSuperTokenProxy.sol",
        "id": 41982,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 42710,
        "sourceUnit": 40182,
        "src": "532:84:103",
        "symbolAliases": [
          {
            "foreign": {
              "id": 41981,
              "name": "FullUpgradableSuperTokenProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40181,
              "src": "541:29:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/superfluid/ConstantOutflowNFT.sol",
        "file": "../superfluid/ConstantOutflowNFT.sol",
        "id": 41985,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 42710,
        "sourceUnit": 39265,
        "src": "617:95:103",
        "symbolAliases": [
          {
            "foreign": {
              "id": 41983,
              "name": "ConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39264,
              "src": "626:18:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41984,
              "name": "IConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23686,
              "src": "646:19:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/superfluid/ConstantInflowNFT.sol",
        "file": "../superfluid/ConstantInflowNFT.sol",
        "id": 41988,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 42710,
        "sourceUnit": 38884,
        "src": "713:92:103",
        "symbolAliases": [
          {
            "foreign": {
              "id": 41986,
              "name": "ConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38883,
              "src": "722:17:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41987,
              "name": "IConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23632,
              "src": "741:18:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 41989,
              "name": "UUPSProxiable",
              "nameLocations": [
                "854:13:103"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46988,
              "src": "854:13:103"
            },
            "id": 41990,
            "nodeType": "InheritanceSpecifier",
            "src": "854:13:103"
          },
          {
            "baseName": {
              "id": 41991,
              "name": "ISuperTokenFactory",
              "nameLocations": [
                "873:18:103"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24513,
              "src": "873:18:103"
            },
            "id": 41992,
            "nodeType": "InheritanceSpecifier",
            "src": "873:18:103"
          }
        ],
        "canonicalName": "SuperTokenFactoryBase",
        "contractDependencies": [
          40181,
          47045
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 42684,
        "linearizedBaseContracts": [
          42684,
          24513,
          46988,
          875
        ],
        "name": "SuperTokenFactoryBase",
        "nameLocation": "825:21:103",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SuperTokenFactoryBase.InitializeData",
            "id": 41997,
            "members": [
              {
                "constant": false,
                "id": 41994,
                "mutability": "mutable",
                "name": "underlyingToken",
                "nameLocation": "938:15:103",
                "nodeType": "VariableDeclaration",
                "scope": 41997,
                "src": "930:23:103",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 41993,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "930:7:103",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41996,
                "mutability": "mutable",
                "name": "superToken",
                "nameLocation": "971:10:103",
                "nodeType": "VariableDeclaration",
                "scope": 41997,
                "src": "963:18:103",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 41995,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "963:7:103",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "InitializeData",
            "nameLocation": "905:14:103",
            "nodeType": "StructDefinition",
            "scope": 42684,
            "src": "898:90:103",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cbf927b3",
            "id": 42000,
            "mutability": "immutable",
            "name": "_SUPER_TOKEN_LOGIC",
            "nameLocation": "1262:18:103",
            "nodeType": "VariableDeclaration",
            "scope": 42684,
            "src": "1233:47:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISuperToken_$24383",
              "typeString": "contract ISuperToken"
            },
            "typeName": {
              "id": 41999,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41998,
                "name": "ISuperToken",
                "nameLocations": [
                  "1233:11:103"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24383,
                "src": "1233:11:103"
              },
              "referencedDeclaration": 24383,
              "src": "1233:11:103",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$24383",
                "typeString": "contract ISuperToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 42003,
            "mutability": "immutable",
            "name": "_host",
            "nameLocation": "1318:5:103",
            "nodeType": "VariableDeclaration",
            "scope": 42684,
            "src": "1287:36:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISuperfluid_$25037",
              "typeString": "contract ISuperfluid"
            },
            "typeName": {
              "id": 42002,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42001,
                "name": "ISuperfluid",
                "nameLocations": [
                  "1287:11:103"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25037,
                "src": "1287:11:103"
              },
              "referencedDeclaration": 25037,
              "src": "1287:11:103",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperfluid_$25037",
                "typeString": "contract ISuperfluid"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "5365d19f",
            "id": 42006,
            "mutability": "immutable",
            "name": "CONSTANT_OUTFLOW_NFT_LOGIC",
            "nameLocation": "1419:26:103",
            "nodeType": "VariableDeclaration",
            "scope": 42684,
            "src": "1382:63:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
              "typeString": "contract IConstantOutflowNFT"
            },
            "typeName": {
              "id": 42005,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42004,
                "name": "IConstantOutflowNFT",
                "nameLocations": [
                  "1382:19:103"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23686,
                "src": "1382:19:103"
              },
              "referencedDeclaration": 23686,
              "src": "1382:19:103",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                "typeString": "contract IConstantOutflowNFT"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5a7792df",
            "id": 42009,
            "mutability": "immutable",
            "name": "CONSTANT_INFLOW_NFT_LOGIC",
            "nameLocation": "1540:25:103",
            "nodeType": "VariableDeclaration",
            "scope": 42684,
            "src": "1504:61:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
              "typeString": "contract IConstantInflowNFT"
            },
            "typeName": {
              "id": 42008,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42007,
                "name": "IConstantInflowNFT",
                "nameLocations": [
                  "1504:18:103"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23632,
                "src": "1504:18:103"
              },
              "referencedDeclaration": 23632,
              "src": "1504:18:103",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                "typeString": "contract IConstantInflowNFT"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 42012,
            "mutability": "mutable",
            "name": "_superTokenLogicDeprecated",
            "nameLocation": "2221:26:103",
            "nodeType": "VariableDeclaration",
            "scope": 42684,
            "src": "2200:47:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISuperToken_$24383",
              "typeString": "contract ISuperToken"
            },
            "typeName": {
              "id": 42011,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42010,
                "name": "ISuperToken",
                "nameLocations": [
                  "2200:11:103"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24383,
                "src": "2200:11:103"
              },
              "referencedDeclaration": 24383,
              "src": "2200:11:103",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$24383",
                "typeString": "contract ISuperToken"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 42013,
              "nodeType": "StructuredDocumentation",
              "src": "2254:400:103",
              "text": "@notice A mapping from underlying token addresses to canonical wrapper super token addresses\n @dev Reasoning: (1) provide backwards compatibility for existing listed wrapper super tokens\n @dev (2) prevent address retrieval issues if we ever choose to modify the bytecode of the UUPSProxy contract\n @dev NOTE: address(0) key points to the NativeAssetSuperToken on the network."
            },
            "id": 42017,
            "mutability": "mutable",
            "name": "_canonicalWrapperSuperTokens",
            "nameLocation": "2696:28:103",
            "nodeType": "VariableDeclaration",
            "scope": 42684,
            "src": "2659:65:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 42016,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 42014,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2667:7:103",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2659:27:103",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 42015,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2678:7:103",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 42018,
              "nodeType": "StructuredDocumentation",
              "src": "2731:257:103",
              "text": "NOTE: Whenever modifying the storage layout here it is important to update the validateStorageLayout\n function in its respective mock contract to ensure that it doesn't break anything or lead to unexpected\n behaviors/layout when upgrading"
            },
            "errorSelector": "afca98cc",
            "id": 42020,
            "name": "SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER",
            "nameLocation": "2999:41:103",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 42019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3040:2:103"
            },
            "src": "2993:50:103"
          },
          {
            "body": {
              "id": 42064,
              "nodeType": "Block",
              "src": "3234:732:103",
              "statements": [
                {
                  "expression": {
                    "id": 42037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42035,
                      "name": "_host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42003,
                      "src": "3244:5:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperfluid_$25037",
                        "typeString": "contract ISuperfluid"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42036,
                      "name": "host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42023,
                      "src": "3252:4:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperfluid_$25037",
                        "typeString": "contract ISuperfluid"
                      }
                    },
                    "src": "3244:12:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$25037",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "id": 42038,
                  "nodeType": "ExpressionStatement",
                  "src": "3244:12:103"
                },
                {
                  "expression": {
                    "id": 42041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42039,
                      "name": "_SUPER_TOKEN_LOGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42000,
                      "src": "3422:18:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperToken_$24383",
                        "typeString": "contract ISuperToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42040,
                      "name": "superTokenLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42026,
                      "src": "3443:15:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperToken_$24383",
                        "typeString": "contract ISuperToken"
                      }
                    },
                    "src": "3422:36:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24383",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "id": 42042,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:36:103"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 42046,
                                "name": "_SUPER_TOKEN_LOGIC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42000,
                                "src": "3491:18:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperToken_$24383",
                                  "typeString": "contract ISuperToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ISuperToken_$24383",
                                  "typeString": "contract ISuperToken"
                                }
                              ],
                              "id": 42045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3483:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 42044,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3483:7:103",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 42047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3483:27:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42043,
                          "name": "UUPSProxiable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46988,
                          "src": "3469:13:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UUPSProxiable_$46988_$",
                            "typeString": "type(contract UUPSProxiable)"
                          }
                        },
                        "id": 42048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3469:42:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxiable_$46988",
                          "typeString": "contract UUPSProxiable"
                        }
                      },
                      "id": 42049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3512:8:103",
                      "memberName": "castrate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46922,
                      "src": "3469:51:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 42050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3469:53:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42051,
                  "nodeType": "ExpressionStatement",
                  "src": "3469:53:103"
                },
                {
                  "expression": {
                    "id": 42054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42052,
                      "name": "CONSTANT_OUTFLOW_NFT_LOGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42006,
                      "src": "3533:26:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                        "typeString": "contract IConstantOutflowNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42053,
                      "name": "constantOutflowNFTLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42029,
                      "src": "3562:23:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                        "typeString": "contract IConstantOutflowNFT"
                      }
                    },
                    "src": "3533:52:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "id": 42055,
                  "nodeType": "ExpressionStatement",
                  "src": "3533:52:103"
                },
                {
                  "expression": {
                    "id": 42058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42056,
                      "name": "CONSTANT_INFLOW_NFT_LOGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42009,
                      "src": "3596:25:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                        "typeString": "contract IConstantInflowNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42057,
                      "name": "constantInflowNFTLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42032,
                      "src": "3624:22:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                        "typeString": "contract IConstantInflowNFT"
                      }
                    },
                    "src": "3596:50:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "id": 42059,
                  "nodeType": "ExpressionStatement",
                  "src": "3596:50:103"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 42061,
                        "name": "_SUPER_TOKEN_LOGIC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42000,
                        "src": "3940:18:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24383",
                          "typeString": "contract ISuperToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$24383",
                          "typeString": "contract ISuperToken"
                        }
                      ],
                      "id": 42060,
                      "name": "SuperTokenLogicCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24500,
                      "src": "3917:22:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ISuperToken_$24383_$returns$__$",
                        "typeString": "function (contract ISuperToken)"
                      }
                    },
                    "id": 42062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3917:42:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42063,
                  "nodeType": "EmitStatement",
                  "src": "3912:47:103"
                }
              ]
            },
            "id": 42065,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42023,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "3082:4:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42065,
                  "src": "3070:16:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$25037",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 42022,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42021,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "3070:11:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25037,
                      "src": "3070:11:103"
                    },
                    "referencedDeclaration": 25037,
                    "src": "3070:11:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$25037",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42026,
                  "mutability": "mutable",
                  "name": "superTokenLogic",
                  "nameLocation": "3108:15:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42065,
                  "src": "3096:27:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$24383",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 42025,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42024,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "3096:11:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24383,
                      "src": "3096:11:103"
                    },
                    "referencedDeclaration": 24383,
                    "src": "3096:11:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24383",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42029,
                  "mutability": "mutable",
                  "name": "constantOutflowNFTLogic",
                  "nameLocation": "3153:23:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42065,
                  "src": "3133:43:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 42028,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42027,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "3133:19:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23686,
                      "src": "3133:19:103"
                    },
                    "referencedDeclaration": 23686,
                    "src": "3133:19:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42032,
                  "mutability": "mutable",
                  "name": "constantInflowNFTLogic",
                  "nameLocation": "3205:22:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42065,
                  "src": "3186:41:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 42031,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42030,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "3186:18:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23632,
                      "src": "3186:18:103"
                    },
                    "referencedDeclaration": 23632,
                    "src": "3186:18:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3060:173:103"
            },
            "returnParameters": {
              "id": 42034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3234:0:103"
            },
            "scope": 42684,
            "src": "3049:917:103",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              24409
            ],
            "body": {
              "id": 42078,
              "nodeType": "Block",
              "src": "4120:37:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42075,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42003,
                        "src": "4144:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$25037",
                          "typeString": "contract ISuperfluid"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperfluid_$25037",
                          "typeString": "contract ISuperfluid"
                        }
                      ],
                      "id": 42074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4136:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 42073,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4136:7:103",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 42076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4136:14:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 42072,
                  "id": 42077,
                  "nodeType": "Return",
                  "src": "4129:21:103"
                }
              ]
            },
            "documentation": {
              "id": 42066,
              "nodeType": "StructuredDocumentation",
              "src": "3972:34:103",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "20bc4425",
            "id": 42079,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHost",
            "nameLocation": "4020:7:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 42069,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 42068,
                  "name": "ISuperTokenFactory",
                  "nameLocations": [
                    "4067:18:103"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24513,
                  "src": "4067:18:103"
                }
              ],
              "src": "4058:28:103"
            },
            "parameters": {
              "id": 42067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4027:2:103"
            },
            "returnParameters": {
              "id": 42072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42071,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "4110:4:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42079,
                  "src": "4102:12:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42070,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4102:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4101:14:103"
            },
            "scope": 42684,
            "src": "4011:146:103",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              24413
            ],
            "body": {
              "id": 42086,
              "nodeType": "Block",
              "src": "4541:8:103",
              "statements": []
            },
            "documentation": {
              "id": 42080,
              "nodeType": "StructuredDocumentation",
              "src": "4343:34:103",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "8129fc1c",
            "id": 42087,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 42084,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 42083,
                  "name": "initializer",
                  "nameLocations": [
                    "4446:11:103"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 777,
                  "src": "4446:11:103"
                },
                "nodeType": "ModifierInvocation",
                "src": "4446:11:103"
              }
            ],
            "name": "initialize",
            "nameLocation": "4391:10:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 42082,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4429:8:103"
            },
            "parameters": {
              "id": 42081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4401:2:103"
            },
            "returnParameters": {
              "id": 42085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4541:0:103"
            },
            "scope": 42684,
            "src": "4382:167:103",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              46928
            ],
            "body": {
              "id": 42097,
              "nodeType": "Block",
              "src": "4619:102:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e636f6e7472616374732e5375706572546f6b656e466163746f72792e696d706c656d656e746174696f6e",
                        "id": 42094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4646:67:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.SuperTokenFactory.implementation\""
                        },
                        "value": "org.superfluid-finance.contracts.SuperTokenFactory.implementation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.SuperTokenFactory.implementation\""
                        }
                      ],
                      "id": 42093,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "4636:9:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 42095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4636:78:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 42092,
                  "id": 42096,
                  "nodeType": "Return",
                  "src": "4629:85:103"
                }
              ]
            },
            "functionSelector": "52d1902d",
            "id": 42098,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "4564:13:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 42089,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4592:8:103"
            },
            "parameters": {
              "id": 42088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4577:2:103"
            },
            "returnParameters": {
              "id": 42092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42091,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42098,
                  "src": "4610:7:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 42090,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4610:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4609:9:103"
            },
            "scope": 42684,
            "src": "4555:166:103",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              46916
            ],
            "body": {
              "id": 42186,
              "nodeType": "Block",
              "src": "5016:1036:103",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 42111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 42105,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5030:3:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 42106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5034:6:103",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5030:10:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 42109,
                          "name": "_host",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42003,
                          "src": "5052:5:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$25037",
                            "typeString": "contract ISuperfluid"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ISuperfluid_$25037",
                            "typeString": "contract ISuperfluid"
                          }
                        ],
                        "id": 42108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5044:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 42107,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5044:7:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5044:14:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5030:28:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42116,
                  "nodeType": "IfStatement",
                  "src": "5026:97:103",
                  "trueBody": {
                    "id": 42115,
                    "nodeType": "Block",
                    "src": "5060:63:103",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 42112,
                            "name": "SUPER_TOKEN_FACTORY_ONLY_HOST",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24399,
                            "src": "5081:29:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 42113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5081:31:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42114,
                        "nodeType": "RevertStatement",
                        "src": "5074:38:103"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42118,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42101,
                        "src": "5151:10:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42117,
                      "name": "_updateCodeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46981,
                      "src": "5132:18:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 42119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5132:30:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42120,
                  "nodeType": "ExpressionStatement",
                  "src": "5132:30:103"
                },
                {
                  "assignments": [
                    42123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42123,
                      "mutability": "mutable",
                      "name": "newFactory",
                      "nameLocation": "5417:10:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 42186,
                      "src": "5399:28:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SuperTokenFactory_$42709",
                        "typeString": "contract SuperTokenFactory"
                      },
                      "typeName": {
                        "id": 42122,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42121,
                          "name": "SuperTokenFactory",
                          "nameLocations": [
                            "5399:17:103"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42709,
                          "src": "5399:17:103"
                        },
                        "referencedDeclaration": 42709,
                        "src": "5399:17:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperTokenFactory_$42709",
                          "typeString": "contract SuperTokenFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42127,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42125,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42101,
                        "src": "5448:10:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42124,
                      "name": "SuperTokenFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42709,
                      "src": "5430:17:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_SuperTokenFactory_$42709_$",
                        "typeString": "type(contract SuperTokenFactory)"
                      }
                    },
                    "id": 42126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5430:29:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SuperTokenFactory_$42709",
                      "typeString": "contract SuperTokenFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5399:60:103"
                },
                {
                  "assignments": [
                    42129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42129,
                      "mutability": "mutable",
                      "name": "newConstantOutflowLogic",
                      "nameLocation": "5477:23:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 42186,
                      "src": "5469:31:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 42128,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5469:7:103",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42136,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 42132,
                            "name": "newFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42123,
                            "src": "5511:10:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperTokenFactory_$42709",
                              "typeString": "contract SuperTokenFactory"
                            }
                          },
                          "id": 42133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5522:26:103",
                          "memberName": "CONSTANT_OUTFLOW_NFT_LOGIC",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42006,
                          "src": "5511:37:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IConstantOutflowNFT_$23686_$",
                            "typeString": "function () view external returns (contract IConstantOutflowNFT)"
                          }
                        },
                        "id": 42134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5511:39:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                          "typeString": "contract IConstantOutflowNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                          "typeString": "contract IConstantOutflowNFT"
                        }
                      ],
                      "id": 42131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5503:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 42130,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5503:7:103",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 42135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5503:48:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5469:82:103"
                },
                {
                  "assignments": [
                    42138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42138,
                      "mutability": "mutable",
                      "name": "newConstantInflowLogic",
                      "nameLocation": "5569:22:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 42186,
                      "src": "5561:30:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 42137,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5561:7:103",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42145,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 42141,
                            "name": "newFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42123,
                            "src": "5602:10:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperTokenFactory_$42709",
                              "typeString": "contract SuperTokenFactory"
                            }
                          },
                          "id": 42142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5613:25:103",
                          "memberName": "CONSTANT_INFLOW_NFT_LOGIC",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42009,
                          "src": "5602:36:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IConstantInflowNFT_$23632_$",
                            "typeString": "function () view external returns (contract IConstantInflowNFT)"
                          }
                        },
                        "id": 42143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5602:38:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                          "typeString": "contract IConstantInflowNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                          "typeString": "contract IConstantInflowNFT"
                        }
                      ],
                      "id": 42140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5594:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 42139,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5594:7:103",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 42144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5594:47:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5561:80:103"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 42151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 42148,
                          "name": "CONSTANT_OUTFLOW_NFT_LOGIC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42006,
                          "src": "5664:26:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                            "typeString": "contract IConstantOutflowNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                            "typeString": "contract IConstantOutflowNFT"
                          }
                        ],
                        "id": 42147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5656:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 42146,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5656:7:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5656:35:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 42150,
                      "name": "newConstantOutflowLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42129,
                      "src": "5695:23:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5656:62:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42165,
                  "nodeType": "IfStatement",
                  "src": "5652:194:103",
                  "trueBody": {
                    "id": 42164,
                    "nodeType": "Block",
                    "src": "5720:126:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 42161,
                              "name": "newConstantOutflowLogic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42129,
                              "src": "5811:23:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 42155,
                                          "name": "_SUPER_TOKEN_LOGIC",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 42000,
                                          "src": "5756:18:103",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ISuperToken_$24383",
                                            "typeString": "contract ISuperToken"
                                          }
                                        },
                                        "id": 42156,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5775:20:103",
                                        "memberName": "CONSTANT_OUTFLOW_NFT",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 23985,
                                        "src": "5756:39:103",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IConstantOutflowNFT_$23686_$",
                                          "typeString": "function () view external returns (contract IConstantOutflowNFT)"
                                        }
                                      },
                                      "id": 42157,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5756:41:103",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                                        "typeString": "contract IConstantOutflowNFT"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                                        "typeString": "contract IConstantOutflowNFT"
                                      }
                                    ],
                                    "id": 42154,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5748:7:103",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 42153,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5748:7:103",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 42158,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5748:50:103",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 42152,
                                "name": "UUPSProxiable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46988,
                                "src": "5734:13:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_UUPSProxiable_$46988_$",
                                  "typeString": "type(contract UUPSProxiable)"
                                }
                              },
                              "id": 42159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5734:65:103",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UUPSProxiable_$46988",
                                "typeString": "contract UUPSProxiable"
                              }
                            },
                            "id": 42160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5800:10:103",
                            "memberName": "updateCode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46916,
                            "src": "5734:76:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 42162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5734:101:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42163,
                        "nodeType": "ExpressionStatement",
                        "src": "5734:101:103"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 42171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 42168,
                          "name": "CONSTANT_INFLOW_NFT_LOGIC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42009,
                          "src": "5868:25:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                            "typeString": "contract IConstantInflowNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                            "typeString": "contract IConstantInflowNFT"
                          }
                        ],
                        "id": 42167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5860:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 42166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5860:7:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5860:34:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 42170,
                      "name": "newConstantInflowLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42138,
                      "src": "5898:22:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5860:60:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42185,
                  "nodeType": "IfStatement",
                  "src": "5856:190:103",
                  "trueBody": {
                    "id": 42184,
                    "nodeType": "Block",
                    "src": "5922:124:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 42181,
                              "name": "newConstantInflowLogic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42138,
                              "src": "6012:22:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 42175,
                                          "name": "_SUPER_TOKEN_LOGIC",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 42000,
                                          "src": "5958:18:103",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ISuperToken_$24383",
                                            "typeString": "contract ISuperToken"
                                          }
                                        },
                                        "id": 42176,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5977:19:103",
                                        "memberName": "CONSTANT_INFLOW_NFT",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 23991,
                                        "src": "5958:38:103",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IConstantInflowNFT_$23632_$",
                                          "typeString": "function () view external returns (contract IConstantInflowNFT)"
                                        }
                                      },
                                      "id": 42177,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5958:40:103",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                                        "typeString": "contract IConstantInflowNFT"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                                        "typeString": "contract IConstantInflowNFT"
                                      }
                                    ],
                                    "id": 42174,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5950:7:103",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 42173,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5950:7:103",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 42178,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5950:49:103",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 42172,
                                "name": "UUPSProxiable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46988,
                                "src": "5936:13:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_UUPSProxiable_$46988_$",
                                  "typeString": "type(contract UUPSProxiable)"
                                }
                              },
                              "id": 42179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5936:64:103",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UUPSProxiable_$46988",
                                "typeString": "contract UUPSProxiable"
                              }
                            },
                            "id": 42180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6001:10:103",
                            "memberName": "updateCode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46916,
                            "src": "5936:75:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 42182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5936:99:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42183,
                        "nodeType": "ExpressionStatement",
                        "src": "5936:99:103"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 42099,
              "nodeType": "StructuredDocumentation",
              "src": "4727:226:103",
              "text": "@notice Updates the logic contract for the SuperTokenFactory\n @dev This function updates the logic contract for the SuperTokenFactory\n @param newAddress the new address of the SuperTokenFactory logic contract"
            },
            "functionSelector": "46951954",
            "id": 42187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateCode",
            "nameLocation": "4967:10:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 42103,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5007:8:103"
            },
            "parameters": {
              "id": 42102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42101,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "4986:10:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42187,
                  "src": "4978:18:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4978:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4977:20:103"
            },
            "returnParameters": {
              "id": 42104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5016:0:103"
            },
            "scope": 42684,
            "src": "4958:1094:103",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              24420
            ],
            "body": {
              "id": 42197,
              "nodeType": "Block",
              "src": "6377:42:103",
              "statements": [
                {
                  "expression": {
                    "id": 42195,
                    "name": "_SUPER_TOKEN_LOGIC",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42000,
                    "src": "6394:18:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24383",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "functionReturnParameters": 42194,
                  "id": 42196,
                  "nodeType": "Return",
                  "src": "6387:25:103"
                }
              ]
            },
            "documentation": {
              "id": 42188,
              "nodeType": "StructuredDocumentation",
              "src": "6243:34:103",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "9470a5b2",
            "id": 42198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSuperTokenLogic",
            "nameLocation": "6291:18:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 42190,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6334:8:103"
            },
            "parameters": {
              "id": 42189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6309:2:103"
            },
            "returnParameters": {
              "id": 42194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42198,
                  "src": "6360:11:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$24383",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 42192,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42191,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "6360:11:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24383,
                      "src": "6360:11:103"
                    },
                    "referencedDeclaration": 24383,
                    "src": "6360:11:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24383",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6359:13:103"
            },
            "scope": 42684,
            "src": "6282:137:103",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              24470
            ],
            "body": {
              "id": 42338,
              "nodeType": "Block",
              "src": "6589:1931:103",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 42218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 42208,
                        "name": "_canonicalWrapperSuperTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42017,
                        "src": "6755:28:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 42213,
                      "indexExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 42211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6792:1:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 42210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6784:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42209,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6784:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6784:10:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6755:40:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 42216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6807:1:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 42215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6799:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 42214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6799:7:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6799:10:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6755:54:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42223,
                  "nodeType": "IfStatement",
                  "src": "6751:127:103",
                  "trueBody": {
                    "id": 42222,
                    "nodeType": "Block",
                    "src": "6811:67:103",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 42219,
                            "name": "SUPER_TOKEN_FACTORY_UNINITIALIZED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24397,
                            "src": "6832:33:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 42220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6832:35:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42221,
                        "nodeType": "RevertStatement",
                        "src": "6825:42:103"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    42225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42225,
                      "mutability": "mutable",
                      "name": "underlyingTokenAddress",
                      "nameLocation": "6896:22:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 42338,
                      "src": "6888:30:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 42224,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6888:7:103",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42230,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42228,
                        "name": "_underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42202,
                        "src": "6929:16:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25464",
                          "typeString": "contract ERC20WithTokenInfo"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25464",
                          "typeString": "contract ERC20WithTokenInfo"
                        }
                      ],
                      "id": 42227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6921:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 42226,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6921:7:103",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 42229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6921:25:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6888:58:103"
                },
                {
                  "assignments": [
                    42232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42232,
                      "mutability": "mutable",
                      "name": "canonicalSuperTokenAddress",
                      "nameLocation": "6964:26:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 42338,
                      "src": "6956:34:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 42231,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6956:7:103",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42236,
                  "initialValue": {
                    "baseExpression": {
                      "id": 42233,
                      "name": "_canonicalWrapperSuperTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42017,
                      "src": "6993:28:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 42235,
                    "indexExpression": {
                      "id": 42234,
                      "name": "underlyingTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42225,
                      "src": "7039:22:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6993:82:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6956:119:103"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 42242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42237,
                      "name": "canonicalSuperTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42232,
                      "src": "7171:26:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 42240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7209:1:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 42239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7201:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 42238,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7201:7:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7201:10:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7171:40:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42247,
                  "nodeType": "IfStatement",
                  "src": "7167:114:103",
                  "trueBody": {
                    "id": 42246,
                    "nodeType": "Block",
                    "src": "7213:68:103",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 42243,
                            "name": "SUPER_TOKEN_FACTORY_ALREADY_EXISTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24393,
                            "src": "7234:34:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 42244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7234:36:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42245,
                        "nodeType": "RevertStatement",
                        "src": "7227:43:103"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    42249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42249,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "7397:4:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 42338,
                      "src": "7389:12:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 42248,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7389:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42256,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42253,
                            "name": "underlyingTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42225,
                            "src": "7425:22:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 42251,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "7414:3:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 42252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7418:6:103",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7414:10:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 42254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7414:34:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 42250,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "7404:9:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 42255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7404:45:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7389:60:103"
                },
                {
                  "assignments": [
                    42259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42259,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "7469:5:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 42338,
                      "src": "7459:15:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                        "typeString": "contract UUPSProxy"
                      },
                      "typeName": {
                        "id": 42258,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42257,
                          "name": "UUPSProxy",
                          "nameLocations": [
                            "7459:9:103"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47045,
                          "src": "7459:9:103"
                        },
                        "referencedDeclaration": 47045,
                        "src": "7459:9:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                          "typeString": "contract UUPSProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42266,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 42262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7477:13:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UUPSProxy_$47045_$",
                          "typeString": "function () returns (contract UUPSProxy)"
                        },
                        "typeName": {
                          "id": 42261,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 42260,
                            "name": "UUPSProxy",
                            "nameLocations": [
                              "7481:9:103"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47045,
                            "src": "7481:9:103"
                          },
                          "referencedDeclaration": 47045,
                          "src": "7481:9:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                            "typeString": "contract UUPSProxy"
                          }
                        }
                      },
                      "id": 42264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "salt"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 42263,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42249,
                          "src": "7498:4:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "src": "7477:27:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UUPSProxy_$47045_$salt",
                        "typeString": "function () returns (contract UUPSProxy)"
                      }
                    },
                    "id": 42265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7477:29:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                      "typeString": "contract UUPSProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7459:47:103"
                },
                {
                  "expression": {
                    "id": 42274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 42267,
                        "name": "_canonicalWrapperSuperTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42017,
                        "src": "7586:28:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 42269,
                      "indexExpression": {
                        "id": 42268,
                        "name": "underlyingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42225,
                        "src": "7615:22:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7586:52:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 42272,
                          "name": "proxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42259,
                          "src": "7662:5:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                            "typeString": "contract UUPSProxy"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                            "typeString": "contract UUPSProxy"
                          }
                        ],
                        "id": 42271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7641:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 42270,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7641:7:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7641:36:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7586:91:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42275,
                  "nodeType": "ExpressionStatement",
                  "src": "7586:91:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42281,
                            "name": "_SUPER_TOKEN_LOGIC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42000,
                            "src": "7804:18:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$24383",
                              "typeString": "contract ISuperToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$24383",
                              "typeString": "contract ISuperToken"
                            }
                          ],
                          "id": 42280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7796:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42279,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7796:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7796:27:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42276,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42259,
                        "src": "7774:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                          "typeString": "contract UUPSProxy"
                        }
                      },
                      "id": 42278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7780:15:103",
                      "memberName": "initializeProxy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47032,
                      "src": "7774:21:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 42283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7774:50:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42284,
                  "nodeType": "ExpressionStatement",
                  "src": "7774:50:103"
                },
                {
                  "assignments": [
                    42287
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42287,
                      "mutability": "mutable",
                      "name": "superToken",
                      "nameLocation": "7905:10:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 42338,
                      "src": "7893:22:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperToken_$24383",
                        "typeString": "contract ISuperToken"
                      },
                      "typeName": {
                        "id": 42286,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42285,
                          "name": "ISuperToken",
                          "nameLocations": [
                            "7893:11:103"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24383,
                          "src": "7893:11:103"
                        },
                        "referencedDeclaration": 24383,
                        "src": "7893:11:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24383",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42294,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42291,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42259,
                            "src": "7938:5:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                              "typeString": "contract UUPSProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                              "typeString": "contract UUPSProxy"
                            }
                          ],
                          "id": 42290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7930:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42289,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7930:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7930:14:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42288,
                      "name": "ISuperToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24383,
                      "src": "7918:11:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISuperToken_$24383_$",
                        "typeString": "type(contract ISuperToken)"
                      }
                    },
                    "id": 42293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7918:27:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24383",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7893:52:103"
                },
                {
                  "assignments": [
                    42296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42296,
                      "mutability": "mutable",
                      "name": "underlyingDecimals",
                      "nameLocation": "7999:18:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 42338,
                      "src": "7993:24:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 42295,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "7993:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42300,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 42297,
                        "name": "_underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42202,
                        "src": "8020:16:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25464",
                          "typeString": "contract ERC20WithTokenInfo"
                        }
                      },
                      "id": 42298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8037:8:103",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25531,
                      "src": "8020:25:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 42299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8020:27:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7993:54:103"
                },
                {
                  "assignments": [
                    42302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42302,
                      "mutability": "mutable",
                      "name": "underlyingName",
                      "nameLocation": "8071:14:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 42338,
                      "src": "8057:28:103",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 42301,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8057:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42306,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 42303,
                        "name": "_underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42202,
                        "src": "8088:16:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25464",
                          "typeString": "contract ERC20WithTokenInfo"
                        }
                      },
                      "id": 42304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8105:4:103",
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25519,
                      "src": "8088:21:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 42305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8088:23:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8057:54:103"
                },
                {
                  "assignments": [
                    42308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42308,
                      "mutability": "mutable",
                      "name": "underlyingSymbol",
                      "nameLocation": "8135:16:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 42338,
                      "src": "8121:30:103",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 42307,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8121:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42312,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 42309,
                        "name": "_underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42202,
                        "src": "8154:16:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25464",
                          "typeString": "contract ERC20WithTokenInfo"
                        }
                      },
                      "id": 42310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8171:6:103",
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25525,
                      "src": "8154:23:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 42311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8154:25:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8121:58:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42316,
                        "name": "_underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42202,
                        "src": "8279:16:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25464",
                          "typeString": "contract ERC20WithTokenInfo"
                        }
                      },
                      {
                        "id": 42317,
                        "name": "underlyingDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42296,
                        "src": "8309:18:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "537570657220",
                            "id": 42321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8355:8:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ebd27962ce5590c269f1456623323f17a34c644eb379ed98ba3fc280518c503d",
                              "typeString": "literal_string \"Super \""
                            },
                            "value": "Super "
                          },
                          {
                            "id": 42322,
                            "name": "underlyingName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42302,
                            "src": "8365:14:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_ebd27962ce5590c269f1456623323f17a34c644eb379ed98ba3fc280518c503d",
                              "typeString": "literal_string \"Super \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 42319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8341:6:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 42318,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "8341:6:103",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 42320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8348:6:103",
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "8341:13:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () pure returns (string memory)"
                          }
                        },
                        "id": 42323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8341:39:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42327,
                            "name": "underlyingSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42308,
                            "src": "8408:16:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "78",
                            "id": 42328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8426:3:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
                              "typeString": "literal_string \"x\""
                            },
                            "value": "x"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
                              "typeString": "literal_string \"x\""
                            }
                          ],
                          "expression": {
                            "id": 42325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8394:6:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 42324,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "8394:6:103",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 42326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8401:6:103",
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "8394:13:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () pure returns (string memory)"
                          }
                        },
                        "id": 42329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8394:36:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25464",
                          "typeString": "contract ERC20WithTokenInfo"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 42313,
                        "name": "superToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42287,
                        "src": "8244:10:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24383",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "id": 42315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8255:10:103",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23979,
                      "src": "8244:21:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$1540_$_t_uint8_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,uint8,string memory,string memory) external"
                      }
                    },
                    "id": 42330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8244:196:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42331,
                  "nodeType": "ExpressionStatement",
                  "src": "8244:196:103"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 42333,
                        "name": "superToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42287,
                        "src": "8474:10:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24383",
                          "typeString": "contract ISuperToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$24383",
                          "typeString": "contract ISuperToken"
                        }
                      ],
                      "id": 42332,
                      "name": "SuperTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24506,
                      "src": "8456:17:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ISuperToken_$24383_$returns$__$",
                        "typeString": "function (contract ISuperToken)"
                      }
                    },
                    "id": 42334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8456:29:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42335,
                  "nodeType": "EmitStatement",
                  "src": "8451:34:103"
                },
                {
                  "expression": {
                    "id": 42336,
                    "name": "superToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42287,
                    "src": "8503:10:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24383",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "functionReturnParameters": 42207,
                  "id": 42337,
                  "nodeType": "Return",
                  "src": "8496:17:103"
                }
              ]
            },
            "documentation": {
              "id": 42199,
              "nodeType": "StructuredDocumentation",
              "src": "6425:34:103",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "151188dc",
            "id": 42339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCanonicalERC20Wrapper",
            "nameLocation": "6473:27:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42202,
                  "mutability": "mutable",
                  "name": "_underlyingToken",
                  "nameLocation": "6520:16:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42339,
                  "src": "6501:35:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25464",
                    "typeString": "contract ERC20WithTokenInfo"
                  },
                  "typeName": {
                    "id": 42201,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42200,
                      "name": "ERC20WithTokenInfo",
                      "nameLocations": [
                        "6501:18:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25464,
                      "src": "6501:18:103"
                    },
                    "referencedDeclaration": 25464,
                    "src": "6501:18:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25464",
                      "typeString": "contract ERC20WithTokenInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6500:37:103"
            },
            "returnParameters": {
              "id": 42207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42339,
                  "src": "6572:11:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$24383",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 42205,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42204,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "6572:11:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24383,
                      "src": "6572:11:103"
                    },
                    "referencedDeclaration": 24383,
                    "src": "6572:11:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24383",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6571:13:103"
            },
            "scope": 42684,
            "src": "6464:2056:103",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              24443
            ],
            "body": {
              "id": 42450,
              "nodeType": "Block",
              "src": "8833:999:103",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 42367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 42361,
                          "name": "underlyingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42343,
                          "src": "8855:15:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1540",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1540",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 42360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8847:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 42359,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8847:7:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8847:24:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 42365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8883:1:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 42364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8875:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 42363,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8875:7:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8875:10:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8847:38:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42372,
                  "nodeType": "IfStatement",
                  "src": "8843:110:103",
                  "trueBody": {
                    "id": 42371,
                    "nodeType": "Block",
                    "src": "8887:66:103",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 42368,
                            "name": "SUPER_TOKEN_FACTORY_ZERO_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24403,
                            "src": "8908:32:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 42369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8908:34:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42370,
                        "nodeType": "RevertStatement",
                        "src": "8901:41:103"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Upgradability_$24424",
                      "typeString": "enum ISuperTokenFactory.Upgradability"
                    },
                    "id": 42376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42373,
                      "name": "upgradability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42348,
                      "src": "8967:13:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Upgradability_$24424",
                        "typeString": "enum ISuperTokenFactory.Upgradability"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 42374,
                        "name": "Upgradability",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24424,
                        "src": "8984:13:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Upgradability_$24424_$",
                          "typeString": "type(enum ISuperTokenFactory.Upgradability)"
                        }
                      },
                      "id": 42375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "8998:14:103",
                      "memberName": "NON_UPGRADABLE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24421,
                      "src": "8984:28:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Upgradability_$24424",
                        "typeString": "enum ISuperTokenFactory.Upgradability"
                      }
                    },
                    "src": "8967:45:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Upgradability_$24424",
                        "typeString": "enum ISuperTokenFactory.Upgradability"
                      },
                      "id": 42384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 42381,
                        "name": "upgradability",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42348,
                        "src": "9107:13:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Upgradability_$24424",
                          "typeString": "enum ISuperTokenFactory.Upgradability"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 42382,
                          "name": "Upgradability",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24424,
                          "src": "9124:13:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Upgradability_$24424_$",
                            "typeString": "type(enum ISuperTokenFactory.Upgradability)"
                          }
                        },
                        "id": 42383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9138:15:103",
                        "memberName": "SEMI_UPGRADABLE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24422,
                        "src": "9124:29:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Upgradability_$24424",
                          "typeString": "enum ISuperTokenFactory.Upgradability"
                        }
                      },
                      "src": "9107:46:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 42434,
                      "nodeType": "Block",
                      "src": "9424:184:103",
                      "statements": [
                        {
                          "assignments": [
                            42414
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 42414,
                              "mutability": "mutable",
                              "name": "proxy",
                              "nameLocation": "9468:5:103",
                              "nodeType": "VariableDeclaration",
                              "scope": 42434,
                              "src": "9438:35:103",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FullUpgradableSuperTokenProxy_$40181",
                                "typeString": "contract FullUpgradableSuperTokenProxy"
                              },
                              "typeName": {
                                "id": 42413,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 42412,
                                  "name": "FullUpgradableSuperTokenProxy",
                                  "nameLocations": [
                                    "9438:29:103"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 40181,
                                  "src": "9438:29:103"
                                },
                                "referencedDeclaration": 40181,
                                "src": "9438:29:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FullUpgradableSuperTokenProxy_$40181",
                                  "typeString": "contract FullUpgradableSuperTokenProxy"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 42419,
                          "initialValue": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 42417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "9476:33:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FullUpgradableSuperTokenProxy_$40181_$",
                                "typeString": "function () returns (contract FullUpgradableSuperTokenProxy)"
                              },
                              "typeName": {
                                "id": 42416,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 42415,
                                  "name": "FullUpgradableSuperTokenProxy",
                                  "nameLocations": [
                                    "9480:29:103"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 40181,
                                  "src": "9480:29:103"
                                },
                                "referencedDeclaration": 40181,
                                "src": "9480:29:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FullUpgradableSuperTokenProxy_$40181",
                                  "typeString": "contract FullUpgradableSuperTokenProxy"
                                }
                              }
                            },
                            "id": 42418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9476:35:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FullUpgradableSuperTokenProxy_$40181",
                              "typeString": "contract FullUpgradableSuperTokenProxy"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9438:73:103"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 42420,
                                "name": "proxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42414,
                                "src": "9525:5:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FullUpgradableSuperTokenProxy_$40181",
                                  "typeString": "contract FullUpgradableSuperTokenProxy"
                                }
                              },
                              "id": 42422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9531:10:103",
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40149,
                              "src": "9525:16:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                "typeString": "function () external"
                              }
                            },
                            "id": 42423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9525:18:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 42424,
                          "nodeType": "ExpressionStatement",
                          "src": "9525:18:103"
                        },
                        {
                          "expression": {
                            "id": 42432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 42425,
                              "name": "superToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42357,
                              "src": "9557:10:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$24383",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 42429,
                                      "name": "proxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 42414,
                                      "src": "9590:5:103",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_FullUpgradableSuperTokenProxy_$40181",
                                        "typeString": "contract FullUpgradableSuperTokenProxy"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_FullUpgradableSuperTokenProxy_$40181",
                                        "typeString": "contract FullUpgradableSuperTokenProxy"
                                      }
                                    ],
                                    "id": 42428,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9582:7:103",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 42427,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9582:7:103",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 42430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9582:14:103",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 42426,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24383,
                                "src": "9570:11:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$24383_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 42431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9570:27:103",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$24383",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "src": "9557:40:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$24383",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "id": 42433,
                          "nodeType": "ExpressionStatement",
                          "src": "9557:40:103"
                        }
                      ]
                    },
                    "id": 42435,
                    "nodeType": "IfStatement",
                    "src": "9103:505:103",
                    "trueBody": {
                      "id": 42411,
                      "nodeType": "Block",
                      "src": "9155:214:103",
                      "statements": [
                        {
                          "assignments": [
                            42387
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 42387,
                              "mutability": "mutable",
                              "name": "proxy",
                              "nameLocation": "9179:5:103",
                              "nodeType": "VariableDeclaration",
                              "scope": 42411,
                              "src": "9169:15:103",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                                "typeString": "contract UUPSProxy"
                              },
                              "typeName": {
                                "id": 42386,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 42385,
                                  "name": "UUPSProxy",
                                  "nameLocations": [
                                    "9169:9:103"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 47045,
                                  "src": "9169:9:103"
                                },
                                "referencedDeclaration": 47045,
                                "src": "9169:9:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                                  "typeString": "contract UUPSProxy"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 42392,
                          "initialValue": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 42390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "9187:13:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UUPSProxy_$47045_$",
                                "typeString": "function () returns (contract UUPSProxy)"
                              },
                              "typeName": {
                                "id": 42389,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 42388,
                                  "name": "UUPSProxy",
                                  "nameLocations": [
                                    "9191:9:103"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 47045,
                                  "src": "9191:9:103"
                                },
                                "referencedDeclaration": 47045,
                                "src": "9191:9:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                                  "typeString": "contract UUPSProxy"
                                }
                              }
                            },
                            "id": 42391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9187:15:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                              "typeString": "contract UUPSProxy"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9169:33:103"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 42398,
                                    "name": "_SUPER_TOKEN_LOGIC",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42000,
                                    "src": "9284:18:103",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperToken_$24383",
                                      "typeString": "contract ISuperToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ISuperToken_$24383",
                                      "typeString": "contract ISuperToken"
                                    }
                                  ],
                                  "id": 42397,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9276:7:103",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 42396,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9276:7:103",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 42399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9276:27:103",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 42393,
                                "name": "proxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42387,
                                "src": "9254:5:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                                  "typeString": "contract UUPSProxy"
                                }
                              },
                              "id": 42395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9260:15:103",
                              "memberName": "initializeProxy",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47032,
                              "src": "9254:21:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address) external"
                              }
                            },
                            "id": 42400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9254:50:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 42401,
                          "nodeType": "ExpressionStatement",
                          "src": "9254:50:103"
                        },
                        {
                          "expression": {
                            "id": 42409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 42402,
                              "name": "superToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42357,
                              "src": "9318:10:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$24383",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 42406,
                                      "name": "proxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 42387,
                                      "src": "9351:5:103",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                                        "typeString": "contract UUPSProxy"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                                        "typeString": "contract UUPSProxy"
                                      }
                                    ],
                                    "id": 42405,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9343:7:103",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 42404,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9343:7:103",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 42407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9343:14:103",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 42403,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24383,
                                "src": "9331:11:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$24383_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 42408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9331:27:103",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$24383",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "src": "9318:40:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$24383",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "id": 42410,
                          "nodeType": "ExpressionStatement",
                          "src": "9318:40:103"
                        }
                      ]
                    }
                  },
                  "id": 42436,
                  "nodeType": "IfStatement",
                  "src": "8963:645:103",
                  "trueBody": {
                    "id": 42380,
                    "nodeType": "Block",
                    "src": "9014:83:103",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 42377,
                            "name": "SUPER_TOKEN_FACTORY_NON_UPGRADEABLE_IS_DEPRECATED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24401,
                            "src": "9035:49:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 42378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9035:51:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42379,
                        "nodeType": "RevertStatement",
                        "src": "9028:58:103"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42440,
                        "name": "underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42343,
                        "src": "9685:15:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1540",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 42441,
                        "name": "underlyingDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42345,
                        "src": "9714:18:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 42442,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42350,
                        "src": "9746:4:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 42443,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42352,
                        "src": "9764:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1540",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 42437,
                        "name": "superToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42357,
                        "src": "9650:10:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24383",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "id": 42439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9661:10:103",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23979,
                      "src": "9650:21:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$1540_$_t_uint8_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,uint8,string memory,string memory) external"
                      }
                    },
                    "id": 42444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9650:130:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42445,
                  "nodeType": "ExpressionStatement",
                  "src": "9650:130:103"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 42447,
                        "name": "superToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42357,
                        "src": "9814:10:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24383",
                          "typeString": "contract ISuperToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$24383",
                          "typeString": "contract ISuperToken"
                        }
                      ],
                      "id": 42446,
                      "name": "SuperTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24506,
                      "src": "9796:17:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ISuperToken_$24383_$returns$__$",
                        "typeString": "function (contract ISuperToken)"
                      }
                    },
                    "id": 42448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9796:29:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42449,
                  "nodeType": "EmitStatement",
                  "src": "9791:34:103"
                }
              ]
            },
            "documentation": {
              "id": 42340,
              "nodeType": "StructuredDocumentation",
              "src": "8526:34:103",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "a6d0c534",
            "id": 42451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createERC20Wrapper",
            "nameLocation": "8574:18:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 42354,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8779:8:103"
            },
            "parameters": {
              "id": 42353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42343,
                  "mutability": "mutable",
                  "name": "underlyingToken",
                  "nameLocation": "8609:15:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42451,
                  "src": "8602:22:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1540",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 42342,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42341,
                      "name": "IERC20",
                      "nameLocations": [
                        "8602:6:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1540,
                      "src": "8602:6:103"
                    },
                    "referencedDeclaration": 1540,
                    "src": "8602:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1540",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42345,
                  "mutability": "mutable",
                  "name": "underlyingDecimals",
                  "nameLocation": "8640:18:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42451,
                  "src": "8634:24:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 42344,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8634:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42348,
                  "mutability": "mutable",
                  "name": "upgradability",
                  "nameLocation": "8682:13:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42451,
                  "src": "8668:27:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Upgradability_$24424",
                    "typeString": "enum ISuperTokenFactory.Upgradability"
                  },
                  "typeName": {
                    "id": 42347,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42346,
                      "name": "Upgradability",
                      "nameLocations": [
                        "8668:13:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24424,
                      "src": "8668:13:103"
                    },
                    "referencedDeclaration": 24424,
                    "src": "8668:13:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Upgradability_$24424",
                      "typeString": "enum ISuperTokenFactory.Upgradability"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42350,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "8721:4:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42451,
                  "src": "8705:20:103",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42349,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8705:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42352,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "8751:6:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42451,
                  "src": "8735:22:103",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42351,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8735:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8592:171:103"
            },
            "returnParameters": {
              "id": 42358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42357,
                  "mutability": "mutable",
                  "name": "superToken",
                  "nameLocation": "8817:10:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42451,
                  "src": "8805:22:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$24383",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 42356,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42355,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "8805:11:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24383,
                      "src": "8805:11:103"
                    },
                    "referencedDeclaration": 24383,
                    "src": "8805:11:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24383",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8804:24:103"
            },
            "scope": 42684,
            "src": "8565:1267:103",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              24460
            ],
            "body": {
              "id": 42479,
              "nodeType": "Block",
              "src": "10125:186:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42470,
                        "name": "underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42455,
                        "src": "10174:15:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25464",
                          "typeString": "contract ERC20WithTokenInfo"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 42471,
                            "name": "underlyingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42455,
                            "src": "10203:15:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25464",
                              "typeString": "contract ERC20WithTokenInfo"
                            }
                          },
                          "id": 42472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10219:8:103",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25531,
                          "src": "10203:24:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 42473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10203:26:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 42474,
                        "name": "upgradability",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42458,
                        "src": "10243:13:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Upgradability_$24424",
                          "typeString": "enum ISuperTokenFactory.Upgradability"
                        }
                      },
                      {
                        "id": 42475,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42460,
                        "src": "10270:4:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 42476,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42462,
                        "src": "10288:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25464",
                          "typeString": "contract ERC20WithTokenInfo"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_enum$_Upgradability_$24424",
                          "typeString": "enum ISuperTokenFactory.Upgradability"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 42469,
                      "name": "createERC20Wrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42451,
                      "src": "10142:18:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1540_$_t_uint8_$_t_enum$_Upgradability_$24424_$_t_string_calldata_ptr_$_t_string_calldata_ptr_$returns$_t_contract$_ISuperToken_$24383_$",
                        "typeString": "function (contract IERC20,uint8,enum ISuperTokenFactory.Upgradability,string calldata,string calldata) returns (contract ISuperToken)"
                      }
                    },
                    "id": 42477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10142:162:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24383",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "functionReturnParameters": 42468,
                  "id": 42478,
                  "nodeType": "Return",
                  "src": "10135:169:103"
                }
              ]
            },
            "documentation": {
              "id": 42452,
              "nodeType": "StructuredDocumentation",
              "src": "9838:34:103",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "431f1481",
            "id": 42480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createERC20Wrapper",
            "nameLocation": "9886:18:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 42464,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10071:8:103"
            },
            "parameters": {
              "id": 42463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42455,
                  "mutability": "mutable",
                  "name": "underlyingToken",
                  "nameLocation": "9933:15:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42480,
                  "src": "9914:34:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25464",
                    "typeString": "contract ERC20WithTokenInfo"
                  },
                  "typeName": {
                    "id": 42454,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42453,
                      "name": "ERC20WithTokenInfo",
                      "nameLocations": [
                        "9914:18:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25464,
                      "src": "9914:18:103"
                    },
                    "referencedDeclaration": 25464,
                    "src": "9914:18:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25464",
                      "typeString": "contract ERC20WithTokenInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42458,
                  "mutability": "mutable",
                  "name": "upgradability",
                  "nameLocation": "9972:13:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42480,
                  "src": "9958:27:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Upgradability_$24424",
                    "typeString": "enum ISuperTokenFactory.Upgradability"
                  },
                  "typeName": {
                    "id": 42457,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42456,
                      "name": "Upgradability",
                      "nameLocations": [
                        "9958:13:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24424,
                      "src": "9958:13:103"
                    },
                    "referencedDeclaration": 24424,
                    "src": "9958:13:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Upgradability_$24424",
                      "typeString": "enum ISuperTokenFactory.Upgradability"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42460,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "10011:4:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42480,
                  "src": "9995:20:103",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42459,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9995:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42462,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "10041:6:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42480,
                  "src": "10025:22:103",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42461,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10025:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9904:149:103"
            },
            "returnParameters": {
              "id": 42468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42467,
                  "mutability": "mutable",
                  "name": "superToken",
                  "nameLocation": "10109:10:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42480,
                  "src": "10097:22:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$24383",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 42466,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42465,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "10097:11:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24383,
                      "src": "10097:11:103"
                    },
                    "referencedDeclaration": 24383,
                    "src": "10097:11:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24383",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10096:24:103"
            },
            "scope": 42684,
            "src": "9877:434:103",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              24494
            ],
            "body": {
              "id": 42516,
              "nodeType": "Block",
              "src": "10467:343:103",
              "statements": [
                {
                  "assignments": [
                    42488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42488,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "10609:1:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 42516,
                      "src": "10593:17:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 42487,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10593:15:103",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42499,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 42495,
                                "name": "customSuperTokenProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42483,
                                "src": "10637:21:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 42494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10629:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 42493,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "10629:7:103",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 42496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10629:30:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 42492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10621:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42491,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10621:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10621:39:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10613:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 42489,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10613:8:103",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 42498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10613:48:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10593:68:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42506,
                            "name": "_SUPER_TOKEN_LOGIC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42000,
                            "src": "10708:18:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$24383",
                              "typeString": "contract ISuperToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$24383",
                              "typeString": "contract ISuperToken"
                            }
                          ],
                          "id": 42505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10700:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42504,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10700:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10700:27:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 42501,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42488,
                            "src": "10681:1:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 42500,
                          "name": "UUPSProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47045,
                          "src": "10671:9:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UUPSProxy_$47045_$",
                            "typeString": "type(contract UUPSProxy)"
                          }
                        },
                        "id": 42502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10671:12:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$47045",
                          "typeString": "contract UUPSProxy"
                        }
                      },
                      "id": 42503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10684:15:103",
                      "memberName": "initializeProxy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47032,
                      "src": "10671:28:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 42508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10671:57:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42509,
                  "nodeType": "ExpressionStatement",
                  "src": "10671:57:103"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42512,
                            "name": "customSuperTokenProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42483,
                            "src": "10780:21:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42511,
                          "name": "ISuperToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24383,
                          "src": "10768:11:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISuperToken_$24383_$",
                            "typeString": "type(contract ISuperToken)"
                          }
                        },
                        "id": 42513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10768:34:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24383",
                          "typeString": "contract ISuperToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$24383",
                          "typeString": "contract ISuperToken"
                        }
                      ],
                      "id": 42510,
                      "name": "CustomSuperTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24512,
                      "src": "10744:23:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ISuperToken_$24383_$returns$__$",
                        "typeString": "function (contract ISuperToken)"
                      }
                    },
                    "id": 42514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10744:59:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42515,
                  "nodeType": "EmitStatement",
                  "src": "10739:64:103"
                }
              ]
            },
            "documentation": {
              "id": 42481,
              "nodeType": "StructuredDocumentation",
              "src": "10317:34:103",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "d412d344",
            "id": 42517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeCustomSuperToken",
            "nameLocation": "10365:26:103",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 42485,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10454:8:103"
            },
            "parameters": {
              "id": 42484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42483,
                  "mutability": "mutable",
                  "name": "customSuperTokenProxy",
                  "nameLocation": "10409:21:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42517,
                  "src": "10401:29:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10401:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10391:45:103"
            },
            "returnParameters": {
              "id": 42486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10467:0:103"
            },
            "scope": 42684,
            "src": "10356:454:103",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              24480
            ],
            "body": {
              "id": 42595,
              "nodeType": "Block",
              "src": "11021:867:103",
              "statements": [
                {
                  "assignments": [
                    42528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42528,
                      "mutability": "mutable",
                      "name": "existingAddress",
                      "nameLocation": "11039:15:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 42595,
                      "src": "11031:23:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 42527,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11031:7:103",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42532,
                  "initialValue": {
                    "baseExpression": {
                      "id": 42529,
                      "name": "_canonicalWrapperSuperTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42017,
                      "src": "11057:28:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 42531,
                    "indexExpression": {
                      "id": 42530,
                      "name": "_underlyingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42520,
                      "src": "11099:16:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11057:68:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11031:94:103"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 42538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42533,
                      "name": "existingAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42528,
                      "src": "11140:15:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 42536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11167:1:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 42535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11159:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 42534,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11159:7:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11159:10:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11140:29:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 42593,
                    "nodeType": "Block",
                    "src": "11268:614:103",
                    "statements": [
                      {
                        "assignments": [
                          42549
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 42549,
                            "mutability": "mutable",
                            "name": "bytecode",
                            "nameLocation": "11295:8:103",
                            "nodeType": "VariableDeclaration",
                            "scope": 42593,
                            "src": "11282:21:103",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 42548,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "11282:5:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 42554,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 42551,
                                "name": "UUPSProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47045,
                                "src": "11311:9:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_UUPSProxy_$47045_$",
                                  "typeString": "type(contract UUPSProxy)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_UUPSProxy_$47045_$",
                                  "typeString": "type(contract UUPSProxy)"
                                }
                              ],
                              "id": 42550,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967269,
                              "src": "11306:4:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 42552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11306:15:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_UUPSProxy_$47045",
                              "typeString": "type(contract UUPSProxy)"
                            }
                          },
                          "id": 42553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11322:12:103",
                          "memberName": "creationCode",
                          "nodeType": "MemberAccess",
                          "src": "11306:28:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11282:52:103"
                      },
                      {
                        "expression": {
                          "id": 42587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 42555,
                            "name": "superTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42523,
                            "src": "11348:17:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "hexValue": "30786666",
                                                    "id": 42567,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "11551:4:103",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_255_by_1",
                                                      "typeString": "int_const 255"
                                                    },
                                                    "value": "0xff"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_255_by_1",
                                                      "typeString": "int_const 255"
                                                    }
                                                  ],
                                                  "id": 42566,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "11544:6:103",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_bytes1_$",
                                                    "typeString": "type(bytes1)"
                                                  },
                                                  "typeName": {
                                                    "id": 42565,
                                                    "name": "bytes1",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "11544:6:103",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 42568,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11544:12:103",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes1",
                                                  "typeString": "bytes1"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 42571,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967268,
                                                    "src": "11598:4:103",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_SuperTokenFactoryBase_$42684",
                                                      "typeString": "contract SuperTokenFactoryBase"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_SuperTokenFactoryBase_$42684",
                                                      "typeString": "contract SuperTokenFactoryBase"
                                                    }
                                                  ],
                                                  "id": 42570,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "11590:7:103",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": {
                                                    "id": 42569,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "11590:7:103",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 42572,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11590:13:103",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "id": 42576,
                                                        "name": "_underlyingToken",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 42520,
                                                        "src": "11658:16:103",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "id": 42574,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "11647:3:103",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_magic_abi",
                                                          "typeString": "abi"
                                                        }
                                                      },
                                                      "id": 42575,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberLocation": "11651:6:103",
                                                      "memberName": "encode",
                                                      "nodeType": "MemberAccess",
                                                      "src": "11647:10:103",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                      }
                                                    },
                                                    "id": 42577,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "11647:28:103",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  ],
                                                  "id": 42573,
                                                  "name": "keccak256",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4294967288,
                                                  "src": "11637:9:103",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                  }
                                                },
                                                "id": 42578,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11637:39:103",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 42580,
                                                    "name": "bytecode",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 42549,
                                                    "src": "11720:8:103",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  ],
                                                  "id": 42579,
                                                  "name": "keccak256",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4294967288,
                                                  "src": "11710:9:103",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                  }
                                                },
                                                "id": 42581,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11710:19:103",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes1",
                                                  "typeString": "bytes1"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "expression": {
                                                "id": 42563,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967295,
                                                "src": "11494:3:103",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 42564,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberLocation": "11498:12:103",
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "src": "11494:16:103",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 42582,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "11494:265:103",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 42562,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967288,
                                          "src": "11455:9:103",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 42583,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "11455:330:103",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 42561,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11422:7:103",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 42560,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11422:7:103",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 42584,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11422:385:103",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 42559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11393:7:103",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 42558,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11393:7:103",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 42585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11393:432:103",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 42557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11368:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 42556,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11368:7:103",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 42586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11368:471:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11348:491:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 42588,
                        "nodeType": "ExpressionStatement",
                        "src": "11348:491:103"
                      },
                      {
                        "expression": {
                          "id": 42591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 42589,
                            "name": "isDeployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42525,
                            "src": "11853:10:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 42590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11866:5:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "11853:18:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 42592,
                        "nodeType": "ExpressionStatement",
                        "src": "11853:18:103"
                      }
                    ]
                  },
                  "id": 42594,
                  "nodeType": "IfStatement",
                  "src": "11136:746:103",
                  "trueBody": {
                    "id": 42547,
                    "nodeType": "Block",
                    "src": "11171:91:103",
                    "statements": [
                      {
                        "expression": {
                          "id": 42541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 42539,
                            "name": "superTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42523,
                            "src": "11185:17:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 42540,
                            "name": "existingAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42528,
                            "src": "11205:15:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11185:35:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 42542,
                        "nodeType": "ExpressionStatement",
                        "src": "11185:35:103"
                      },
                      {
                        "expression": {
                          "id": 42545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 42543,
                            "name": "isDeployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42525,
                            "src": "11234:10:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 42544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11247:4:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "11234:17:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 42546,
                        "nodeType": "ExpressionStatement",
                        "src": "11234:17:103"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 42518,
              "nodeType": "StructuredDocumentation",
              "src": "10816:34:103",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "bab74c89",
            "id": 42596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeCanonicalERC20WrapperAddress",
            "nameLocation": "10864:35:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42520,
                  "mutability": "mutable",
                  "name": "_underlyingToken",
                  "nameLocation": "10908:16:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42596,
                  "src": "10900:24:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10900:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10899:26:103"
            },
            "returnParameters": {
              "id": 42526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42523,
                  "mutability": "mutable",
                  "name": "superTokenAddress",
                  "nameLocation": "10981:17:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42596,
                  "src": "10973:25:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10973:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42525,
                  "mutability": "mutable",
                  "name": "isDeployed",
                  "nameLocation": "11005:10:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42596,
                  "src": "11000:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42524,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11000:4:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10972:44:103"
            },
            "scope": 42684,
            "src": "10855:1033:103",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              24488
            ],
            "body": {
              "id": 42610,
              "nodeType": "Block",
              "src": "12078:112:103",
              "statements": [
                {
                  "expression": {
                    "id": 42608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42604,
                      "name": "superTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42602,
                      "src": "12088:17:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 42605,
                        "name": "_canonicalWrapperSuperTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42017,
                        "src": "12108:28:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 42607,
                      "indexExpression": {
                        "id": 42606,
                        "name": "_underlyingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42599,
                        "src": "12150:23:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12108:75:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12088:95:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42609,
                  "nodeType": "ExpressionStatement",
                  "src": "12088:95:103"
                }
              ]
            },
            "documentation": {
              "id": 42597,
              "nodeType": "StructuredDocumentation",
              "src": "11894:34:103",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "eff0a89d",
            "id": 42611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCanonicalERC20Wrapper",
            "nameLocation": "11942:24:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42599,
                  "mutability": "mutable",
                  "name": "_underlyingTokenAddress",
                  "nameLocation": "11975:23:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42611,
                  "src": "11967:31:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11967:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11966:33:103"
            },
            "returnParameters": {
              "id": 42603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42602,
                  "mutability": "mutable",
                  "name": "superTokenAddress",
                  "nameLocation": "12055:17:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42611,
                  "src": "12047:25:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12047:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12046:27:103"
            },
            "scope": 42684,
            "src": "11933:257:103",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 42682,
              "nodeType": "Block",
              "src": "12557:677:103",
              "statements": [
                {
                  "assignments": [
                    42621
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42621,
                      "mutability": "mutable",
                      "name": "gov",
                      "nameLocation": "12575:3:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 42682,
                      "src": "12567:11:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ownable_$651",
                        "typeString": "contract Ownable"
                      },
                      "typeName": {
                        "id": 42620,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42619,
                          "name": "Ownable",
                          "nameLocations": [
                            "12567:7:103"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "12567:7:103"
                        },
                        "referencedDeclaration": 651,
                        "src": "12567:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ownable_$651",
                          "typeString": "contract Ownable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42630,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 42625,
                                "name": "_host",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42003,
                                "src": "12597:5:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$25037",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 42626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12603:13:103",
                              "memberName": "getGovernance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24604,
                              "src": "12597:19:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ISuperfluidGovernance_$25166_$",
                                "typeString": "function () view external returns (contract ISuperfluidGovernance)"
                              }
                            },
                            "id": 42627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12597:21:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperfluidGovernance_$25166",
                              "typeString": "contract ISuperfluidGovernance"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISuperfluidGovernance_$25166",
                              "typeString": "contract ISuperfluidGovernance"
                            }
                          ],
                          "id": 42624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12589:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42623,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12589:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12589:30:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42622,
                      "name": "Ownable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "12581:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Ownable_$651_$",
                        "typeString": "type(contract Ownable)"
                      }
                    },
                    "id": 42629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12581:39:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$651",
                      "typeString": "contract Ownable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12567:53:103"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 42636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 42631,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "12634:3:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 42632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12638:6:103",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "12634:10:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 42633,
                          "name": "gov",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42621,
                          "src": "12648:3:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ownable_$651",
                            "typeString": "contract Ownable"
                          }
                        },
                        "id": 42634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12652:5:103",
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 579,
                        "src": "12648:9:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 42635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12648:11:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12634:25:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42640,
                  "nodeType": "IfStatement",
                  "src": "12630:81:103",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 42637,
                        "name": "SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42020,
                        "src": "12668:41:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 42638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12668:43:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 42639,
                    "nodeType": "RevertStatement",
                    "src": "12661:50:103"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 42651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 42641,
                        "name": "_canonicalWrapperSuperTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42017,
                        "src": "12903:28:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 42646,
                      "indexExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 42644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12940:1:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 42643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12932:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42642,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12932:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12932:10:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12903:40:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 42649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12955:1:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 42648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12947:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 42647,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12947:7:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12947:10:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12903:54:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42656,
                  "nodeType": "IfStatement",
                  "src": "12899:128:103",
                  "trueBody": {
                    "id": 42655,
                    "nodeType": "Block",
                    "src": "12959:68:103",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 42652,
                            "name": "SUPER_TOKEN_FACTORY_ALREADY_EXISTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24393,
                            "src": "12980:34:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 42653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12980:36:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42654,
                        "nodeType": "RevertStatement",
                        "src": "12973:43:103"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 42680,
                    "nodeType": "Block",
                    "src": "13110:118:103",
                    "statements": [
                      {
                        "expression": {
                          "id": 42678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 42668,
                              "name": "_canonicalWrapperSuperTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42017,
                              "src": "13124:28:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 42673,
                            "indexExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 42669,
                                  "name": "_data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42616,
                                  "src": "13153:5:103",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_InitializeData_$41997_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct SuperTokenFactoryBase.InitializeData calldata[] calldata"
                                  }
                                },
                                "id": 42671,
                                "indexExpression": {
                                  "id": 42670,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42658,
                                  "src": "13159:1:103",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13153:8:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializeData_$41997_calldata_ptr",
                                  "typeString": "struct SuperTokenFactoryBase.InitializeData calldata"
                                }
                              },
                              "id": 42672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13162:15:103",
                              "memberName": "underlyingToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41994,
                              "src": "13153:24:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13124:54:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 42674,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42616,
                                "src": "13181:5:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_InitializeData_$41997_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct SuperTokenFactoryBase.InitializeData calldata[] calldata"
                                }
                              },
                              "id": 42676,
                              "indexExpression": {
                                "id": 42675,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42658,
                                "src": "13187:1:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13181:8:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializeData_$41997_calldata_ptr",
                                "typeString": "struct SuperTokenFactoryBase.InitializeData calldata"
                              }
                            },
                            "id": 42677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13207:10:103",
                            "memberName": "superToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41996,
                            "src": "13181:36:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13124:93:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 42679,
                        "nodeType": "ExpressionStatement",
                        "src": "13124:93:103"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42661,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42658,
                      "src": "13087:1:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 42662,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42616,
                        "src": "13091:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_InitializeData_$41997_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct SuperTokenFactoryBase.InitializeData calldata[] calldata"
                        }
                      },
                      "id": 42663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13097:6:103",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13091:12:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13087:16:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42681,
                  "initializationExpression": {
                    "assignments": [
                      42658
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 42658,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13080:1:103",
                        "nodeType": "VariableDeclaration",
                        "scope": 42681,
                        "src": "13072:9:103",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 42657,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13072:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 42660,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 42659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13084:1:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13072:13:103"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 42666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13105:3:103",
                      "subExpression": {
                        "id": 42665,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42658,
                        "src": "13105:1:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 42667,
                    "nodeType": "ExpressionStatement",
                    "src": "13105:3:103"
                  },
                  "nodeType": "ForStatement",
                  "src": "13067:161:103"
                }
              ]
            },
            "documentation": {
              "id": 42612,
              "nodeType": "StructuredDocumentation",
              "src": "12196:244:103",
              "text": "@notice Initializes list of canonical wrapper super tokens.\n @dev Note that this should also be kind of a throwaway function which will be executed only once.\n @param _data an array of canonical wrappper super tokens to be set"
            },
            "functionSelector": "97e011ed",
            "id": 42683,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeCanonicalWrapperSuperTokens",
            "nameLocation": "12454:37:103",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42616,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "12527:5:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42683,
                  "src": "12501:31:103",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_InitializeData_$41997_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct SuperTokenFactoryBase.InitializeData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42614,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42613,
                        "name": "InitializeData",
                        "nameLocations": [
                          "12501:14:103"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 41997,
                        "src": "12501:14:103"
                      },
                      "referencedDeclaration": 41997,
                      "src": "12501:14:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InitializeData_$41997_storage_ptr",
                        "typeString": "struct SuperTokenFactoryBase.InitializeData"
                      }
                    },
                    "id": 42615,
                    "nodeType": "ArrayTypeName",
                    "src": "12501:16:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_InitializeData_$41997_storage_$dyn_storage_ptr",
                      "typeString": "struct SuperTokenFactoryBase.InitializeData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12491:47:103"
            },
            "returnParameters": {
              "id": 42618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12557:0:103"
            },
            "scope": 42684,
            "src": "12445:789:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 42710,
        "src": "807:12429:103",
        "usedErrors": [
          24393,
          24395,
          24397,
          24399,
          24401,
          24403,
          42020
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 42685,
              "name": "SuperTokenFactoryBase",
              "nameLocations": [
                "13268:21:103"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42684,
              "src": "13268:21:103"
            },
            "id": 42686,
            "nodeType": "InheritanceSpecifier",
            "src": "13268:21:103"
          }
        ],
        "canonicalName": "SuperTokenFactory",
        "contractDependencies": [
          40181,
          47045
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 42709,
        "linearizedBaseContracts": [
          42709,
          42684,
          24513,
          46988,
          875
        ],
        "name": "SuperTokenFactory",
        "nameLocation": "13247:17:103",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 42707,
              "nodeType": "Block",
              "src": "13909:8:103",
              "statements": []
            },
            "id": 42708,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 42701,
                    "name": "host",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42689,
                    "src": "13749:4:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$25037",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  {
                    "id": 42702,
                    "name": "superTokenLogic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42692,
                    "src": "13767:15:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24383",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  {
                    "id": 42703,
                    "name": "constantOutflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42695,
                    "src": "13796:18:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  {
                    "id": 42704,
                    "name": "constantInflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42698,
                    "src": "13828:17:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  }
                ],
                "id": 42705,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 42700,
                  "name": "SuperTokenFactoryBase",
                  "nameLocations": [
                    "13714:21:103"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42684,
                  "src": "13714:21:103"
                },
                "nodeType": "ModifierInvocation",
                "src": "13714:141:103"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42689,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "13564:4:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42708,
                  "src": "13552:16:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$25037",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 42688,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42687,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "13552:11:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25037,
                      "src": "13552:11:103"
                    },
                    "referencedDeclaration": 25037,
                    "src": "13552:11:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$25037",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42692,
                  "mutability": "mutable",
                  "name": "superTokenLogic",
                  "nameLocation": "13590:15:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42708,
                  "src": "13578:27:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$24383",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 42691,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42690,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "13578:11:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24383,
                      "src": "13578:11:103"
                    },
                    "referencedDeclaration": 24383,
                    "src": "13578:11:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24383",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42695,
                  "mutability": "mutable",
                  "name": "constantOutflowNFT",
                  "nameLocation": "13635:18:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42708,
                  "src": "13615:38:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 42694,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42693,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "13615:19:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23686,
                      "src": "13615:19:103"
                    },
                    "referencedDeclaration": 23686,
                    "src": "13615:19:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23686",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42698,
                  "mutability": "mutable",
                  "name": "constantInflowNFT",
                  "nameLocation": "13682:17:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 42708,
                  "src": "13663:36:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 42697,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42696,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "13663:18:103"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23632,
                      "src": "13663:18:103"
                    },
                    "referencedDeclaration": 23632,
                    "src": "13663:18:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$23632",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13542:163:103"
            },
            "returnParameters": {
              "id": 42706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13909:0:103"
            },
            "scope": 42709,
            "src": "13531:386:103",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 42710,
        "src": "13238:681:103",
        "usedErrors": [
          24393,
          24395,
          24397,
          24399,
          24401,
          24403,
          42020
        ]
      }
    ],
    "src": "35:13885:103"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-06-28T07:36:00.359Z",
  "devdoc": {
    "events": {
      "CustomSuperTokenCreated(address)": {
        "details": "Custom super token created event",
        "params": {
          "token": "Newly created custom super token address"
        }
      },
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "SuperTokenCreated(address)": {
        "details": "Super token created event",
        "params": {
          "token": "Newly created super token address"
        }
      },
      "SuperTokenLogicCreated(address)": {
        "details": "Super token logic created event",
        "params": {
          "tokenLogic": "Token logic address"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "computeCanonicalERC20WrapperAddress(address)": {
        "details": "We return from our canonical list if it already exists, otherwise we compute itnote that this function only computes addresses for SEMI_UPGRADABLE SuperTokens",
        "params": {
          "_underlyingToken": "Underlying ERC20 token address"
        },
        "returns": {
          "isDeployed": "whether the super token is deployed AND set in the canonical mapping",
          "superTokenAddress": "Super token address"
        }
      },
      "createCanonicalERC20Wrapper(address)": {
        "details": "salt for create2 is the keccak256 hash of abi.encode(address(_underlyingToken))",
        "params": {
          "_underlyingToken": "Underlying ERC20 token"
        },
        "returns": {
          "_0": "ISuperToken the created supertoken"
        }
      },
      "createERC20Wrapper(address,uint8,string,string)": {
        "params": {
          "name": "Super token name",
          "symbol": "Super token symbol",
          "underlyingToken": "Underlying ERC20 token",
          "upgradability": "Upgradability mode"
        },
        "returns": {
          "superToken": "The deployed and initialized wrapper super token NOTE: - It assumes token provide the .decimals() function"
        }
      },
      "createERC20Wrapper(address,uint8,uint8,string,string)": {
        "params": {
          "name": "Super token name",
          "symbol": "Super token symbol",
          "underlyingDecimals": "Underlying token decimals",
          "underlyingToken": "Underlying ERC20 token",
          "upgradability": "Upgradability mode"
        },
        "returns": {
          "superToken": "The deployed and initialized wrapper super token"
        }
      },
      "getCanonicalERC20Wrapper(address)": {
        "details": "We return the address if it exists and the zero address otherwise",
        "params": {
          "_underlyingTokenAddress": "Underlying ERC20 token address"
        },
        "returns": {
          "superTokenAddress": "Super token address"
        }
      },
      "getCodeAddress()": {
        "details": "Get current implementation code address."
      },
      "getHost()": {
        "details": "Get superfluid host contract address"
      },
      "initialize()": {
        "details": "Initialize the contract"
      },
      "initializeCanonicalWrapperSuperTokens((address,address)[])": {
        "details": "Note that this should also be kind of a throwaway function which will be executed only once.",
        "params": {
          "_data": "an array of canonical wrappper super tokens to be set"
        }
      },
      "initializeCustomSuperToken(address)": {
        "details": "Creates a new custom super token",
        "params": {
          "customSuperTokenProxy": "address of the custom supertoken proxy"
        }
      },
      "proxiableUUID()": {
        "details": "Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT."
      },
      "updateCode(address)": {
        "details": "This function updates the logic contract for the SuperTokenFactory",
        "params": {
          "newAddress": "the new address of the SuperTokenFactory logic contract"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER()": [
        {
          "notice": "NOTE: Whenever modifying the storage layout here it is important to update the validateStorageLayout function in its respective mock contract to ensure that it doesn't break anything or lead to unexpected behaviors/layout when upgrading"
        }
      ]
    },
    "kind": "user",
    "methods": {
      "computeCanonicalERC20WrapperAddress(address)": {
        "notice": "Computes/Retrieves wrapper super token address given the underlying token address"
      },
      "createCanonicalERC20Wrapper(address)": {
        "notice": "Creates a wrapper super token AND sets it in the canonical list OR reverts if it already exists"
      },
      "createERC20Wrapper(address,uint8,string,string)": {
        "notice": "Create new super token wrapper for the underlying ERC20 token with extra token info"
      },
      "createERC20Wrapper(address,uint8,uint8,string,string)": {
        "notice": "Create new super token wrapper for the underlying ERC20 token"
      },
      "getCanonicalERC20Wrapper(address)": {
        "notice": "Gets the canonical ERC20 wrapper super token address given the underlying token address"
      },
      "getSuperTokenLogic()": {
        "notice": "Get the canonical super token logic."
      },
      "initializeCanonicalWrapperSuperTokens((address,address)[])": {
        "notice": "Initializes list of canonical wrapper super tokens."
      },
      "updateCode(address)": {
        "notice": "Updates the logic contract for the SuperTokenFactory"
      }
    },
    "version": 1
  }
}