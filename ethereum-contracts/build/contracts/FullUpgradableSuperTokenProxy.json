{
  "contractName": "FullUpgradableSuperTokenProxy",
  "abi": [
    {
      "inputs": [],
      "name": "FUSTP_ALREADY_INITIALIZED",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FUSTP_ALREADY_INITIALIZED\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Full upgradable super token proxy contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/superfluid/FullUpgradableSuperTokenProxy.sol\":\"FullUpgradableSuperTokenProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x2e5be80a58134c213a5fb4da40797c616a0c73cf807d5d0c49b28c5c5047a5f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f29b92234d646c801b9c5f2628742c9679f58ae9090b1bf346cfca3eddec8fb\",\"dweb:/ipfs/QmcK7zX8ugFViAM7h7xVQiZzYifH5NZbBRQSy1Yr9bfeA9\"]},\"project:/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0x6c45e56bafabb2d0b61be9c9b5c40ce16f06537b7f7d695115ba995d8e384c7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5bec860e391e693171417377bf386fe70fe09a27063fc1499b2c6776d140a52\",\"dweb:/ipfs/QmeYq64k3gZRkpJyRKquxqdNWFrwy2tWHBiXSHNGMjaMNA\"]},\"project:/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x2df65c6d6e74ba92a267176b1f1661416a6d54cf56bebbdea85fccadfe6d446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://113dab47ce7e686fbddbeadd58183fea3839f5882261a285b4141b558838528a\",\"dweb:/ipfs/QmY6pVPzSSwR2Bu3YCxHv7Fyfwx8VJcBBjYRSfDi4e7LbV\"]},\"project:/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0xbdcda11e5c157e63da15d7aced71fa20858472e3d5d5dba158690109d4abdfab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02277add66a1b52361fbfa8d1f8a502abfdeeb860f41458bcee731a3b9447456\",\"dweb:/ipfs/QmYnPVWYfCtBc359gu36sF4tMETQS1DDztgJ9hmSZtxMDP\"]},\"project:/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0x4dc5784dc8c21fa4ed393add91ced5853e3f95222467b03dbaa79e60eb7cc193\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8580acc481e6cc15425898d64c63fc2a348248b01543a3db8b4ad75ef57a98\",\"dweb:/ipfs/QmYDRy7fvrnHHRW5m7u9CZJrKEKEXXxAJ7ZR5JG8fwa5GG\"]},\"project:/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0x1961a8579193d3a9cdceee56c4e8a1a888869eaac1b2ca3594616c67a25d45c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f55802e18a32f9f46958fbf5ffdf6ed8654e063e545488110bb455020b4eda69\",\"dweb:/ipfs/QmNehJdVBqEssEdFL6jTmHtfvEVCUanHyiVQEJBC4rnuUD\"]},\"project:/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xb3701155641cb42103b206e66dcdc82c286f554189f9c9715b7146c0f1b6fbdc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8345c2c3fbc825eb133f05440665530569d5bd59acb8e1fcdea53593e9c7d49b\",\"dweb:/ipfs/QmXNRYfqWDm8TofsoRw38GVa2LWzvPsGkF1H8Ro5E22CP7\"]},\"project:/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xf1d91553023a7a2db8da3352753fc59645aa4339643e02264b9c1868eb632f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c80058a66407690e98e40cd454a9cb46f695e948604f024e38f6b2b61626555\",\"dweb:/ipfs/QmTVwCQmh4GBS4K9r3RYk8zpLfzGtmeWfYRdAfMmu7htP7\"]},\"project:/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xb8cfa2d1f1a9de1495102bac583a819a0bc746031e157d0f5fa4103d6ebe4179\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e229ecfd55d9fd21ea3d4e58e49ffe0c47c862d6b17cdf552ad6d39a6379443\",\"dweb:/ipfs/QmaPY4Fg2uCNoeF99tnTcEfYdwQWBLp87WPmez37KDGiTW\"]},\"project:/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x650695c87473f47c36ba57eecf57b42faa9eab3dd0be828aa0be5aeabf1f15db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3aea8086ef10750f92d133cc65becd0b51e51add441435819a58d81f9d482f55\",\"dweb:/ipfs/QmRZKfHxgg9aEWDzsnd326Bpq2bpCZM4zM86NRkcW1Lu4x\"]},\"project:/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x60b8207b8d0bd42b66decf0def9e8ebc032ec3e1d44b348979afc6066428effc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b459c2e6d2637506bcbc159c422520ebd22a31646283909fb173e0da0f6e9489\",\"dweb:/ipfs/QmZ6PNM8jFgh6aXR9ULdXkFABMsMXQrHrtF4fZKsBPVQzu\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x63eb98b650214aff1979f13bb9b503425d0c2d7500a3f210930fe3057695df70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83603f4cbad24656818345a08965b8402a5b38ad1d9382077727e8154774f66f\",\"dweb:/ipfs/QmVqdmcwma6FCmJ8eKPm761o1PPWhPMW1yauLVLpXMiwpt\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0xa68065a8a4da8cb3755364b714b2636861a22a268f8dd82a1be7b4686a1d02fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://deff30448cfeecc0ac555e35d6bd5d47acaffa9b2199e9f6b0dd0a01b2fbe4ed\",\"dweb:/ipfs/QmayyxRBkgBT3yCCsQ96TAmFcrHVufqTGVnuNjLGy2Cva8\"]},\"project:/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0xea22c0295f28a5e4124cc54a5324d9d9f018f322df644ab5e2b332bbf23ada74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ca09ea1f6c2f14ba1d59c75946d12563e01bee00dfdb18461b68117d120aea4\",\"dweb:/ipfs/QmUFN1W5kfi57Ae2F74o42HFe3WrUZr5gc7rmQHujMjQVE\"]},\"project:/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x873a19fc42452483280191324109a527e0b0a1c200dab28aa85dff4ad0a7d0c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838778521d9036ef0005ff0cd969a095f1b5535dba9518051a190cf21693a2d9\",\"dweb:/ipfs/Qmd2eZ1ENtiiyiua97kyzWyUUn4hZvUqCHNMeAc6umxP2D\"]},\"project:/contracts/superfluid/FullUpgradableSuperTokenProxy.sol\":{\"keccak256\":\"0x6e66ecd16b8d015b1fdee6964f5502b8e88a227ba66b6e8f8a9c0fcc5dbe9d99\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7f8ea8d9359fefb181cb32a4ffc4a4e9e69b1a06d81be273bb84850ed3138660\",\"dweb:/ipfs/QmSyDFmna8P5oMhTo3NGYNHmM4LJGKcqWPQun6A274FyyK\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610213806100206000396000f3fe6080604052600436106100225760003560e01c80638129fc1c1461003957610031565b366100315761002f61004e565b005b61002f61004e565b34801561004557600080fd5b5061002f610060565b61005e6100596100d0565b610173565b565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546001600160a01b038116156100aa576040516305c5d81960e01b815260040160405180910390fd5b50337fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a055565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546000906001600160a01b03811661010b5761010b610197565b806001600160a01b0316639470a5b26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d91906101ad565b91505090565b3660008037600080366000845af43d6000803e808015610192573d6000f35b3d6000fd5b634e487b7160e01b600052600160045260246000fd5b6000602082840312156101bf57600080fd5b81516001600160a01b03811681146101d657600080fd5b939250505056fea26469706673582212207d44b05228bdcf5cefb65c8fdbcc34385327dcb46cddd6f9c6144082d522ebd264736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100225760003560e01c80638129fc1c1461003957610031565b366100315761002f61004e565b005b61002f61004e565b34801561004557600080fd5b5061002f610060565b61005e6100596100d0565b610173565b565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546001600160a01b038116156100aa576040516305c5d81960e01b815260040160405180910390fd5b50337fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a055565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546000906001600160a01b03811661010b5761010b610197565b806001600160a01b0316639470a5b26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d91906101ad565b91505090565b3660008037600080366000845af43d6000803e808015610192573d6000f35b3d6000fd5b634e487b7160e01b600052600160045260246000fd5b6000602082840312156101bf57600080fd5b81516001600160a01b03811681146101d657600080fd5b939250505056fea26469706673582212207d44b05228bdcf5cefb65c8fdbcc34385327dcb46cddd6f9c6144082d522ebd264736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:459:124",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:124",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:124",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:124",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:124",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:124",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:124",
                        "type": "",
                        "value": "0x01"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:124",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:124",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:124"
                }
              ]
            },
            "name": "panic_error_0x01",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "248:209:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "294:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "303:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "306:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "296:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "296:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "296:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "269:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "265:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "265:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "290:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "261:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "261:32:124"
                  },
                  "nodeType": "YulIf",
                  "src": "258:52:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "319:29:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "338:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "332:5:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "332:16:124"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "323:5:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "411:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "420:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "423:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "413:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "413:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "413:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "370:5:124"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "381:5:124"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "396:3:124",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "401:1:124",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "392:3:124"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "392:11:124"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "405:1:124",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "388:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "388:19:124"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "377:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "377:31:124"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "367:2:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "367:42:124"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "360:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "360:50:124"
                  },
                  "nodeType": "YulIf",
                  "src": "357:70:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "436:15:124",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "446:5:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "436:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ISuperToken_$24383_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "214:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "225:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "237:6:124",
                "type": ""
              }
            ],
            "src": "146:311:124"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_contract$_ISuperToken_$24383_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 124,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "296:1000:101:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "296:1000:101:-:0;;;;;;;;;;;;;;;;;;;;;;;2898:11:6;:9;:11::i;:::-;296:1000:101;;2675:11:6;:9;:11::i;605:368:101:-;;;;;;;;;;;;;:::i;2322:110:6:-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;605:368:101:-;738:13;732:20;-1:-1:-1;;;;;775:30:101;;;771:70;;814:27;;-1:-1:-1;;;814:27:101;;;;;;;;;;;771:70;-1:-1:-1;861:10:101;934:13;927:30;605:368::o;979:314::-;1161:13;1155:20;1038:12;;-1:-1:-1;;;;;1201:30:101;;1194:38;;;;:::i;:::-;1257:7;-1:-1:-1;;;;;1257:26:101;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1242:44;;;979:314;:::o;948:895:6:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;14:127:124;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:311;237:6;290:2;278:9;269:7;265:23;261:32;258:52;;;306:1;303;296:12;258:52;332:16;;-1:-1:-1;;;;;377:31:124;;367:42;;357:70;;423:1;420;413:12;357:70;446:5;146:311;-1:-1:-1;;;146:311:124:o",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity 0.8.19;\n\nimport { ISuperTokenFactory } from \"../interfaces/superfluid/ISuperTokenFactory.sol\";\nimport { Proxy } from \"@openzeppelin/contracts/proxy/Proxy.sol\";\n\n\n/**\n * @title Full upgradable super token proxy contract\n * @author Superfluid\n */\ncontract FullUpgradableSuperTokenProxy is Proxy {\n\n    // web3.utils.keccak256(\"org.superfluid-finance.FullUpgradableSuperTokenWrapper.factory_slot\")\n    bytes32 internal constant _FACTORY_SLOT = 0xb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0;\n\n    error FUSTP_ALREADY_INITIALIZED();\n\n    function initialize() external\n    {\n        address factory;\n        assembly { // solium-disable-line\n            factory := sload(_FACTORY_SLOT)\n        }\n        if (address(factory) != address(0)) revert FUSTP_ALREADY_INITIALIZED();\n        factory = msg.sender;\n        assembly { // solium-disable-line\n            sstore(_FACTORY_SLOT, factory)\n        }\n    }\n\n    function _implementation() internal override view returns (address impl) {\n        ISuperTokenFactory factory;\n        assembly { // solium-disable-line\n            factory := sload(_FACTORY_SLOT)\n        }\n        assert(address(factory) != address(0));\n        return address(factory.getSuperTokenLogic());\n    }\n\n}\n",
  "sourcePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FullUpgradableSuperTokenProxy.sol",
  "ast": {
    "absolutePath": "project:/contracts/superfluid/FullUpgradableSuperTokenProxy.sol",
    "exportedSymbols": {
      "FullUpgradableSuperTokenProxy": [
        40181
      ],
      "ISuperTokenFactory": [
        24513
      ],
      "Proxy": [
        706
      ]
    },
    "id": 40182,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 40110,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:101"
      },
      {
        "absolutePath": "project:/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "file": "../interfaces/superfluid/ISuperTokenFactory.sol",
        "id": 40112,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 40182,
        "sourceUnit": 24514,
        "src": "60:85:101",
        "symbolAliases": [
          {
            "foreign": {
              "id": 40111,
              "name": "ISuperTokenFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24513,
              "src": "69:18:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
        "file": "@openzeppelin/contracts/proxy/Proxy.sol",
        "id": 40114,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 40182,
        "sourceUnit": 707,
        "src": "146:64:101",
        "symbolAliases": [
          {
            "foreign": {
              "id": 40113,
              "name": "Proxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 706,
              "src": "155:5:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40116,
              "name": "Proxy",
              "nameLocations": [
                "338:5:101"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 706,
              "src": "338:5:101"
            },
            "id": 40117,
            "nodeType": "InheritanceSpecifier",
            "src": "338:5:101"
          }
        ],
        "canonicalName": "FullUpgradableSuperTokenProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 40115,
          "nodeType": "StructuredDocumentation",
          "src": "213:82:101",
          "text": " @title Full upgradable super token proxy contract\n @author Superfluid"
        },
        "fullyImplemented": true,
        "id": 40181,
        "linearizedBaseContracts": [
          40181,
          706
        ],
        "name": "FullUpgradableSuperTokenProxy",
        "nameLocation": "305:29:101",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 40120,
            "mutability": "constant",
            "name": "_FACTORY_SLOT",
            "nameLocation": "476:13:101",
            "nodeType": "VariableDeclaration",
            "scope": 40181,
            "src": "450:108:101",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 40118,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "450:7:101",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307862386663643537313962336464663836323666333636343730356138396237666334373631323961353863316161356564613537633630306363313832316130",
              "id": 40119,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "492:66:101",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_83672282734439866432251741803922881230589350856051288581439071895558452421024_by_1",
                "typeString": "int_const 8367...(69 digits omitted)...1024"
              },
              "value": "0xb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0"
            },
            "visibility": "internal"
          },
          {
            "errorSelector": "05c5d819",
            "id": 40122,
            "name": "FUSTP_ALREADY_INITIALIZED",
            "nameLocation": "571:25:101",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 40121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "596:2:101"
            },
            "src": "565:34:101"
          },
          {
            "body": {
              "id": 40148,
              "nodeType": "Block",
              "src": "640:333:101",
              "statements": [
                {
                  "assignments": [
                    40126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40126,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "658:7:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 40148,
                      "src": "650:15:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 40125,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "650:7:101",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40127,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "650:15:101"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "684:78:101",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "721:31:101",
                        "value": {
                          "arguments": [
                            {
                              "name": "_FACTORY_SLOT",
                              "nodeType": "YulIdentifier",
                              "src": "738:13:101"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "732:5:101"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "732:20:101"
                        },
                        "variableNames": [
                          {
                            "name": "factory",
                            "nodeType": "YulIdentifier",
                            "src": "721:7:101"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 40120,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "738:13:101",
                      "valueSize": 1
                    },
                    {
                      "declaration": 40126,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "721:7:101",
                      "valueSize": 1
                    }
                  ],
                  "id": 40128,
                  "nodeType": "InlineAssembly",
                  "src": "675:87:101"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 40137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 40131,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40126,
                          "src": "783:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 40130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "775:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 40129,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "775:7:101",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 40132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "775:16:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 40135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "803:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 40134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "795:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 40133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "795:7:101",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 40136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "795:10:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "775:30:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40141,
                  "nodeType": "IfStatement",
                  "src": "771:70:101",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 40138,
                        "name": "FUSTP_ALREADY_INITIALIZED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40122,
                        "src": "814:25:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 40139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "814:27:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 40140,
                    "nodeType": "RevertStatement",
                    "src": "807:34:101"
                  }
                },
                {
                  "expression": {
                    "id": 40145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40142,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40126,
                      "src": "851:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 40143,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "861:3:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 40144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "865:6:101",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "861:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "851:20:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 40146,
                  "nodeType": "ExpressionStatement",
                  "src": "851:20:101"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "890:77:101",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "_FACTORY_SLOT",
                              "nodeType": "YulIdentifier",
                              "src": "934:13:101"
                            },
                            {
                              "name": "factory",
                              "nodeType": "YulIdentifier",
                              "src": "949:7:101"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "927:6:101"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "927:30:101"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "927:30:101"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 40120,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "934:13:101",
                      "valueSize": 1
                    },
                    {
                      "declaration": 40126,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "949:7:101",
                      "valueSize": 1
                    }
                  ],
                  "id": 40147,
                  "nodeType": "InlineAssembly",
                  "src": "881:86:101"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "id": 40149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "614:10:101",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "624:2:101"
            },
            "returnParameters": {
              "id": 40124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "640:0:101"
            },
            "scope": 40181,
            "src": "605:368:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              671
            ],
            "body": {
              "id": 40179,
              "nodeType": "Block",
              "src": "1052:241:101",
              "statements": [
                {
                  "assignments": [
                    40157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40157,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "1081:7:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 40179,
                      "src": "1062:26:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperTokenFactory_$24513",
                        "typeString": "contract ISuperTokenFactory"
                      },
                      "typeName": {
                        "id": 40156,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 40155,
                          "name": "ISuperTokenFactory",
                          "nameLocations": [
                            "1062:18:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24513,
                          "src": "1062:18:101"
                        },
                        "referencedDeclaration": 24513,
                        "src": "1062:18:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperTokenFactory_$24513",
                          "typeString": "contract ISuperTokenFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40158,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1062:26:101"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1107:78:101",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1144:31:101",
                        "value": {
                          "arguments": [
                            {
                              "name": "_FACTORY_SLOT",
                              "nodeType": "YulIdentifier",
                              "src": "1161:13:101"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "1155:5:101"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1155:20:101"
                        },
                        "variableNames": [
                          {
                            "name": "factory",
                            "nodeType": "YulIdentifier",
                            "src": "1144:7:101"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 40120,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1161:13:101",
                      "valueSize": 1
                    },
                    {
                      "declaration": 40157,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1144:7:101",
                      "valueSize": 1
                    }
                  ],
                  "id": 40159,
                  "nodeType": "InlineAssembly",
                  "src": "1098:87:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 40169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 40163,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40157,
                              "src": "1209:7:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperTokenFactory_$24513",
                                "typeString": "contract ISuperTokenFactory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISuperTokenFactory_$24513",
                                "typeString": "contract ISuperTokenFactory"
                              }
                            ],
                            "id": 40162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1201:7:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40161,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1201:7:101",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1201:16:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 40167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1229:1:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 40166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1221:7:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40165,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1221:7:101",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1221:10:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1201:30:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 40160,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1194:6:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 40170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1194:38:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40171,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:38:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 40174,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40157,
                            "src": "1257:7:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperTokenFactory_$24513",
                              "typeString": "contract ISuperTokenFactory"
                            }
                          },
                          "id": 40175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1265:18:101",
                          "memberName": "getSuperTokenLogic",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24420,
                          "src": "1257:26:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ISuperToken_$24383_$",
                            "typeString": "function () view external returns (contract ISuperToken)"
                          }
                        },
                        "id": 40176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1257:28:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24383",
                          "typeString": "contract ISuperToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$24383",
                          "typeString": "contract ISuperToken"
                        }
                      ],
                      "id": 40173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1249:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 40172,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1249:7:101",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 40177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:37:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 40154,
                  "id": 40178,
                  "nodeType": "Return",
                  "src": "1242:44:101"
                }
              ]
            },
            "id": 40180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "988:15:101",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 40151,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1015:8:101"
            },
            "parameters": {
              "id": 40150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1003:2:101"
            },
            "returnParameters": {
              "id": 40154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40153,
                  "mutability": "mutable",
                  "name": "impl",
                  "nameLocation": "1046:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 40180,
                  "src": "1038:12:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1037:14:101"
            },
            "scope": 40181,
            "src": "979:314:101",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 40182,
        "src": "296:1000:101",
        "usedErrors": [
          40122
        ]
      }
    ],
    "src": "35:1262:101"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-06-28T07:36:00.337Z",
  "devdoc": {
    "author": "Superfluid",
    "kind": "dev",
    "methods": {},
    "title": "Full upgradable super token proxy contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}